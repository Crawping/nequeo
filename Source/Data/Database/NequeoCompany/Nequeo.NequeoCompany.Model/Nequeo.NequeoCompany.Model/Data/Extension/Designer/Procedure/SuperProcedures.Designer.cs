// Warning 169 (Disables the 'Never used' warning)
#pragma warning disable 169
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nequeo.DataAccess.NequeoCompany.Data.Extension
{
    using System;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Data.Linq;
    using System.Data.Linq.SqlClient;
    using System.Data.Linq.Mapping;
    using Nequeo.Data.DataType;
    using Nequeo.Data;
    using Nequeo.Data.Linq;
    using Nequeo.Data.Control;
    using Nequeo.Data.Custom;
    using Nequeo.Data.LinqToSql;
    using Nequeo.Data.DataSet;
    using Nequeo.Data.Edm;
    using Nequeo.ComponentModel;
    
    
    /// <summary>
    /// The super object class.
    /// </summary>
    public partial class Super
    {
        
        #region Public Function Methods
        /// <summary>
        /// Execute the getemployeesuperbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetEmployeeSuperBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetEmployeeSuperBetweenDateResult> GetEmployeeSuperBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetEmployeeSuperBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getselectedemployeefundsuperbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="superFundID">Initial value of SuperFundID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetSelectedEmployeeFundSuperBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetSelectedEmployeeFundSuperBetweenDateResult> GetSelectedEmployeeFundSuperBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID, [FunctionParameterAttribute("@SuperFundID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> superFundID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, employeeID, superFundID);
            return ((List<Data.Extended.GetSelectedEmployeeFundSuperBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getselectedemployeesuperaccount routine.
        /// </summary>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetSelectedEmployeeSuperAccount", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetSelectedEmployeeSuperAccountResult> GetSelectedEmployeeSuperAccount([FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeID);
            return ((List<Data.Extended.GetSelectedEmployeeSuperAccountResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getselectedemployeesuperbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetSelectedEmployeeSuperBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetSelectedEmployeeSuperBetweenDateResult> GetSelectedEmployeeSuperBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, employeeID);
            return ((List<Data.Extended.GetSelectedEmployeeSuperBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getselectedemployeesuperpaymentslipbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetSelectedEmployeeSuperPaymentSlipBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenDateResult> GetSelectedEmployeeSuperPaymentSlipBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID, [FunctionParameterAttribute("@CompanyID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> companyID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, employeeID, companyID);
            return ((List<Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getselectedemployeesuperpaymentslipbetweendateall routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetSelectedEmployeeSuperPaymentSlipBetweenDateALL", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenDateALLResult> GetSelectedEmployeeSuperPaymentSlipBetweenDateALL([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID, [FunctionParameterAttribute("@CompanyID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> companyID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, employeeID, companyID);
            return ((List<Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenDateALLResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getselectedemployeesuperpaymentslipbetweenyear routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetSelectedEmployeeSuperPaymentSlipBetweenYear", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenYearResult> GetSelectedEmployeeSuperPaymentSlipBetweenYear([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID, [FunctionParameterAttribute("@CompanyID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> companyID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, employeeID, companyID);
            return ((List<Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenYearResult>)(result.ReturnValue));
        }
        #endregion
    }
}
namespace Nequeo.DataAccess.NequeoCompany.Data.Extended
{
    using System;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Data.Linq;
    using System.Data.Linq.SqlClient;
    using System.Data.Linq.Mapping;
    using Nequeo.Data.DataType;
    using Nequeo.Data;
    using Nequeo.Data.Linq;
    using Nequeo.Data.Control;
    using Nequeo.Data.Custom;
    using Nequeo.Data.LinqToSql;
    using Nequeo.Data.DataSet;
    using Nequeo.Data.Edm;
    using Nequeo.ComponentModel;
    
    
    #region GetEmployeeSuperBetweenDateResult Data Entity Type
    /// <summary>
    /// The getemployeesuperbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetEmployeeSuperBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetEmployeeSuperBetweenDateResult : DataBase
    {
        
        private int _SuperID;
        
        private int _EmployeeID;
        
        private int _SuperFundID;
        
        private System.DateTime _PaymentDate;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetEmployeeSuperBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the superid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the superid property for the object.")]
        [DataMemberAttribute(Name = "SuperID")]
        [XmlElementAttribute(ElementName = "SuperID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int SuperID
        {
            get
            {
                return this._SuperID;
            }
            set
            {
                if ((this._SuperID != value))
                {
                    this._SuperID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this._EmployeeID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the superfundid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the superfundid property for the object.")]
        [DataMemberAttribute(Name = "SuperFundID")]
        [XmlElementAttribute(ElementName = "SuperFundID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int SuperFundID
        {
            get
            {
                return this._SuperFundID;
            }
            set
            {
                if ((this._SuperFundID != value))
                {
                    this._SuperFundID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amount property for the object.")]
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this._Amount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getemployeesuperbetweendateresult data entity.
        /// </summary>
        /// <param name="superID">Initial value of SuperID.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="superFundID">Initial value of SuperFundID.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.Extended.GetEmployeeSuperBetweenDateResult entity.</returns>
        public static Data.Extended.GetEmployeeSuperBetweenDateResult CreateGetEmployeeSuperBetweenDateResult(int superID, int employeeID, int superFundID, System.DateTime paymentDate, decimal amount)
        {
            Data.Extended.GetEmployeeSuperBetweenDateResult getEmployeeSuperBetweenDateResult = new Data.Extended.GetEmployeeSuperBetweenDateResult();
            getEmployeeSuperBetweenDateResult.SuperID = superID;
            getEmployeeSuperBetweenDateResult.EmployeeID = employeeID;
            getEmployeeSuperBetweenDateResult.SuperFundID = superFundID;
            getEmployeeSuperBetweenDateResult.PaymentDate = paymentDate;
            getEmployeeSuperBetweenDateResult.Amount = amount;
            return getEmployeeSuperBetweenDateResult;
        }
    }
    #endregion
    
    #region GetSelectedEmployeeFundSuperBetweenDateResult Data Entity Type
    /// <summary>
    /// The getselectedemployeefundsuperbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetSelectedEmployeeFundSuperBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetSelectedEmployeeFundSuperBetweenDateResult : DataBase
    {
        
        private int _EmployeeID;
        
        private string _Firstname;
        
        private string _Surname;
        
        private string _DOB;
        
        private string _Address;
        
        private string _Suburb;
        
        private string _State;
        
        private string _Postcode;
        
        private string _HomeNumber;
        
        private string _FaxNumber;
        
        private string _MobileNumber;
        
        private string _EmailAddress;
        
        private string _Comments;
        
        private string _TFN;
        
        private decimal _AnnualWage;
        
        private double _SuperRate;
        
        private double _TaxRate;
        
        private double _BaseHours;
        
        private double _WageInclude;
        
        private double _BCoefficient;
        
        private string _PayInterval;
        
        private int _SuperID;
        
        private int _EmployeeID1;
        
        private int _SuperFundID;
        
        private System.DateTime _PaymentDate;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _Comments1;
        
        private int _SuperFundID1;
        
        private int _EmployeeID2;
        
        private string _SuperName;
        
        private string _PolicyNumber;
        
        private string _PhoneNumber;
        
        private string _WebSite;
        
        private string _Comments2;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetSelectedEmployeeFundSuperBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this._EmployeeID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the firstname property for the object.")]
        [DataMemberAttribute(Name = "Firstname")]
        [XmlElementAttribute(ElementName = "Firstname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Firstname
        {
            get
            {
                return this._Firstname;
            }
            set
            {
                if ((this._Firstname != value))
                {
                    this._Firstname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the surname property for the object.")]
        [DataMemberAttribute(Name = "Surname")]
        [XmlElementAttribute(ElementName = "Surname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if ((this._Surname != value))
                {
                    this._Surname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the dob property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the dob property for the object.")]
        [DataMemberAttribute(Name = "DOB")]
        [XmlElementAttribute(ElementName = "DOB", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string DOB
        {
            get
            {
                return this._DOB;
            }
            set
            {
                if ((this._DOB != value))
                {
                    this._DOB = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the address property for the object.")]
        [DataMemberAttribute(Name = "Address")]
        [XmlElementAttribute(ElementName = "Address", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this._Address = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suburb property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the suburb property for the object.")]
        [DataMemberAttribute(Name = "Suburb")]
        [XmlElementAttribute(ElementName = "Suburb", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Suburb
        {
            get
            {
                return this._Suburb;
            }
            set
            {
                if ((this._Suburb != value))
                {
                    this._Suburb = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the state property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the state property for the object.")]
        [DataMemberAttribute(Name = "State")]
        [XmlElementAttribute(ElementName = "State", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                if ((this._State != value))
                {
                    this._State = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postcode property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postcode property for the object.")]
        [DataMemberAttribute(Name = "Postcode")]
        [XmlElementAttribute(ElementName = "Postcode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Postcode
        {
            get
            {
                return this._Postcode;
            }
            set
            {
                if ((this._Postcode != value))
                {
                    this._Postcode = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the homenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the homenumber property for the object.")]
        [DataMemberAttribute(Name = "HomeNumber")]
        [XmlElementAttribute(ElementName = "HomeNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string HomeNumber
        {
            get
            {
                return this._HomeNumber;
            }
            set
            {
                if ((this._HomeNumber != value))
                {
                    this._HomeNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the faxnumber property for the object.")]
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this._FaxNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the mobilenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the mobilenumber property for the object.")]
        [DataMemberAttribute(Name = "MobileNumber")]
        [XmlElementAttribute(ElementName = "MobileNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this._MobileNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the emailaddress property for the object.")]
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this._EmailAddress = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tfn property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the tfn property for the object.")]
        [DataMemberAttribute(Name = "TFN")]
        [XmlElementAttribute(ElementName = "TFN", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string TFN
        {
            get
            {
                return this._TFN;
            }
            set
            {
                if ((this._TFN != value))
                {
                    this._TFN = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the annualwage property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the annualwage property for the object.")]
        [DataMemberAttribute(Name = "AnnualWage")]
        [XmlElementAttribute(ElementName = "AnnualWage", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal AnnualWage
        {
            get
            {
                return this._AnnualWage;
            }
            set
            {
                if ((this._AnnualWage != value))
                {
                    this._AnnualWage = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the superrate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the superrate property for the object.")]
        [DataMemberAttribute(Name = "SuperRate")]
        [XmlElementAttribute(ElementName = "SuperRate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double SuperRate
        {
            get
            {
                return this._SuperRate;
            }
            set
            {
                if ((this._SuperRate != value))
                {
                    this._SuperRate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the taxrate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the taxrate property for the object.")]
        [DataMemberAttribute(Name = "TaxRate")]
        [XmlElementAttribute(ElementName = "TaxRate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double TaxRate
        {
            get
            {
                return this._TaxRate;
            }
            set
            {
                if ((this._TaxRate != value))
                {
                    this._TaxRate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the basehours property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the basehours property for the object.")]
        [DataMemberAttribute(Name = "BaseHours")]
        [XmlElementAttribute(ElementName = "BaseHours", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double BaseHours
        {
            get
            {
                return this._BaseHours;
            }
            set
            {
                if ((this._BaseHours != value))
                {
                    this._BaseHours = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the wageinclude property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the wageinclude property for the object.")]
        [DataMemberAttribute(Name = "WageInclude")]
        [XmlElementAttribute(ElementName = "WageInclude", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double WageInclude
        {
            get
            {
                return this._WageInclude;
            }
            set
            {
                if ((this._WageInclude != value))
                {
                    this._WageInclude = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bcoefficient property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bcoefficient property for the object.")]
        [DataMemberAttribute(Name = "BCoefficient")]
        [XmlElementAttribute(ElementName = "BCoefficient", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double BCoefficient
        {
            get
            {
                return this._BCoefficient;
            }
            set
            {
                if ((this._BCoefficient != value))
                {
                    this._BCoefficient = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the payinterval property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the payinterval property for the object.")]
        [DataMemberAttribute(Name = "PayInterval")]
        [XmlElementAttribute(ElementName = "PayInterval", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string PayInterval
        {
            get
            {
                return this._PayInterval;
            }
            set
            {
                if ((this._PayInterval != value))
                {
                    this._PayInterval = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the superid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the superid property for the object.")]
        [DataMemberAttribute(Name = "SuperID")]
        [XmlElementAttribute(ElementName = "SuperID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int SuperID
        {
            get
            {
                return this._SuperID;
            }
            set
            {
                if ((this._SuperID != value))
                {
                    this._SuperID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid1 property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID1")]
        [XmlElementAttribute(ElementName = "EmployeeID1", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID1
        {
            get
            {
                return this._EmployeeID1;
            }
            set
            {
                if ((this._EmployeeID1 != value))
                {
                    this._EmployeeID1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the superfundid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the superfundid property for the object.")]
        [DataMemberAttribute(Name = "SuperFundID")]
        [XmlElementAttribute(ElementName = "SuperFundID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int SuperFundID
        {
            get
            {
                return this._SuperFundID;
            }
            set
            {
                if ((this._SuperFundID != value))
                {
                    this._SuperFundID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amount property for the object.")]
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this._Amount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments1 property for the object.")]
        [DataMemberAttribute(Name = "Comments1")]
        [XmlElementAttribute(ElementName = "Comments1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments1
        {
            get
            {
                return this._Comments1;
            }
            set
            {
                if ((this._Comments1 != value))
                {
                    this._Comments1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the superfundid1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the superfundid1 property for the object.")]
        [DataMemberAttribute(Name = "SuperFundID1")]
        [XmlElementAttribute(ElementName = "SuperFundID1", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int SuperFundID1
        {
            get
            {
                return this._SuperFundID1;
            }
            set
            {
                if ((this._SuperFundID1 != value))
                {
                    this._SuperFundID1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid2 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid2 property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID2")]
        [XmlElementAttribute(ElementName = "EmployeeID2", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID2
        {
            get
            {
                return this._EmployeeID2;
            }
            set
            {
                if ((this._EmployeeID2 != value))
                {
                    this._EmployeeID2 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the supername property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the supername property for the object.")]
        [DataMemberAttribute(Name = "SuperName")]
        [XmlElementAttribute(ElementName = "SuperName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string SuperName
        {
            get
            {
                return this._SuperName;
            }
            set
            {
                if ((this._SuperName != value))
                {
                    this._SuperName = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the policynumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the policynumber property for the object.")]
        [DataMemberAttribute(Name = "PolicyNumber")]
        [XmlElementAttribute(ElementName = "PolicyNumber", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string PolicyNumber
        {
            get
            {
                return this._PolicyNumber;
            }
            set
            {
                if ((this._PolicyNumber != value))
                {
                    this._PolicyNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the phonenumber property for the object.")]
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this._PhoneNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the website property for the object.")]
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this._WebSite = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments2 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments2 property for the object.")]
        [DataMemberAttribute(Name = "Comments2")]
        [XmlElementAttribute(ElementName = "Comments2", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments2
        {
            get
            {
                return this._Comments2;
            }
            set
            {
                if ((this._Comments2 != value))
                {
                    this._Comments2 = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getselectedemployeefundsuperbetweendateresult data entity.
        /// </summary>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="annualWage">Initial value of AnnualWage.</param>
        /// <param name="superRate">Initial value of SuperRate.</param>
        /// <param name="taxRate">Initial value of TaxRate.</param>
        /// <param name="baseHours">Initial value of BaseHours.</param>
        /// <param name="wageInclude">Initial value of WageInclude.</param>
        /// <param name="bCoefficient">Initial value of BCoefficient.</param>
        /// <param name="payInterval">Initial value of PayInterval.</param>
        /// <param name="superID">Initial value of SuperID.</param>
        /// <param name="employeeID1">Initial value of EmployeeID1.</param>
        /// <param name="superFundID">Initial value of SuperFundID.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <param name="superFundID1">Initial value of SuperFundID1.</param>
        /// <param name="employeeID2">Initial value of EmployeeID2.</param>
        /// <param name="superName">Initial value of SuperName.</param>
        /// <param name="policyNumber">Initial value of PolicyNumber.</param>
        /// <returns>The Data.Extended.GetSelectedEmployeeFundSuperBetweenDateResult entity.</returns>
        public static Data.Extended.GetSelectedEmployeeFundSuperBetweenDateResult CreateGetSelectedEmployeeFundSuperBetweenDateResult(
                    int employeeID, 
                    decimal annualWage, 
                    double superRate, 
                    double taxRate, 
                    double baseHours, 
                    double wageInclude, 
                    double bCoefficient, 
                    string payInterval, 
                    int superID, 
                    int employeeID1, 
                    int superFundID, 
                    System.DateTime paymentDate, 
                    decimal amount, 
                    int superFundID1, 
                    int employeeID2, 
                    string superName, 
                    string policyNumber)
        {
            Data.Extended.GetSelectedEmployeeFundSuperBetweenDateResult getSelectedEmployeeFundSuperBetweenDateResult = new Data.Extended.GetSelectedEmployeeFundSuperBetweenDateResult();
            getSelectedEmployeeFundSuperBetweenDateResult.EmployeeID = employeeID;
            getSelectedEmployeeFundSuperBetweenDateResult.AnnualWage = annualWage;
            getSelectedEmployeeFundSuperBetweenDateResult.SuperRate = superRate;
            getSelectedEmployeeFundSuperBetweenDateResult.TaxRate = taxRate;
            getSelectedEmployeeFundSuperBetweenDateResult.BaseHours = baseHours;
            getSelectedEmployeeFundSuperBetweenDateResult.WageInclude = wageInclude;
            getSelectedEmployeeFundSuperBetweenDateResult.BCoefficient = bCoefficient;
            getSelectedEmployeeFundSuperBetweenDateResult.PayInterval = payInterval;
            getSelectedEmployeeFundSuperBetweenDateResult.SuperID = superID;
            getSelectedEmployeeFundSuperBetweenDateResult.EmployeeID1 = employeeID1;
            getSelectedEmployeeFundSuperBetweenDateResult.SuperFundID = superFundID;
            getSelectedEmployeeFundSuperBetweenDateResult.PaymentDate = paymentDate;
            getSelectedEmployeeFundSuperBetweenDateResult.Amount = amount;
            getSelectedEmployeeFundSuperBetweenDateResult.SuperFundID1 = superFundID1;
            getSelectedEmployeeFundSuperBetweenDateResult.EmployeeID2 = employeeID2;
            getSelectedEmployeeFundSuperBetweenDateResult.SuperName = superName;
            getSelectedEmployeeFundSuperBetweenDateResult.PolicyNumber = policyNumber;
            return getSelectedEmployeeFundSuperBetweenDateResult;
        }
    }
    #endregion
    
    #region GetSelectedEmployeeSuperAccountResult Data Entity Type
    /// <summary>
    /// The getselectedemployeesuperaccountresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetSelectedEmployeeSuperAccountResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetSelectedEmployeeSuperAccountResult : DataBase
    {
        
        private int _SuperFundID;
        
        private int _EmployeeID;
        
        private string _SuperName;
        
        private string _PolicyNumber;
        
        private string _PhoneNumber;
        
        private string _WebSite;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetSelectedEmployeeSuperAccountResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the superfundid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the superfundid property for the object.")]
        [DataMemberAttribute(Name = "SuperFundID")]
        [XmlElementAttribute(ElementName = "SuperFundID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int SuperFundID
        {
            get
            {
                return this._SuperFundID;
            }
            set
            {
                if ((this._SuperFundID != value))
                {
                    this._SuperFundID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this._EmployeeID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the supername property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the supername property for the object.")]
        [DataMemberAttribute(Name = "SuperName")]
        [XmlElementAttribute(ElementName = "SuperName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string SuperName
        {
            get
            {
                return this._SuperName;
            }
            set
            {
                if ((this._SuperName != value))
                {
                    this._SuperName = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the policynumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the policynumber property for the object.")]
        [DataMemberAttribute(Name = "PolicyNumber")]
        [XmlElementAttribute(ElementName = "PolicyNumber", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string PolicyNumber
        {
            get
            {
                return this._PolicyNumber;
            }
            set
            {
                if ((this._PolicyNumber != value))
                {
                    this._PolicyNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the phonenumber property for the object.")]
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this._PhoneNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the website property for the object.")]
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this._WebSite = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getselectedemployeesuperaccountresult data entity.
        /// </summary>
        /// <param name="superFundID">Initial value of SuperFundID.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="superName">Initial value of SuperName.</param>
        /// <param name="policyNumber">Initial value of PolicyNumber.</param>
        /// <returns>The Data.Extended.GetSelectedEmployeeSuperAccountResult entity.</returns>
        public static Data.Extended.GetSelectedEmployeeSuperAccountResult CreateGetSelectedEmployeeSuperAccountResult(int superFundID, int employeeID, string superName, string policyNumber)
        {
            Data.Extended.GetSelectedEmployeeSuperAccountResult getSelectedEmployeeSuperAccountResult = new Data.Extended.GetSelectedEmployeeSuperAccountResult();
            getSelectedEmployeeSuperAccountResult.SuperFundID = superFundID;
            getSelectedEmployeeSuperAccountResult.EmployeeID = employeeID;
            getSelectedEmployeeSuperAccountResult.SuperName = superName;
            getSelectedEmployeeSuperAccountResult.PolicyNumber = policyNumber;
            return getSelectedEmployeeSuperAccountResult;
        }
    }
    #endregion
    
    #region GetSelectedEmployeeSuperBetweenDateResult Data Entity Type
    /// <summary>
    /// The getselectedemployeesuperbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetSelectedEmployeeSuperBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetSelectedEmployeeSuperBetweenDateResult : DataBase
    {
        
        private int _EmployeeID;
        
        private string _Firstname;
        
        private string _Surname;
        
        private string _DOB;
        
        private string _Address;
        
        private string _Suburb;
        
        private string _State;
        
        private string _Postcode;
        
        private string _HomeNumber;
        
        private string _FaxNumber;
        
        private string _MobileNumber;
        
        private string _EmailAddress;
        
        private string _Comments;
        
        private string _TFN;
        
        private decimal _AnnualWage;
        
        private double _SuperRate;
        
        private double _TaxRate;
        
        private double _BaseHours;
        
        private double _WageInclude;
        
        private double _BCoefficient;
        
        private string _PayInterval;
        
        private int _SuperID;
        
        private int _EmployeeID1;
        
        private int _SuperFundID;
        
        private System.DateTime _PaymentDate;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _Comments1;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetSelectedEmployeeSuperBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this._EmployeeID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the firstname property for the object.")]
        [DataMemberAttribute(Name = "Firstname")]
        [XmlElementAttribute(ElementName = "Firstname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Firstname
        {
            get
            {
                return this._Firstname;
            }
            set
            {
                if ((this._Firstname != value))
                {
                    this._Firstname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the surname property for the object.")]
        [DataMemberAttribute(Name = "Surname")]
        [XmlElementAttribute(ElementName = "Surname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if ((this._Surname != value))
                {
                    this._Surname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the dob property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the dob property for the object.")]
        [DataMemberAttribute(Name = "DOB")]
        [XmlElementAttribute(ElementName = "DOB", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string DOB
        {
            get
            {
                return this._DOB;
            }
            set
            {
                if ((this._DOB != value))
                {
                    this._DOB = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the address property for the object.")]
        [DataMemberAttribute(Name = "Address")]
        [XmlElementAttribute(ElementName = "Address", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this._Address = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suburb property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the suburb property for the object.")]
        [DataMemberAttribute(Name = "Suburb")]
        [XmlElementAttribute(ElementName = "Suburb", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Suburb
        {
            get
            {
                return this._Suburb;
            }
            set
            {
                if ((this._Suburb != value))
                {
                    this._Suburb = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the state property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the state property for the object.")]
        [DataMemberAttribute(Name = "State")]
        [XmlElementAttribute(ElementName = "State", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                if ((this._State != value))
                {
                    this._State = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postcode property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postcode property for the object.")]
        [DataMemberAttribute(Name = "Postcode")]
        [XmlElementAttribute(ElementName = "Postcode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Postcode
        {
            get
            {
                return this._Postcode;
            }
            set
            {
                if ((this._Postcode != value))
                {
                    this._Postcode = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the homenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the homenumber property for the object.")]
        [DataMemberAttribute(Name = "HomeNumber")]
        [XmlElementAttribute(ElementName = "HomeNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string HomeNumber
        {
            get
            {
                return this._HomeNumber;
            }
            set
            {
                if ((this._HomeNumber != value))
                {
                    this._HomeNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the faxnumber property for the object.")]
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this._FaxNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the mobilenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the mobilenumber property for the object.")]
        [DataMemberAttribute(Name = "MobileNumber")]
        [XmlElementAttribute(ElementName = "MobileNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this._MobileNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the emailaddress property for the object.")]
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this._EmailAddress = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tfn property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the tfn property for the object.")]
        [DataMemberAttribute(Name = "TFN")]
        [XmlElementAttribute(ElementName = "TFN", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string TFN
        {
            get
            {
                return this._TFN;
            }
            set
            {
                if ((this._TFN != value))
                {
                    this._TFN = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the annualwage property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the annualwage property for the object.")]
        [DataMemberAttribute(Name = "AnnualWage")]
        [XmlElementAttribute(ElementName = "AnnualWage", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal AnnualWage
        {
            get
            {
                return this._AnnualWage;
            }
            set
            {
                if ((this._AnnualWage != value))
                {
                    this._AnnualWage = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the superrate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the superrate property for the object.")]
        [DataMemberAttribute(Name = "SuperRate")]
        [XmlElementAttribute(ElementName = "SuperRate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double SuperRate
        {
            get
            {
                return this._SuperRate;
            }
            set
            {
                if ((this._SuperRate != value))
                {
                    this._SuperRate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the taxrate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the taxrate property for the object.")]
        [DataMemberAttribute(Name = "TaxRate")]
        [XmlElementAttribute(ElementName = "TaxRate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double TaxRate
        {
            get
            {
                return this._TaxRate;
            }
            set
            {
                if ((this._TaxRate != value))
                {
                    this._TaxRate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the basehours property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the basehours property for the object.")]
        [DataMemberAttribute(Name = "BaseHours")]
        [XmlElementAttribute(ElementName = "BaseHours", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double BaseHours
        {
            get
            {
                return this._BaseHours;
            }
            set
            {
                if ((this._BaseHours != value))
                {
                    this._BaseHours = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the wageinclude property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the wageinclude property for the object.")]
        [DataMemberAttribute(Name = "WageInclude")]
        [XmlElementAttribute(ElementName = "WageInclude", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double WageInclude
        {
            get
            {
                return this._WageInclude;
            }
            set
            {
                if ((this._WageInclude != value))
                {
                    this._WageInclude = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bcoefficient property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bcoefficient property for the object.")]
        [DataMemberAttribute(Name = "BCoefficient")]
        [XmlElementAttribute(ElementName = "BCoefficient", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double BCoefficient
        {
            get
            {
                return this._BCoefficient;
            }
            set
            {
                if ((this._BCoefficient != value))
                {
                    this._BCoefficient = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the payinterval property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the payinterval property for the object.")]
        [DataMemberAttribute(Name = "PayInterval")]
        [XmlElementAttribute(ElementName = "PayInterval", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string PayInterval
        {
            get
            {
                return this._PayInterval;
            }
            set
            {
                if ((this._PayInterval != value))
                {
                    this._PayInterval = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the superid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the superid property for the object.")]
        [DataMemberAttribute(Name = "SuperID")]
        [XmlElementAttribute(ElementName = "SuperID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int SuperID
        {
            get
            {
                return this._SuperID;
            }
            set
            {
                if ((this._SuperID != value))
                {
                    this._SuperID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid1 property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID1")]
        [XmlElementAttribute(ElementName = "EmployeeID1", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID1
        {
            get
            {
                return this._EmployeeID1;
            }
            set
            {
                if ((this._EmployeeID1 != value))
                {
                    this._EmployeeID1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the superfundid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the superfundid property for the object.")]
        [DataMemberAttribute(Name = "SuperFundID")]
        [XmlElementAttribute(ElementName = "SuperFundID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int SuperFundID
        {
            get
            {
                return this._SuperFundID;
            }
            set
            {
                if ((this._SuperFundID != value))
                {
                    this._SuperFundID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amount property for the object.")]
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this._Amount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments1 property for the object.")]
        [DataMemberAttribute(Name = "Comments1")]
        [XmlElementAttribute(ElementName = "Comments1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments1
        {
            get
            {
                return this._Comments1;
            }
            set
            {
                if ((this._Comments1 != value))
                {
                    this._Comments1 = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getselectedemployeesuperbetweendateresult data entity.
        /// </summary>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="annualWage">Initial value of AnnualWage.</param>
        /// <param name="superRate">Initial value of SuperRate.</param>
        /// <param name="taxRate">Initial value of TaxRate.</param>
        /// <param name="baseHours">Initial value of BaseHours.</param>
        /// <param name="wageInclude">Initial value of WageInclude.</param>
        /// <param name="bCoefficient">Initial value of BCoefficient.</param>
        /// <param name="payInterval">Initial value of PayInterval.</param>
        /// <param name="superID">Initial value of SuperID.</param>
        /// <param name="employeeID1">Initial value of EmployeeID1.</param>
        /// <param name="superFundID">Initial value of SuperFundID.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.Extended.GetSelectedEmployeeSuperBetweenDateResult entity.</returns>
        public static Data.Extended.GetSelectedEmployeeSuperBetweenDateResult CreateGetSelectedEmployeeSuperBetweenDateResult(int employeeID, decimal annualWage, double superRate, double taxRate, double baseHours, double wageInclude, double bCoefficient, string payInterval, int superID, int employeeID1, int superFundID, System.DateTime paymentDate, decimal amount)
        {
            Data.Extended.GetSelectedEmployeeSuperBetweenDateResult getSelectedEmployeeSuperBetweenDateResult = new Data.Extended.GetSelectedEmployeeSuperBetweenDateResult();
            getSelectedEmployeeSuperBetweenDateResult.EmployeeID = employeeID;
            getSelectedEmployeeSuperBetweenDateResult.AnnualWage = annualWage;
            getSelectedEmployeeSuperBetweenDateResult.SuperRate = superRate;
            getSelectedEmployeeSuperBetweenDateResult.TaxRate = taxRate;
            getSelectedEmployeeSuperBetweenDateResult.BaseHours = baseHours;
            getSelectedEmployeeSuperBetweenDateResult.WageInclude = wageInclude;
            getSelectedEmployeeSuperBetweenDateResult.BCoefficient = bCoefficient;
            getSelectedEmployeeSuperBetweenDateResult.PayInterval = payInterval;
            getSelectedEmployeeSuperBetweenDateResult.SuperID = superID;
            getSelectedEmployeeSuperBetweenDateResult.EmployeeID1 = employeeID1;
            getSelectedEmployeeSuperBetweenDateResult.SuperFundID = superFundID;
            getSelectedEmployeeSuperBetweenDateResult.PaymentDate = paymentDate;
            getSelectedEmployeeSuperBetweenDateResult.Amount = amount;
            return getSelectedEmployeeSuperBetweenDateResult;
        }
    }
    #endregion
    
    #region GetSelectedEmployeeSuperPaymentSlipBetweenDateResult Data Entity Type
    /// <summary>
    /// The getselectedemployeesuperpaymentslipbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetSelectedEmployeeSuperPaymentSlipBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetSelectedEmployeeSuperPaymentSlipBetweenDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _AmountTotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetSelectedEmployeeSuperPaymentSlipBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the amounttotal property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amounttotal property for the object.")]
        [DataMemberAttribute(Name = "AmountTotal")]
        [XmlElementAttribute(ElementName = "AmountTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> AmountTotal
        {
            get
            {
                return this._AmountTotal;
            }
            set
            {
                if ((this._AmountTotal != value))
                {
                    this._AmountTotal = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getselectedemployeesuperpaymentslipbetweendateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenDateResult entity.</returns>
        public static Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenDateResult CreateGetSelectedEmployeeSuperPaymentSlipBetweenDateResult()
        {
            Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenDateResult getSelectedEmployeeSuperPaymentSlipBetweenDateResult = new Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenDateResult();
            return getSelectedEmployeeSuperPaymentSlipBetweenDateResult;
        }
    }
    #endregion
    
    #region GetSelectedEmployeeSuperPaymentSlipBetweenDateALLResult Data Entity Type
    /// <summary>
    /// The getselectedemployeesuperpaymentslipbetweendateallresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetSelectedEmployeeSuperPaymentSlipBetweenDateALLResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetSelectedEmployeeSuperPaymentSlipBetweenDateALLResult : DataBase
    {
        
        private int _SuperID;
        
        private int _EmployeeID;
        
        private int _SuperFundID;
        
        private System.DateTime _PaymentDate;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetSelectedEmployeeSuperPaymentSlipBetweenDateALLResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the superid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the superid property for the object.")]
        [DataMemberAttribute(Name = "SuperID")]
        [XmlElementAttribute(ElementName = "SuperID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int SuperID
        {
            get
            {
                return this._SuperID;
            }
            set
            {
                if ((this._SuperID != value))
                {
                    this._SuperID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this._EmployeeID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the superfundid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the superfundid property for the object.")]
        [DataMemberAttribute(Name = "SuperFundID")]
        [XmlElementAttribute(ElementName = "SuperFundID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int SuperFundID
        {
            get
            {
                return this._SuperFundID;
            }
            set
            {
                if ((this._SuperFundID != value))
                {
                    this._SuperFundID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amount property for the object.")]
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this._Amount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getselectedemployeesuperpaymentslipbetweendateallresult data entity.
        /// </summary>
        /// <param name="superID">Initial value of SuperID.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="superFundID">Initial value of SuperFundID.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenDateALLResult entity.</returns>
        public static Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenDateALLResult CreateGetSelectedEmployeeSuperPaymentSlipBetweenDateALLResult(int superID, int employeeID, int superFundID, System.DateTime paymentDate, decimal amount)
        {
            Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenDateALLResult getSelectedEmployeeSuperPaymentSlipBetweenDateALLResult = new Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenDateALLResult();
            getSelectedEmployeeSuperPaymentSlipBetweenDateALLResult.SuperID = superID;
            getSelectedEmployeeSuperPaymentSlipBetweenDateALLResult.EmployeeID = employeeID;
            getSelectedEmployeeSuperPaymentSlipBetweenDateALLResult.SuperFundID = superFundID;
            getSelectedEmployeeSuperPaymentSlipBetweenDateALLResult.PaymentDate = paymentDate;
            getSelectedEmployeeSuperPaymentSlipBetweenDateALLResult.Amount = amount;
            return getSelectedEmployeeSuperPaymentSlipBetweenDateALLResult;
        }
    }
    #endregion
    
    #region GetSelectedEmployeeSuperPaymentSlipBetweenYearResult Data Entity Type
    /// <summary>
    /// The getselectedemployeesuperpaymentslipbetweenyearresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetSelectedEmployeeSuperPaymentSlipBetweenYearResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetSelectedEmployeeSuperPaymentSlipBetweenYearResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _AmounTotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetSelectedEmployeeSuperPaymentSlipBetweenYearResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the amountotal property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amountotal property for the object.")]
        [DataMemberAttribute(Name = "AmounTotal")]
        [XmlElementAttribute(ElementName = "AmounTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> AmounTotal
        {
            get
            {
                return this._AmounTotal;
            }
            set
            {
                if ((this._AmounTotal != value))
                {
                    this._AmounTotal = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getselectedemployeesuperpaymentslipbetweenyearresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenYearResult entity.</returns>
        public static Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenYearResult CreateGetSelectedEmployeeSuperPaymentSlipBetweenYearResult()
        {
            Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenYearResult getSelectedEmployeeSuperPaymentSlipBetweenYearResult = new Data.Extended.GetSelectedEmployeeSuperPaymentSlipBetweenYearResult();
            return getSelectedEmployeeSuperPaymentSlipBetweenYearResult;
        }
    }
    #endregion
}

#pragma warning restore 169
