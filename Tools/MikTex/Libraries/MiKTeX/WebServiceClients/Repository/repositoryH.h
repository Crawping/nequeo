/* repositoryH.h
   Generated by gSOAP 2.8.29 for Repository.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef repositoryH_H
#define repositoryH_H
#include "repositoryStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);
SOAP_FMAC3 void * SOAP_FMAC4 repository_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 repository_fdelete(struct soap_clist*);
SOAP_FMAC3 int SOAP_FMAC4 repository_fbase(int, int);
SOAP_FMAC3 void SOAP_FMAC4 repository_finsert(struct soap*, int, int, void*, size_t, const void*, void**);

#ifndef SOAP_TYPE_byte_DEFINED
#define SOAP_TYPE_byte_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

inline int soap_write_byte(struct soap *soap, char const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_byte(soap, p, "byte", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

inline int soap_read_byte(struct soap *soap, char *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_byte(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_int_DEFINED
#define SOAP_TYPE_int_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

inline int soap_write_int(struct soap *soap, int const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_int(soap, p, "int", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

inline int soap_read_int(struct soap *soap, int *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_int(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_double_DEFINED
#define SOAP_TYPE_double_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

inline int soap_write_double(struct soap *soap, double const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_double(soap, p, "double", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

inline int soap_read_double(struct soap *soap, double *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_double(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_bool_DEFINED
#define SOAP_TYPE_bool_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

inline bool * soap_new_bool(struct soap *soap, int n = -1)
{	return static_cast<bool *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(bool)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

inline int soap_write_bool(struct soap *soap, bool const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_bool(soap, p, "boolean", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

inline int soap_read_bool(struct soap *soap, bool *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_bool(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep7__RepositoryReleaseState_DEFINED
#define SOAP_TYPE_mtrep7__RepositoryReleaseState_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep7__RepositoryReleaseState(struct soap*, enum mtrep7__RepositoryReleaseState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep7__RepositoryReleaseState(struct soap*, const char*, int, const enum mtrep7__RepositoryReleaseState *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep7__RepositoryReleaseState2s(struct soap*, enum mtrep7__RepositoryReleaseState);
SOAP_FMAC3 enum mtrep7__RepositoryReleaseState * SOAP_FMAC4 soap_in_mtrep7__RepositoryReleaseState(struct soap*, const char*, enum mtrep7__RepositoryReleaseState *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep7__RepositoryReleaseState(struct soap*, const char*, enum mtrep7__RepositoryReleaseState *);

inline enum mtrep7__RepositoryReleaseState * soap_new_mtrep7__RepositoryReleaseState(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep7__RepositoryReleaseState *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep7__RepositoryReleaseState)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep7__RepositoryReleaseState(struct soap*, const enum mtrep7__RepositoryReleaseState *, const char*, const char*);

inline int soap_write_mtrep7__RepositoryReleaseState(struct soap *soap, enum mtrep7__RepositoryReleaseState const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep7__RepositoryReleaseState(soap, p, "mtrep7:RepositoryReleaseState", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep7__RepositoryReleaseState * SOAP_FMAC4 soap_get_mtrep7__RepositoryReleaseState(struct soap*, enum mtrep7__RepositoryReleaseState *, const char*, const char*);

inline int soap_read_mtrep7__RepositoryReleaseState(struct soap *soap, enum mtrep7__RepositoryReleaseState *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep7__RepositoryReleaseState(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep7__RepositoryStatus_DEFINED
#define SOAP_TYPE_mtrep7__RepositoryStatus_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep7__RepositoryStatus(struct soap*, enum mtrep7__RepositoryStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep7__RepositoryStatus(struct soap*, const char*, int, const enum mtrep7__RepositoryStatus *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep7__RepositoryStatus2s(struct soap*, enum mtrep7__RepositoryStatus);
SOAP_FMAC3 enum mtrep7__RepositoryStatus * SOAP_FMAC4 soap_in_mtrep7__RepositoryStatus(struct soap*, const char*, enum mtrep7__RepositoryStatus *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep7__RepositoryStatus(struct soap*, const char*, enum mtrep7__RepositoryStatus *);

inline enum mtrep7__RepositoryStatus * soap_new_mtrep7__RepositoryStatus(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep7__RepositoryStatus *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep7__RepositoryStatus)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep7__RepositoryStatus(struct soap*, const enum mtrep7__RepositoryStatus *, const char*, const char*);

inline int soap_write_mtrep7__RepositoryStatus(struct soap *soap, enum mtrep7__RepositoryStatus const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep7__RepositoryStatus(soap, p, "mtrep7:RepositoryStatus", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep7__RepositoryStatus * SOAP_FMAC4 soap_get_mtrep7__RepositoryStatus(struct soap*, enum mtrep7__RepositoryStatus *, const char*, const char*);

inline int soap_read_mtrep7__RepositoryStatus(struct soap *soap, enum mtrep7__RepositoryStatus *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep7__RepositoryStatus(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep7__PackageLevel_DEFINED
#define SOAP_TYPE_mtrep7__PackageLevel_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep7__PackageLevel(struct soap*, enum mtrep7__PackageLevel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep7__PackageLevel(struct soap*, const char*, int, const enum mtrep7__PackageLevel *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep7__PackageLevel2s(struct soap*, enum mtrep7__PackageLevel);
SOAP_FMAC3 enum mtrep7__PackageLevel * SOAP_FMAC4 soap_in_mtrep7__PackageLevel(struct soap*, const char*, enum mtrep7__PackageLevel *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep7__PackageLevel(struct soap*, const char*, enum mtrep7__PackageLevel *);

inline enum mtrep7__PackageLevel * soap_new_mtrep7__PackageLevel(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep7__PackageLevel *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep7__PackageLevel)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep7__PackageLevel(struct soap*, const enum mtrep7__PackageLevel *, const char*, const char*);

inline int soap_write_mtrep7__PackageLevel(struct soap *soap, enum mtrep7__PackageLevel const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep7__PackageLevel(soap, p, "mtrep7:PackageLevel", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep7__PackageLevel * SOAP_FMAC4 soap_get_mtrep7__PackageLevel(struct soap*, enum mtrep7__PackageLevel *, const char*, const char*);

inline int soap_read_mtrep7__PackageLevel(struct soap *soap, enum mtrep7__PackageLevel *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep7__PackageLevel(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep7__RepositoryIntegrity_DEFINED
#define SOAP_TYPE_mtrep7__RepositoryIntegrity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep7__RepositoryIntegrity(struct soap*, enum mtrep7__RepositoryIntegrity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep7__RepositoryIntegrity(struct soap*, const char*, int, const enum mtrep7__RepositoryIntegrity *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep7__RepositoryIntegrity2s(struct soap*, enum mtrep7__RepositoryIntegrity);
SOAP_FMAC3 enum mtrep7__RepositoryIntegrity * SOAP_FMAC4 soap_in_mtrep7__RepositoryIntegrity(struct soap*, const char*, enum mtrep7__RepositoryIntegrity *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep7__RepositoryIntegrity(struct soap*, const char*, enum mtrep7__RepositoryIntegrity *);

inline enum mtrep7__RepositoryIntegrity * soap_new_mtrep7__RepositoryIntegrity(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep7__RepositoryIntegrity *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep7__RepositoryIntegrity)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep7__RepositoryIntegrity(struct soap*, const enum mtrep7__RepositoryIntegrity *, const char*, const char*);

inline int soap_write_mtrep7__RepositoryIntegrity(struct soap *soap, enum mtrep7__RepositoryIntegrity const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep7__RepositoryIntegrity(soap, p, "mtrep7:RepositoryIntegrity", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep7__RepositoryIntegrity * SOAP_FMAC4 soap_get_mtrep7__RepositoryIntegrity(struct soap*, enum mtrep7__RepositoryIntegrity *, const char*, const char*);

inline int soap_read_mtrep7__RepositoryIntegrity(struct soap *soap, enum mtrep7__RepositoryIntegrity *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep7__RepositoryIntegrity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep6__RepositoryStatus_DEFINED
#define SOAP_TYPE_mtrep6__RepositoryStatus_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep6__RepositoryStatus(struct soap*, enum mtrep6__RepositoryStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep6__RepositoryStatus(struct soap*, const char*, int, const enum mtrep6__RepositoryStatus *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep6__RepositoryStatus2s(struct soap*, enum mtrep6__RepositoryStatus);
SOAP_FMAC3 enum mtrep6__RepositoryStatus * SOAP_FMAC4 soap_in_mtrep6__RepositoryStatus(struct soap*, const char*, enum mtrep6__RepositoryStatus *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep6__RepositoryStatus(struct soap*, const char*, enum mtrep6__RepositoryStatus *);

inline enum mtrep6__RepositoryStatus * soap_new_mtrep6__RepositoryStatus(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep6__RepositoryStatus *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep6__RepositoryStatus)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep6__RepositoryStatus(struct soap*, const enum mtrep6__RepositoryStatus *, const char*, const char*);

inline int soap_write_mtrep6__RepositoryStatus(struct soap *soap, enum mtrep6__RepositoryStatus const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep6__RepositoryStatus(soap, p, "mtrep6:RepositoryStatus", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep6__RepositoryStatus * SOAP_FMAC4 soap_get_mtrep6__RepositoryStatus(struct soap*, enum mtrep6__RepositoryStatus *, const char*, const char*);

inline int soap_read_mtrep6__RepositoryStatus(struct soap *soap, enum mtrep6__RepositoryStatus *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep6__RepositoryStatus(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep6__PackageLevel_DEFINED
#define SOAP_TYPE_mtrep6__PackageLevel_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep6__PackageLevel(struct soap*, enum mtrep6__PackageLevel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep6__PackageLevel(struct soap*, const char*, int, const enum mtrep6__PackageLevel *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep6__PackageLevel2s(struct soap*, enum mtrep6__PackageLevel);
SOAP_FMAC3 enum mtrep6__PackageLevel * SOAP_FMAC4 soap_in_mtrep6__PackageLevel(struct soap*, const char*, enum mtrep6__PackageLevel *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep6__PackageLevel(struct soap*, const char*, enum mtrep6__PackageLevel *);

inline enum mtrep6__PackageLevel * soap_new_mtrep6__PackageLevel(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep6__PackageLevel *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep6__PackageLevel)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep6__PackageLevel(struct soap*, const enum mtrep6__PackageLevel *, const char*, const char*);

inline int soap_write_mtrep6__PackageLevel(struct soap *soap, enum mtrep6__PackageLevel const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep6__PackageLevel(soap, p, "mtrep6:PackageLevel", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep6__PackageLevel * SOAP_FMAC4 soap_get_mtrep6__PackageLevel(struct soap*, enum mtrep6__PackageLevel *, const char*, const char*);

inline int soap_read_mtrep6__PackageLevel(struct soap *soap, enum mtrep6__PackageLevel *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep6__PackageLevel(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep6__RepositoryIntegrity_DEFINED
#define SOAP_TYPE_mtrep6__RepositoryIntegrity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep6__RepositoryIntegrity(struct soap*, enum mtrep6__RepositoryIntegrity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep6__RepositoryIntegrity(struct soap*, const char*, int, const enum mtrep6__RepositoryIntegrity *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep6__RepositoryIntegrity2s(struct soap*, enum mtrep6__RepositoryIntegrity);
SOAP_FMAC3 enum mtrep6__RepositoryIntegrity * SOAP_FMAC4 soap_in_mtrep6__RepositoryIntegrity(struct soap*, const char*, enum mtrep6__RepositoryIntegrity *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep6__RepositoryIntegrity(struct soap*, const char*, enum mtrep6__RepositoryIntegrity *);

inline enum mtrep6__RepositoryIntegrity * soap_new_mtrep6__RepositoryIntegrity(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep6__RepositoryIntegrity *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep6__RepositoryIntegrity)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep6__RepositoryIntegrity(struct soap*, const enum mtrep6__RepositoryIntegrity *, const char*, const char*);

inline int soap_write_mtrep6__RepositoryIntegrity(struct soap *soap, enum mtrep6__RepositoryIntegrity const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep6__RepositoryIntegrity(soap, p, "mtrep6:RepositoryIntegrity", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep6__RepositoryIntegrity * SOAP_FMAC4 soap_get_mtrep6__RepositoryIntegrity(struct soap*, enum mtrep6__RepositoryIntegrity *, const char*, const char*);

inline int soap_read_mtrep6__RepositoryIntegrity(struct soap *soap, enum mtrep6__RepositoryIntegrity *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep6__RepositoryIntegrity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep6__RepositoryReleaseState_DEFINED
#define SOAP_TYPE_mtrep6__RepositoryReleaseState_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep6__RepositoryReleaseState(struct soap*, enum mtrep6__RepositoryReleaseState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep6__RepositoryReleaseState(struct soap*, const char*, int, const enum mtrep6__RepositoryReleaseState *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep6__RepositoryReleaseState2s(struct soap*, enum mtrep6__RepositoryReleaseState);
SOAP_FMAC3 enum mtrep6__RepositoryReleaseState * SOAP_FMAC4 soap_in_mtrep6__RepositoryReleaseState(struct soap*, const char*, enum mtrep6__RepositoryReleaseState *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep6__RepositoryReleaseState(struct soap*, const char*, enum mtrep6__RepositoryReleaseState *);

inline enum mtrep6__RepositoryReleaseState * soap_new_mtrep6__RepositoryReleaseState(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep6__RepositoryReleaseState *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep6__RepositoryReleaseState)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep6__RepositoryReleaseState(struct soap*, const enum mtrep6__RepositoryReleaseState *, const char*, const char*);

inline int soap_write_mtrep6__RepositoryReleaseState(struct soap *soap, enum mtrep6__RepositoryReleaseState const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep6__RepositoryReleaseState(soap, p, "mtrep6:RepositoryReleaseState", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep6__RepositoryReleaseState * SOAP_FMAC4 soap_get_mtrep6__RepositoryReleaseState(struct soap*, enum mtrep6__RepositoryReleaseState *, const char*, const char*);

inline int soap_read_mtrep6__RepositoryReleaseState(struct soap *soap, enum mtrep6__RepositoryReleaseState *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep6__RepositoryReleaseState(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep5__RepositoryStatus_DEFINED
#define SOAP_TYPE_mtrep5__RepositoryStatus_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep5__RepositoryStatus(struct soap*, enum mtrep5__RepositoryStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep5__RepositoryStatus(struct soap*, const char*, int, const enum mtrep5__RepositoryStatus *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep5__RepositoryStatus2s(struct soap*, enum mtrep5__RepositoryStatus);
SOAP_FMAC3 enum mtrep5__RepositoryStatus * SOAP_FMAC4 soap_in_mtrep5__RepositoryStatus(struct soap*, const char*, enum mtrep5__RepositoryStatus *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep5__RepositoryStatus(struct soap*, const char*, enum mtrep5__RepositoryStatus *);

inline enum mtrep5__RepositoryStatus * soap_new_mtrep5__RepositoryStatus(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep5__RepositoryStatus *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep5__RepositoryStatus)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep5__RepositoryStatus(struct soap*, const enum mtrep5__RepositoryStatus *, const char*, const char*);

inline int soap_write_mtrep5__RepositoryStatus(struct soap *soap, enum mtrep5__RepositoryStatus const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep5__RepositoryStatus(soap, p, "mtrep5:RepositoryStatus", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep5__RepositoryStatus * SOAP_FMAC4 soap_get_mtrep5__RepositoryStatus(struct soap*, enum mtrep5__RepositoryStatus *, const char*, const char*);

inline int soap_read_mtrep5__RepositoryStatus(struct soap *soap, enum mtrep5__RepositoryStatus *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep5__RepositoryStatus(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep5__PackageLevel_DEFINED
#define SOAP_TYPE_mtrep5__PackageLevel_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep5__PackageLevel(struct soap*, enum mtrep5__PackageLevel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep5__PackageLevel(struct soap*, const char*, int, const enum mtrep5__PackageLevel *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep5__PackageLevel2s(struct soap*, enum mtrep5__PackageLevel);
SOAP_FMAC3 enum mtrep5__PackageLevel * SOAP_FMAC4 soap_in_mtrep5__PackageLevel(struct soap*, const char*, enum mtrep5__PackageLevel *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep5__PackageLevel(struct soap*, const char*, enum mtrep5__PackageLevel *);

inline enum mtrep5__PackageLevel * soap_new_mtrep5__PackageLevel(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep5__PackageLevel *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep5__PackageLevel)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep5__PackageLevel(struct soap*, const enum mtrep5__PackageLevel *, const char*, const char*);

inline int soap_write_mtrep5__PackageLevel(struct soap *soap, enum mtrep5__PackageLevel const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep5__PackageLevel(soap, p, "mtrep5:PackageLevel", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep5__PackageLevel * SOAP_FMAC4 soap_get_mtrep5__PackageLevel(struct soap*, enum mtrep5__PackageLevel *, const char*, const char*);

inline int soap_read_mtrep5__PackageLevel(struct soap *soap, enum mtrep5__PackageLevel *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep5__PackageLevel(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep5__RepositoryIntegrity_DEFINED
#define SOAP_TYPE_mtrep5__RepositoryIntegrity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep5__RepositoryIntegrity(struct soap*, enum mtrep5__RepositoryIntegrity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep5__RepositoryIntegrity(struct soap*, const char*, int, const enum mtrep5__RepositoryIntegrity *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep5__RepositoryIntegrity2s(struct soap*, enum mtrep5__RepositoryIntegrity);
SOAP_FMAC3 enum mtrep5__RepositoryIntegrity * SOAP_FMAC4 soap_in_mtrep5__RepositoryIntegrity(struct soap*, const char*, enum mtrep5__RepositoryIntegrity *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep5__RepositoryIntegrity(struct soap*, const char*, enum mtrep5__RepositoryIntegrity *);

inline enum mtrep5__RepositoryIntegrity * soap_new_mtrep5__RepositoryIntegrity(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep5__RepositoryIntegrity *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep5__RepositoryIntegrity)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep5__RepositoryIntegrity(struct soap*, const enum mtrep5__RepositoryIntegrity *, const char*, const char*);

inline int soap_write_mtrep5__RepositoryIntegrity(struct soap *soap, enum mtrep5__RepositoryIntegrity const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep5__RepositoryIntegrity(soap, p, "mtrep5:RepositoryIntegrity", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep5__RepositoryIntegrity * SOAP_FMAC4 soap_get_mtrep5__RepositoryIntegrity(struct soap*, enum mtrep5__RepositoryIntegrity *, const char*, const char*);

inline int soap_read_mtrep5__RepositoryIntegrity(struct soap *soap, enum mtrep5__RepositoryIntegrity *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep5__RepositoryIntegrity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep4__RepositoryStatus_DEFINED
#define SOAP_TYPE_mtrep4__RepositoryStatus_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep4__RepositoryStatus(struct soap*, enum mtrep4__RepositoryStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep4__RepositoryStatus(struct soap*, const char*, int, const enum mtrep4__RepositoryStatus *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep4__RepositoryStatus2s(struct soap*, enum mtrep4__RepositoryStatus);
SOAP_FMAC3 enum mtrep4__RepositoryStatus * SOAP_FMAC4 soap_in_mtrep4__RepositoryStatus(struct soap*, const char*, enum mtrep4__RepositoryStatus *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep4__RepositoryStatus(struct soap*, const char*, enum mtrep4__RepositoryStatus *);

inline enum mtrep4__RepositoryStatus * soap_new_mtrep4__RepositoryStatus(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep4__RepositoryStatus *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep4__RepositoryStatus)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep4__RepositoryStatus(struct soap*, const enum mtrep4__RepositoryStatus *, const char*, const char*);

inline int soap_write_mtrep4__RepositoryStatus(struct soap *soap, enum mtrep4__RepositoryStatus const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep4__RepositoryStatus(soap, p, "mtrep4:RepositoryStatus", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep4__RepositoryStatus * SOAP_FMAC4 soap_get_mtrep4__RepositoryStatus(struct soap*, enum mtrep4__RepositoryStatus *, const char*, const char*);

inline int soap_read_mtrep4__RepositoryStatus(struct soap *soap, enum mtrep4__RepositoryStatus *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep4__RepositoryStatus(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep4__PackageLevel_DEFINED
#define SOAP_TYPE_mtrep4__PackageLevel_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep4__PackageLevel(struct soap*, enum mtrep4__PackageLevel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep4__PackageLevel(struct soap*, const char*, int, const enum mtrep4__PackageLevel *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep4__PackageLevel2s(struct soap*, enum mtrep4__PackageLevel);
SOAP_FMAC3 enum mtrep4__PackageLevel * SOAP_FMAC4 soap_in_mtrep4__PackageLevel(struct soap*, const char*, enum mtrep4__PackageLevel *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep4__PackageLevel(struct soap*, const char*, enum mtrep4__PackageLevel *);

inline enum mtrep4__PackageLevel * soap_new_mtrep4__PackageLevel(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep4__PackageLevel *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep4__PackageLevel)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep4__PackageLevel(struct soap*, const enum mtrep4__PackageLevel *, const char*, const char*);

inline int soap_write_mtrep4__PackageLevel(struct soap *soap, enum mtrep4__PackageLevel const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep4__PackageLevel(soap, p, "mtrep4:PackageLevel", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep4__PackageLevel * SOAP_FMAC4 soap_get_mtrep4__PackageLevel(struct soap*, enum mtrep4__PackageLevel *, const char*, const char*);

inline int soap_read_mtrep4__PackageLevel(struct soap *soap, enum mtrep4__PackageLevel *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep4__PackageLevel(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep4__RepositoryIntegrity_DEFINED
#define SOAP_TYPE_mtrep4__RepositoryIntegrity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep4__RepositoryIntegrity(struct soap*, enum mtrep4__RepositoryIntegrity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep4__RepositoryIntegrity(struct soap*, const char*, int, const enum mtrep4__RepositoryIntegrity *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep4__RepositoryIntegrity2s(struct soap*, enum mtrep4__RepositoryIntegrity);
SOAP_FMAC3 enum mtrep4__RepositoryIntegrity * SOAP_FMAC4 soap_in_mtrep4__RepositoryIntegrity(struct soap*, const char*, enum mtrep4__RepositoryIntegrity *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep4__RepositoryIntegrity(struct soap*, const char*, enum mtrep4__RepositoryIntegrity *);

inline enum mtrep4__RepositoryIntegrity * soap_new_mtrep4__RepositoryIntegrity(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep4__RepositoryIntegrity *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep4__RepositoryIntegrity)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep4__RepositoryIntegrity(struct soap*, const enum mtrep4__RepositoryIntegrity *, const char*, const char*);

inline int soap_write_mtrep4__RepositoryIntegrity(struct soap *soap, enum mtrep4__RepositoryIntegrity const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep4__RepositoryIntegrity(soap, p, "mtrep4:RepositoryIntegrity", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep4__RepositoryIntegrity * SOAP_FMAC4 soap_get_mtrep4__RepositoryIntegrity(struct soap*, enum mtrep4__RepositoryIntegrity *, const char*, const char*);

inline int soap_read_mtrep4__RepositoryIntegrity(struct soap *soap, enum mtrep4__RepositoryIntegrity *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep4__RepositoryIntegrity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep3__RepositoryStatus_DEFINED
#define SOAP_TYPE_mtrep3__RepositoryStatus_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep3__RepositoryStatus(struct soap*, enum mtrep3__RepositoryStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep3__RepositoryStatus(struct soap*, const char*, int, const enum mtrep3__RepositoryStatus *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep3__RepositoryStatus2s(struct soap*, enum mtrep3__RepositoryStatus);
SOAP_FMAC3 enum mtrep3__RepositoryStatus * SOAP_FMAC4 soap_in_mtrep3__RepositoryStatus(struct soap*, const char*, enum mtrep3__RepositoryStatus *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep3__RepositoryStatus(struct soap*, const char*, enum mtrep3__RepositoryStatus *);

inline enum mtrep3__RepositoryStatus * soap_new_mtrep3__RepositoryStatus(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep3__RepositoryStatus *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep3__RepositoryStatus)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep3__RepositoryStatus(struct soap*, const enum mtrep3__RepositoryStatus *, const char*, const char*);

inline int soap_write_mtrep3__RepositoryStatus(struct soap *soap, enum mtrep3__RepositoryStatus const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep3__RepositoryStatus(soap, p, "mtrep3:RepositoryStatus", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep3__RepositoryStatus * SOAP_FMAC4 soap_get_mtrep3__RepositoryStatus(struct soap*, enum mtrep3__RepositoryStatus *, const char*, const char*);

inline int soap_read_mtrep3__RepositoryStatus(struct soap *soap, enum mtrep3__RepositoryStatus *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep3__RepositoryStatus(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep3__PackageLevel_DEFINED
#define SOAP_TYPE_mtrep3__PackageLevel_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep3__PackageLevel(struct soap*, enum mtrep3__PackageLevel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep3__PackageLevel(struct soap*, const char*, int, const enum mtrep3__PackageLevel *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep3__PackageLevel2s(struct soap*, enum mtrep3__PackageLevel);
SOAP_FMAC3 enum mtrep3__PackageLevel * SOAP_FMAC4 soap_in_mtrep3__PackageLevel(struct soap*, const char*, enum mtrep3__PackageLevel *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep3__PackageLevel(struct soap*, const char*, enum mtrep3__PackageLevel *);

inline enum mtrep3__PackageLevel * soap_new_mtrep3__PackageLevel(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep3__PackageLevel *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep3__PackageLevel)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep3__PackageLevel(struct soap*, const enum mtrep3__PackageLevel *, const char*, const char*);

inline int soap_write_mtrep3__PackageLevel(struct soap *soap, enum mtrep3__PackageLevel const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep3__PackageLevel(soap, p, "mtrep3:PackageLevel", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep3__PackageLevel * SOAP_FMAC4 soap_get_mtrep3__PackageLevel(struct soap*, enum mtrep3__PackageLevel *, const char*, const char*);

inline int soap_read_mtrep3__PackageLevel(struct soap *soap, enum mtrep3__PackageLevel *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep3__PackageLevel(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep3__RepositoryIntegrity_DEFINED
#define SOAP_TYPE_mtrep3__RepositoryIntegrity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep3__RepositoryIntegrity(struct soap*, enum mtrep3__RepositoryIntegrity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep3__RepositoryIntegrity(struct soap*, const char*, int, const enum mtrep3__RepositoryIntegrity *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep3__RepositoryIntegrity2s(struct soap*, enum mtrep3__RepositoryIntegrity);
SOAP_FMAC3 enum mtrep3__RepositoryIntegrity * SOAP_FMAC4 soap_in_mtrep3__RepositoryIntegrity(struct soap*, const char*, enum mtrep3__RepositoryIntegrity *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep3__RepositoryIntegrity(struct soap*, const char*, enum mtrep3__RepositoryIntegrity *);

inline enum mtrep3__RepositoryIntegrity * soap_new_mtrep3__RepositoryIntegrity(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep3__RepositoryIntegrity *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep3__RepositoryIntegrity)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep3__RepositoryIntegrity(struct soap*, const enum mtrep3__RepositoryIntegrity *, const char*, const char*);

inline int soap_write_mtrep3__RepositoryIntegrity(struct soap *soap, enum mtrep3__RepositoryIntegrity const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep3__RepositoryIntegrity(soap, p, "mtrep3:RepositoryIntegrity", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep3__RepositoryIntegrity * SOAP_FMAC4 soap_get_mtrep3__RepositoryIntegrity(struct soap*, enum mtrep3__RepositoryIntegrity *, const char*, const char*);

inline int soap_read_mtrep3__RepositoryIntegrity(struct soap *soap, enum mtrep3__RepositoryIntegrity *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep3__RepositoryIntegrity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep__RepositoryStatus_DEFINED
#define SOAP_TYPE_mtrep__RepositoryStatus_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep__RepositoryStatus(struct soap*, enum mtrep__RepositoryStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep__RepositoryStatus(struct soap*, const char*, int, const enum mtrep__RepositoryStatus *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep__RepositoryStatus2s(struct soap*, enum mtrep__RepositoryStatus);
SOAP_FMAC3 enum mtrep__RepositoryStatus * SOAP_FMAC4 soap_in_mtrep__RepositoryStatus(struct soap*, const char*, enum mtrep__RepositoryStatus *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep__RepositoryStatus(struct soap*, const char*, enum mtrep__RepositoryStatus *);

inline enum mtrep__RepositoryStatus * soap_new_mtrep__RepositoryStatus(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep__RepositoryStatus *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep__RepositoryStatus)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep__RepositoryStatus(struct soap*, const enum mtrep__RepositoryStatus *, const char*, const char*);

inline int soap_write_mtrep__RepositoryStatus(struct soap *soap, enum mtrep__RepositoryStatus const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep__RepositoryStatus(soap, p, "mtrep:RepositoryStatus", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep__RepositoryStatus * SOAP_FMAC4 soap_get_mtrep__RepositoryStatus(struct soap*, enum mtrep__RepositoryStatus *, const char*, const char*);

inline int soap_read_mtrep__RepositoryStatus(struct soap *soap, enum mtrep__RepositoryStatus *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep__RepositoryStatus(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep__PackageLevel_DEFINED
#define SOAP_TYPE_mtrep__PackageLevel_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep__PackageLevel(struct soap*, enum mtrep__PackageLevel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep__PackageLevel(struct soap*, const char*, int, const enum mtrep__PackageLevel *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep__PackageLevel2s(struct soap*, enum mtrep__PackageLevel);
SOAP_FMAC3 enum mtrep__PackageLevel * SOAP_FMAC4 soap_in_mtrep__PackageLevel(struct soap*, const char*, enum mtrep__PackageLevel *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep__PackageLevel(struct soap*, const char*, enum mtrep__PackageLevel *);

inline enum mtrep__PackageLevel * soap_new_mtrep__PackageLevel(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep__PackageLevel *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep__PackageLevel)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep__PackageLevel(struct soap*, const enum mtrep__PackageLevel *, const char*, const char*);

inline int soap_write_mtrep__PackageLevel(struct soap *soap, enum mtrep__PackageLevel const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep__PackageLevel(soap, p, "mtrep:PackageLevel", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep__PackageLevel * SOAP_FMAC4 soap_get_mtrep__PackageLevel(struct soap*, enum mtrep__PackageLevel *, const char*, const char*);

inline int soap_read_mtrep__PackageLevel(struct soap *soap, enum mtrep__PackageLevel *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep__PackageLevel(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep__RepositoryIntegrity_DEFINED
#define SOAP_TYPE_mtrep__RepositoryIntegrity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mtrep__RepositoryIntegrity(struct soap*, enum mtrep__RepositoryIntegrity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep__RepositoryIntegrity(struct soap*, const char*, int, const enum mtrep__RepositoryIntegrity *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_mtrep__RepositoryIntegrity2s(struct soap*, enum mtrep__RepositoryIntegrity);
SOAP_FMAC3 enum mtrep__RepositoryIntegrity * SOAP_FMAC4 soap_in_mtrep__RepositoryIntegrity(struct soap*, const char*, enum mtrep__RepositoryIntegrity *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2mtrep__RepositoryIntegrity(struct soap*, const char*, enum mtrep__RepositoryIntegrity *);

inline enum mtrep__RepositoryIntegrity * soap_new_mtrep__RepositoryIntegrity(struct soap *soap, int n = -1)
{	return static_cast<enum mtrep__RepositoryIntegrity *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum mtrep__RepositoryIntegrity)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_mtrep__RepositoryIntegrity(struct soap*, const enum mtrep__RepositoryIntegrity *, const char*, const char*);

inline int soap_write_mtrep__RepositoryIntegrity(struct soap *soap, enum mtrep__RepositoryIntegrity const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_mtrep__RepositoryIntegrity(soap, p, "mtrep:RepositoryIntegrity", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum mtrep__RepositoryIntegrity * SOAP_FMAC4 soap_get_mtrep__RepositoryIntegrity(struct soap*, enum mtrep__RepositoryIntegrity *, const char*, const char*);

inline int soap_read_mtrep__RepositoryIntegrity(struct soap *soap, enum mtrep__RepositoryIntegrity *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_mtrep__RepositoryIntegrity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_std__string_DEFINED
#define SOAP_TYPE_std__string_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);
SOAP_FMAC1 std::string * SOAP_FMAC2 repository_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1)
{	return repository_instantiate_std__string(soap, n, NULL, NULL, NULL);
}

inline std::string * soap_new_req_std__string(
	struct soap *soap)
{	std::string *_p = soap_new_std__string(soap);
	if (_p)
	{	soap_default_std__string(soap, _p);
	}
	return _p;
}

inline std::string * soap_new_set_std__string(
	struct soap *soap)
{	std::string *_p = soap_new_std__string(soap);
	if (_p)
	{	soap_default_std__string(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_std__string(struct soap *soap, std::string const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_std__string(soap, p, "string", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

inline int soap_read_std__string(struct soap *soap, std::string *p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_std__string(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep7__TryGetRepositoryInfo3Response_DEFINED
#define SOAP_TYPE__mtrep7__TryGetRepositoryInfo3Response_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep7__TryGetRepositoryInfo3Response(struct soap*, const char*, int, const _mtrep7__TryGetRepositoryInfo3Response *, const char*);
SOAP_FMAC3 _mtrep7__TryGetRepositoryInfo3Response * SOAP_FMAC4 soap_in__mtrep7__TryGetRepositoryInfo3Response(struct soap*, const char*, _mtrep7__TryGetRepositoryInfo3Response *, const char*);
SOAP_FMAC1 _mtrep7__TryGetRepositoryInfo3Response * SOAP_FMAC2 repository_instantiate__mtrep7__TryGetRepositoryInfo3Response(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep7__TryGetRepositoryInfo3Response * soap_new__mtrep7__TryGetRepositoryInfo3Response(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep7__TryGetRepositoryInfo3Response(soap, n, NULL, NULL, NULL);
}

inline _mtrep7__TryGetRepositoryInfo3Response * soap_new_req__mtrep7__TryGetRepositoryInfo3Response(
	struct soap *soap,
	bool TryGetRepositoryInfo3Result)
{	_mtrep7__TryGetRepositoryInfo3Response *_p = soap_new__mtrep7__TryGetRepositoryInfo3Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep7__TryGetRepositoryInfo3Response::TryGetRepositoryInfo3Result = TryGetRepositoryInfo3Result;
	}
	return _p;
}

inline _mtrep7__TryGetRepositoryInfo3Response * soap_new_set__mtrep7__TryGetRepositoryInfo3Response(
	struct soap *soap,
	bool TryGetRepositoryInfo3Result,
	mtrep7__RepositoryInfo3 *repositoryInfo)
{	_mtrep7__TryGetRepositoryInfo3Response *_p = soap_new__mtrep7__TryGetRepositoryInfo3Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep7__TryGetRepositoryInfo3Response::TryGetRepositoryInfo3Result = TryGetRepositoryInfo3Result;
		_p->_mtrep7__TryGetRepositoryInfo3Response::repositoryInfo = repositoryInfo;
	}
	return _p;
}

inline int soap_write__mtrep7__TryGetRepositoryInfo3Response(struct soap *soap, _mtrep7__TryGetRepositoryInfo3Response const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep7:TryGetRepositoryInfo3Response", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep7__TryGetRepositoryInfo3Response * SOAP_FMAC4 soap_get__mtrep7__TryGetRepositoryInfo3Response(struct soap*, _mtrep7__TryGetRepositoryInfo3Response *, const char*, const char*);

inline int soap_read__mtrep7__TryGetRepositoryInfo3Response(struct soap *soap, _mtrep7__TryGetRepositoryInfo3Response *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep7__TryGetRepositoryInfo3Response(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep7__TryGetRepositoryInfo3_DEFINED
#define SOAP_TYPE__mtrep7__TryGetRepositoryInfo3_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep7__TryGetRepositoryInfo3(struct soap*, const char*, int, const _mtrep7__TryGetRepositoryInfo3 *, const char*);
SOAP_FMAC3 _mtrep7__TryGetRepositoryInfo3 * SOAP_FMAC4 soap_in__mtrep7__TryGetRepositoryInfo3(struct soap*, const char*, _mtrep7__TryGetRepositoryInfo3 *, const char*);
SOAP_FMAC1 _mtrep7__TryGetRepositoryInfo3 * SOAP_FMAC2 repository_instantiate__mtrep7__TryGetRepositoryInfo3(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep7__TryGetRepositoryInfo3 * soap_new__mtrep7__TryGetRepositoryInfo3(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep7__TryGetRepositoryInfo3(soap, n, NULL, NULL, NULL);
}

inline _mtrep7__TryGetRepositoryInfo3 * soap_new_req__mtrep7__TryGetRepositoryInfo3(
	struct soap *soap)
{	_mtrep7__TryGetRepositoryInfo3 *_p = soap_new__mtrep7__TryGetRepositoryInfo3(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep7__TryGetRepositoryInfo3 * soap_new_set__mtrep7__TryGetRepositoryInfo3(
	struct soap *soap,
	mtrep7__ClientInfo *clientInfo,
	std::string *url)
{	_mtrep7__TryGetRepositoryInfo3 *_p = soap_new__mtrep7__TryGetRepositoryInfo3(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep7__TryGetRepositoryInfo3::clientInfo = clientInfo;
		_p->_mtrep7__TryGetRepositoryInfo3::url = url;
	}
	return _p;
}

inline int soap_write__mtrep7__TryGetRepositoryInfo3(struct soap *soap, _mtrep7__TryGetRepositoryInfo3 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep7:TryGetRepositoryInfo3", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep7__TryGetRepositoryInfo3 * SOAP_FMAC4 soap_get__mtrep7__TryGetRepositoryInfo3(struct soap*, _mtrep7__TryGetRepositoryInfo3 *, const char*, const char*);

inline int soap_read__mtrep7__TryGetRepositoryInfo3(struct soap *soap, _mtrep7__TryGetRepositoryInfo3 *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep7__TryGetRepositoryInfo3(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep7__VerifyRepository2Response_DEFINED
#define SOAP_TYPE__mtrep7__VerifyRepository2Response_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep7__VerifyRepository2Response(struct soap*, const char*, int, const _mtrep7__VerifyRepository2Response *, const char*);
SOAP_FMAC3 _mtrep7__VerifyRepository2Response * SOAP_FMAC4 soap_in__mtrep7__VerifyRepository2Response(struct soap*, const char*, _mtrep7__VerifyRepository2Response *, const char*);
SOAP_FMAC1 _mtrep7__VerifyRepository2Response * SOAP_FMAC2 repository_instantiate__mtrep7__VerifyRepository2Response(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep7__VerifyRepository2Response * soap_new__mtrep7__VerifyRepository2Response(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep7__VerifyRepository2Response(soap, n, NULL, NULL, NULL);
}

inline _mtrep7__VerifyRepository2Response * soap_new_req__mtrep7__VerifyRepository2Response(
	struct soap *soap,
	bool VerifyRepository2Result)
{	_mtrep7__VerifyRepository2Response *_p = soap_new__mtrep7__VerifyRepository2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep7__VerifyRepository2Response::VerifyRepository2Result = VerifyRepository2Result;
	}
	return _p;
}

inline _mtrep7__VerifyRepository2Response * soap_new_set__mtrep7__VerifyRepository2Response(
	struct soap *soap,
	bool VerifyRepository2Result,
	mtrep7__RepositoryInfo3 *repositoryInfo)
{	_mtrep7__VerifyRepository2Response *_p = soap_new__mtrep7__VerifyRepository2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep7__VerifyRepository2Response::VerifyRepository2Result = VerifyRepository2Result;
		_p->_mtrep7__VerifyRepository2Response::repositoryInfo = repositoryInfo;
	}
	return _p;
}

inline int soap_write__mtrep7__VerifyRepository2Response(struct soap *soap, _mtrep7__VerifyRepository2Response const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep7:VerifyRepository2Response", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep7__VerifyRepository2Response * SOAP_FMAC4 soap_get__mtrep7__VerifyRepository2Response(struct soap*, _mtrep7__VerifyRepository2Response *, const char*, const char*);

inline int soap_read__mtrep7__VerifyRepository2Response(struct soap *soap, _mtrep7__VerifyRepository2Response *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep7__VerifyRepository2Response(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep7__VerifyRepository2_DEFINED
#define SOAP_TYPE__mtrep7__VerifyRepository2_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep7__VerifyRepository2(struct soap*, const char*, int, const _mtrep7__VerifyRepository2 *, const char*);
SOAP_FMAC3 _mtrep7__VerifyRepository2 * SOAP_FMAC4 soap_in__mtrep7__VerifyRepository2(struct soap*, const char*, _mtrep7__VerifyRepository2 *, const char*);
SOAP_FMAC1 _mtrep7__VerifyRepository2 * SOAP_FMAC2 repository_instantiate__mtrep7__VerifyRepository2(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep7__VerifyRepository2 * soap_new__mtrep7__VerifyRepository2(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep7__VerifyRepository2(soap, n, NULL, NULL, NULL);
}

inline _mtrep7__VerifyRepository2 * soap_new_req__mtrep7__VerifyRepository2(
	struct soap *soap)
{	_mtrep7__VerifyRepository2 *_p = soap_new__mtrep7__VerifyRepository2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep7__VerifyRepository2 * soap_new_set__mtrep7__VerifyRepository2(
	struct soap *soap,
	mtrep7__ClientInfo *clientInfo,
	std::string *url)
{	_mtrep7__VerifyRepository2 *_p = soap_new__mtrep7__VerifyRepository2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep7__VerifyRepository2::clientInfo = clientInfo;
		_p->_mtrep7__VerifyRepository2::url = url;
	}
	return _p;
}

inline int soap_write__mtrep7__VerifyRepository2(struct soap *soap, _mtrep7__VerifyRepository2 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep7:VerifyRepository2", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep7__VerifyRepository2 * SOAP_FMAC4 soap_get__mtrep7__VerifyRepository2(struct soap*, _mtrep7__VerifyRepository2 *, const char*, const char*);

inline int soap_read__mtrep7__VerifyRepository2(struct soap *soap, _mtrep7__VerifyRepository2 *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep7__VerifyRepository2(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep7__RepositoryInfo_DEFINED
#define SOAP_TYPE_mtrep7__RepositoryInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep7__RepositoryInfo(struct soap*, const char*, int, const mtrep7__RepositoryInfo *, const char*);
SOAP_FMAC3 mtrep7__RepositoryInfo * SOAP_FMAC4 soap_in_mtrep7__RepositoryInfo(struct soap*, const char*, mtrep7__RepositoryInfo *, const char*);
SOAP_FMAC1 mtrep7__RepositoryInfo * SOAP_FMAC2 repository_instantiate_mtrep7__RepositoryInfo(struct soap*, int, const char*, const char*, size_t*);

inline mtrep7__RepositoryInfo * soap_new_mtrep7__RepositoryInfo(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep7__RepositoryInfo(soap, n, NULL, NULL, NULL);
}

inline mtrep7__RepositoryInfo * soap_new_req_mtrep7__RepositoryInfo(
	struct soap *soap,
	int Date,
	int Delay,
	enum mtrep7__RepositoryIntegrity Integrity,
	enum mtrep7__PackageLevel Level,
	enum mtrep7__RepositoryStatus Status,
	int Version)
{	mtrep7__RepositoryInfo *_p = soap_new_mtrep7__RepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep7__RepositoryInfo::Date = Date;
		_p->mtrep7__RepositoryInfo::Delay = Delay;
		_p->mtrep7__RepositoryInfo::Integrity = Integrity;
		_p->mtrep7__RepositoryInfo::Level = Level;
		_p->mtrep7__RepositoryInfo::Status = Status;
		_p->mtrep7__RepositoryInfo::Version = Version;
	}
	return _p;
}

inline mtrep7__RepositoryInfo * soap_new_set_mtrep7__RepositoryInfo(
	struct soap *soap,
	std::string *Country,
	int Date,
	int Delay,
	std::string *Description,
	enum mtrep7__RepositoryIntegrity Integrity,
	enum mtrep7__PackageLevel Level,
	enum mtrep7__RepositoryStatus Status,
	std::string *Url,
	int Version)
{	mtrep7__RepositoryInfo *_p = soap_new_mtrep7__RepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep7__RepositoryInfo::Country = Country;
		_p->mtrep7__RepositoryInfo::Date = Date;
		_p->mtrep7__RepositoryInfo::Delay = Delay;
		_p->mtrep7__RepositoryInfo::Description = Description;
		_p->mtrep7__RepositoryInfo::Integrity = Integrity;
		_p->mtrep7__RepositoryInfo::Level = Level;
		_p->mtrep7__RepositoryInfo::Status = Status;
		_p->mtrep7__RepositoryInfo::Url = Url;
		_p->mtrep7__RepositoryInfo::Version = Version;
	}
	return _p;
}

inline int soap_write_mtrep7__RepositoryInfo(struct soap *soap, mtrep7__RepositoryInfo const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep7:RepositoryInfo", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep7__RepositoryInfo * SOAP_FMAC4 soap_get_mtrep7__RepositoryInfo(struct soap*, mtrep7__RepositoryInfo *, const char*, const char*);

inline int soap_read_mtrep7__RepositoryInfo(struct soap *soap, mtrep7__RepositoryInfo *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep7__RepositoryInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep7__RepositoryInfo2_DEFINED
#define SOAP_TYPE_mtrep7__RepositoryInfo2_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep7__RepositoryInfo2(struct soap*, const char*, int, const mtrep7__RepositoryInfo2 *, const char*);
SOAP_FMAC3 mtrep7__RepositoryInfo2 * SOAP_FMAC4 soap_in_mtrep7__RepositoryInfo2(struct soap*, const char*, mtrep7__RepositoryInfo2 *, const char*);
SOAP_FMAC1 mtrep7__RepositoryInfo2 * SOAP_FMAC2 repository_instantiate_mtrep7__RepositoryInfo2(struct soap*, int, const char*, const char*, size_t*);

inline mtrep7__RepositoryInfo2 * soap_new_mtrep7__RepositoryInfo2(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep7__RepositoryInfo2(soap, n, NULL, NULL, NULL);
}

inline mtrep7__RepositoryInfo2 * soap_new_req_mtrep7__RepositoryInfo2(
	struct soap *soap,
	double Latitude,
	double Longitude,
	int Date1,
	int Delay1,
	enum mtrep7__RepositoryIntegrity Integrity1,
	enum mtrep7__PackageLevel Level1,
	enum mtrep7__RepositoryStatus Status1,
	int Version1)
{	mtrep7__RepositoryInfo2 *_p = soap_new_mtrep7__RepositoryInfo2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep7__RepositoryInfo2::Latitude = Latitude;
		_p->mtrep7__RepositoryInfo2::Longitude = Longitude;
		_p->mtrep7__RepositoryInfo::Date = Date1;
		_p->mtrep7__RepositoryInfo::Delay = Delay1;
		_p->mtrep7__RepositoryInfo::Integrity = Integrity1;
		_p->mtrep7__RepositoryInfo::Level = Level1;
		_p->mtrep7__RepositoryInfo::Status = Status1;
		_p->mtrep7__RepositoryInfo::Version = Version1;
	}
	return _p;
}

inline mtrep7__RepositoryInfo2 * soap_new_set_mtrep7__RepositoryInfo2(
	struct soap *soap,
	std::string *CountryCode,
	std::string *City,
	double Latitude,
	double Longitude,
	std::string *Country1,
	int Date1,
	int Delay1,
	std::string *Description1,
	enum mtrep7__RepositoryIntegrity Integrity1,
	enum mtrep7__PackageLevel Level1,
	enum mtrep7__RepositoryStatus Status1,
	std::string *Url1,
	int Version1)
{	mtrep7__RepositoryInfo2 *_p = soap_new_mtrep7__RepositoryInfo2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep7__RepositoryInfo2::CountryCode = CountryCode;
		_p->mtrep7__RepositoryInfo2::City = City;
		_p->mtrep7__RepositoryInfo2::Latitude = Latitude;
		_p->mtrep7__RepositoryInfo2::Longitude = Longitude;
		_p->mtrep7__RepositoryInfo::Country = Country1;
		_p->mtrep7__RepositoryInfo::Date = Date1;
		_p->mtrep7__RepositoryInfo::Delay = Delay1;
		_p->mtrep7__RepositoryInfo::Description = Description1;
		_p->mtrep7__RepositoryInfo::Integrity = Integrity1;
		_p->mtrep7__RepositoryInfo::Level = Level1;
		_p->mtrep7__RepositoryInfo::Status = Status1;
		_p->mtrep7__RepositoryInfo::Url = Url1;
		_p->mtrep7__RepositoryInfo::Version = Version1;
	}
	return _p;
}

inline int soap_write_mtrep7__RepositoryInfo2(struct soap *soap, mtrep7__RepositoryInfo2 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep7:RepositoryInfo2", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep7__RepositoryInfo2 * SOAP_FMAC4 soap_get_mtrep7__RepositoryInfo2(struct soap*, mtrep7__RepositoryInfo2 *, const char*, const char*);

inline int soap_read_mtrep7__RepositoryInfo2(struct soap *soap, mtrep7__RepositoryInfo2 *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep7__RepositoryInfo2(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep7__RepositoryInfo3_DEFINED
#define SOAP_TYPE_mtrep7__RepositoryInfo3_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep7__RepositoryInfo3(struct soap*, const char*, int, const mtrep7__RepositoryInfo3 *, const char*);
SOAP_FMAC3 mtrep7__RepositoryInfo3 * SOAP_FMAC4 soap_in_mtrep7__RepositoryInfo3(struct soap*, const char*, mtrep7__RepositoryInfo3 *, const char*);
SOAP_FMAC1 mtrep7__RepositoryInfo3 * SOAP_FMAC2 repository_instantiate_mtrep7__RepositoryInfo3(struct soap*, int, const char*, const char*, size_t*);

inline mtrep7__RepositoryInfo3 * soap_new_mtrep7__RepositoryInfo3(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep7__RepositoryInfo3(soap, n, NULL, NULL, NULL);
}

inline mtrep7__RepositoryInfo3 * soap_new_req_mtrep7__RepositoryInfo3(
	struct soap *soap,
	enum mtrep7__RepositoryReleaseState ReleaseState,
	double Latitude1,
	double Longitude1,
	int Date2,
	int Delay2,
	enum mtrep7__RepositoryIntegrity Integrity2,
	enum mtrep7__PackageLevel Level2,
	enum mtrep7__RepositoryStatus Status2,
	int Version2)
{	mtrep7__RepositoryInfo3 *_p = soap_new_mtrep7__RepositoryInfo3(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep7__RepositoryInfo3::ReleaseState = ReleaseState;
		_p->mtrep7__RepositoryInfo2::Latitude = Latitude1;
		_p->mtrep7__RepositoryInfo2::Longitude = Longitude1;
		_p->mtrep7__RepositoryInfo::Date = Date2;
		_p->mtrep7__RepositoryInfo::Delay = Delay2;
		_p->mtrep7__RepositoryInfo::Integrity = Integrity2;
		_p->mtrep7__RepositoryInfo::Level = Level2;
		_p->mtrep7__RepositoryInfo::Status = Status2;
		_p->mtrep7__RepositoryInfo::Version = Version2;
	}
	return _p;
}

inline mtrep7__RepositoryInfo3 * soap_new_set_mtrep7__RepositoryInfo3(
	struct soap *soap,
	std::string *Attributes,
	enum mtrep7__RepositoryReleaseState ReleaseState,
	std::string *CountryCode1,
	std::string *City1,
	double Latitude1,
	double Longitude1,
	std::string *Country2,
	int Date2,
	int Delay2,
	std::string *Description2,
	enum mtrep7__RepositoryIntegrity Integrity2,
	enum mtrep7__PackageLevel Level2,
	enum mtrep7__RepositoryStatus Status2,
	std::string *Url2,
	int Version2)
{	mtrep7__RepositoryInfo3 *_p = soap_new_mtrep7__RepositoryInfo3(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep7__RepositoryInfo3::Attributes = Attributes;
		_p->mtrep7__RepositoryInfo3::ReleaseState = ReleaseState;
		_p->mtrep7__RepositoryInfo2::CountryCode = CountryCode1;
		_p->mtrep7__RepositoryInfo2::City = City1;
		_p->mtrep7__RepositoryInfo2::Latitude = Latitude1;
		_p->mtrep7__RepositoryInfo2::Longitude = Longitude1;
		_p->mtrep7__RepositoryInfo::Country = Country2;
		_p->mtrep7__RepositoryInfo::Date = Date2;
		_p->mtrep7__RepositoryInfo::Delay = Delay2;
		_p->mtrep7__RepositoryInfo::Description = Description2;
		_p->mtrep7__RepositoryInfo::Integrity = Integrity2;
		_p->mtrep7__RepositoryInfo::Level = Level2;
		_p->mtrep7__RepositoryInfo::Status = Status2;
		_p->mtrep7__RepositoryInfo::Url = Url2;
		_p->mtrep7__RepositoryInfo::Version = Version2;
	}
	return _p;
}

inline int soap_write_mtrep7__RepositoryInfo3(struct soap *soap, mtrep7__RepositoryInfo3 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep7:RepositoryInfo3", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep7__RepositoryInfo3 * SOAP_FMAC4 soap_get_mtrep7__RepositoryInfo3(struct soap*, mtrep7__RepositoryInfo3 *, const char*, const char*);

inline int soap_read_mtrep7__RepositoryInfo3(struct soap *soap, mtrep7__RepositoryInfo3 *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep7__RepositoryInfo3(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep7__ClientInfo_DEFINED
#define SOAP_TYPE_mtrep7__ClientInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep7__ClientInfo(struct soap*, const char*, int, const mtrep7__ClientInfo *, const char*);
SOAP_FMAC3 mtrep7__ClientInfo * SOAP_FMAC4 soap_in_mtrep7__ClientInfo(struct soap*, const char*, mtrep7__ClientInfo *, const char*);
SOAP_FMAC1 mtrep7__ClientInfo * SOAP_FMAC2 repository_instantiate_mtrep7__ClientInfo(struct soap*, int, const char*, const char*, size_t*);

inline mtrep7__ClientInfo * soap_new_mtrep7__ClientInfo(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep7__ClientInfo(soap, n, NULL, NULL, NULL);
}

inline mtrep7__ClientInfo * soap_new_req_mtrep7__ClientInfo(
	struct soap *soap)
{	mtrep7__ClientInfo *_p = soap_new_mtrep7__ClientInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline mtrep7__ClientInfo * soap_new_set_mtrep7__ClientInfo(
	struct soap *soap,
	std::string *Name,
	std::string *Version)
{	mtrep7__ClientInfo *_p = soap_new_mtrep7__ClientInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep7__ClientInfo::Name = Name;
		_p->mtrep7__ClientInfo::Version = Version;
	}
	return _p;
}

inline int soap_write_mtrep7__ClientInfo(struct soap *soap, mtrep7__ClientInfo const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep7:ClientInfo", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep7__ClientInfo * SOAP_FMAC4 soap_get_mtrep7__ClientInfo(struct soap*, mtrep7__ClientInfo *, const char*, const char*);

inline int soap_read_mtrep7__ClientInfo(struct soap *soap, mtrep7__ClientInfo *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep7__ClientInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep6__PickRepository4Response_DEFINED
#define SOAP_TYPE__mtrep6__PickRepository4Response_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep6__PickRepository4Response(struct soap*, const char*, int, const _mtrep6__PickRepository4Response *, const char*);
SOAP_FMAC3 _mtrep6__PickRepository4Response * SOAP_FMAC4 soap_in__mtrep6__PickRepository4Response(struct soap*, const char*, _mtrep6__PickRepository4Response *, const char*);
SOAP_FMAC1 _mtrep6__PickRepository4Response * SOAP_FMAC2 repository_instantiate__mtrep6__PickRepository4Response(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep6__PickRepository4Response * soap_new__mtrep6__PickRepository4Response(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep6__PickRepository4Response(soap, n, NULL, NULL, NULL);
}

inline _mtrep6__PickRepository4Response * soap_new_req__mtrep6__PickRepository4Response(
	struct soap *soap)
{	_mtrep6__PickRepository4Response *_p = soap_new__mtrep6__PickRepository4Response(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep6__PickRepository4Response * soap_new_set__mtrep6__PickRepository4Response(
	struct soap *soap,
	mtrep6__RepositoryInfo3 *PickRepository4Result)
{	_mtrep6__PickRepository4Response *_p = soap_new__mtrep6__PickRepository4Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep6__PickRepository4Response::PickRepository4Result = PickRepository4Result;
	}
	return _p;
}

inline int soap_write__mtrep6__PickRepository4Response(struct soap *soap, _mtrep6__PickRepository4Response const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep6:PickRepository4Response", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep6__PickRepository4Response * SOAP_FMAC4 soap_get__mtrep6__PickRepository4Response(struct soap*, _mtrep6__PickRepository4Response *, const char*, const char*);

inline int soap_read__mtrep6__PickRepository4Response(struct soap *soap, _mtrep6__PickRepository4Response *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep6__PickRepository4Response(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep6__PickRepository4_DEFINED
#define SOAP_TYPE__mtrep6__PickRepository4_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep6__PickRepository4(struct soap*, const char*, int, const _mtrep6__PickRepository4 *, const char*);
SOAP_FMAC3 _mtrep6__PickRepository4 * SOAP_FMAC4 soap_in__mtrep6__PickRepository4(struct soap*, const char*, _mtrep6__PickRepository4 *, const char*);
SOAP_FMAC1 _mtrep6__PickRepository4 * SOAP_FMAC2 repository_instantiate__mtrep6__PickRepository4(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep6__PickRepository4 * soap_new__mtrep6__PickRepository4(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep6__PickRepository4(soap, n, NULL, NULL, NULL);
}

inline _mtrep6__PickRepository4 * soap_new_req__mtrep6__PickRepository4(
	struct soap *soap,
	bool favorHttp,
	bool nearest,
	enum mtrep6__RepositoryReleaseState releaseState)
{	_mtrep6__PickRepository4 *_p = soap_new__mtrep6__PickRepository4(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep6__PickRepository4::favorHttp = favorHttp;
		_p->_mtrep6__PickRepository4::nearest = nearest;
		_p->_mtrep6__PickRepository4::releaseState = releaseState;
	}
	return _p;
}

inline _mtrep6__PickRepository4 * soap_new_set__mtrep6__PickRepository4(
	struct soap *soap,
	mtrep6__ClientInfo *clientInfo,
	bool favorHttp,
	bool nearest,
	enum mtrep6__RepositoryReleaseState releaseState)
{	_mtrep6__PickRepository4 *_p = soap_new__mtrep6__PickRepository4(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep6__PickRepository4::clientInfo = clientInfo;
		_p->_mtrep6__PickRepository4::favorHttp = favorHttp;
		_p->_mtrep6__PickRepository4::nearest = nearest;
		_p->_mtrep6__PickRepository4::releaseState = releaseState;
	}
	return _p;
}

inline int soap_write__mtrep6__PickRepository4(struct soap *soap, _mtrep6__PickRepository4 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep6:PickRepository4", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep6__PickRepository4 * SOAP_FMAC4 soap_get__mtrep6__PickRepository4(struct soap*, _mtrep6__PickRepository4 *, const char*, const char*);

inline int soap_read__mtrep6__PickRepository4(struct soap *soap, _mtrep6__PickRepository4 *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep6__PickRepository4(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep6__GetRepositories4Response_DEFINED
#define SOAP_TYPE__mtrep6__GetRepositories4Response_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep6__GetRepositories4Response(struct soap*, const char*, int, const _mtrep6__GetRepositories4Response *, const char*);
SOAP_FMAC3 _mtrep6__GetRepositories4Response * SOAP_FMAC4 soap_in__mtrep6__GetRepositories4Response(struct soap*, const char*, _mtrep6__GetRepositories4Response *, const char*);
SOAP_FMAC1 _mtrep6__GetRepositories4Response * SOAP_FMAC2 repository_instantiate__mtrep6__GetRepositories4Response(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep6__GetRepositories4Response * soap_new__mtrep6__GetRepositories4Response(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep6__GetRepositories4Response(soap, n, NULL, NULL, NULL);
}

inline _mtrep6__GetRepositories4Response * soap_new_req__mtrep6__GetRepositories4Response(
	struct soap *soap)
{	_mtrep6__GetRepositories4Response *_p = soap_new__mtrep6__GetRepositories4Response(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep6__GetRepositories4Response * soap_new_set__mtrep6__GetRepositories4Response(
	struct soap *soap,
	mtrep6__ArrayOfRepositoryInfo3 *GetRepositories4Result)
{	_mtrep6__GetRepositories4Response *_p = soap_new__mtrep6__GetRepositories4Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep6__GetRepositories4Response::GetRepositories4Result = GetRepositories4Result;
	}
	return _p;
}

inline int soap_write__mtrep6__GetRepositories4Response(struct soap *soap, _mtrep6__GetRepositories4Response const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep6:GetRepositories4Response", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep6__GetRepositories4Response * SOAP_FMAC4 soap_get__mtrep6__GetRepositories4Response(struct soap*, _mtrep6__GetRepositories4Response *, const char*, const char*);

inline int soap_read__mtrep6__GetRepositories4Response(struct soap *soap, _mtrep6__GetRepositories4Response *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep6__GetRepositories4Response(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep6__GetRepositories4_DEFINED
#define SOAP_TYPE__mtrep6__GetRepositories4_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep6__GetRepositories4(struct soap*, const char*, int, const _mtrep6__GetRepositories4 *, const char*);
SOAP_FMAC3 _mtrep6__GetRepositories4 * SOAP_FMAC4 soap_in__mtrep6__GetRepositories4(struct soap*, const char*, _mtrep6__GetRepositories4 *, const char*);
SOAP_FMAC1 _mtrep6__GetRepositories4 * SOAP_FMAC2 repository_instantiate__mtrep6__GetRepositories4(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep6__GetRepositories4 * soap_new__mtrep6__GetRepositories4(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep6__GetRepositories4(soap, n, NULL, NULL, NULL);
}

inline _mtrep6__GetRepositories4 * soap_new_req__mtrep6__GetRepositories4(
	struct soap *soap,
	bool onlyOnline,
	bool noCorrupted,
	bool httpOnly,
	bool excludeHidden,
	int maxDelay,
	enum mtrep6__RepositoryReleaseState releaseState)
{	_mtrep6__GetRepositories4 *_p = soap_new__mtrep6__GetRepositories4(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep6__GetRepositories4::onlyOnline = onlyOnline;
		_p->_mtrep6__GetRepositories4::noCorrupted = noCorrupted;
		_p->_mtrep6__GetRepositories4::httpOnly = httpOnly;
		_p->_mtrep6__GetRepositories4::excludeHidden = excludeHidden;
		_p->_mtrep6__GetRepositories4::maxDelay = maxDelay;
		_p->_mtrep6__GetRepositories4::releaseState = releaseState;
	}
	return _p;
}

inline _mtrep6__GetRepositories4 * soap_new_set__mtrep6__GetRepositories4(
	struct soap *soap,
	mtrep6__ClientInfo *clientInfo,
	bool onlyOnline,
	bool noCorrupted,
	bool httpOnly,
	bool excludeHidden,
	int maxDelay,
	enum mtrep6__RepositoryReleaseState releaseState)
{	_mtrep6__GetRepositories4 *_p = soap_new__mtrep6__GetRepositories4(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep6__GetRepositories4::clientInfo = clientInfo;
		_p->_mtrep6__GetRepositories4::onlyOnline = onlyOnline;
		_p->_mtrep6__GetRepositories4::noCorrupted = noCorrupted;
		_p->_mtrep6__GetRepositories4::httpOnly = httpOnly;
		_p->_mtrep6__GetRepositories4::excludeHidden = excludeHidden;
		_p->_mtrep6__GetRepositories4::maxDelay = maxDelay;
		_p->_mtrep6__GetRepositories4::releaseState = releaseState;
	}
	return _p;
}

inline int soap_write__mtrep6__GetRepositories4(struct soap *soap, _mtrep6__GetRepositories4 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep6:GetRepositories4", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep6__GetRepositories4 * SOAP_FMAC4 soap_get__mtrep6__GetRepositories4(struct soap*, _mtrep6__GetRepositories4 *, const char*, const char*);

inline int soap_read__mtrep6__GetRepositories4(struct soap *soap, _mtrep6__GetRepositories4 *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep6__GetRepositories4(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep6__RepositoryInfo_DEFINED
#define SOAP_TYPE_mtrep6__RepositoryInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep6__RepositoryInfo(struct soap*, const char*, int, const mtrep6__RepositoryInfo *, const char*);
SOAP_FMAC3 mtrep6__RepositoryInfo * SOAP_FMAC4 soap_in_mtrep6__RepositoryInfo(struct soap*, const char*, mtrep6__RepositoryInfo *, const char*);
SOAP_FMAC1 mtrep6__RepositoryInfo * SOAP_FMAC2 repository_instantiate_mtrep6__RepositoryInfo(struct soap*, int, const char*, const char*, size_t*);

inline mtrep6__RepositoryInfo * soap_new_mtrep6__RepositoryInfo(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep6__RepositoryInfo(soap, n, NULL, NULL, NULL);
}

inline mtrep6__RepositoryInfo * soap_new_req_mtrep6__RepositoryInfo(
	struct soap *soap,
	int Date,
	int Delay,
	enum mtrep6__RepositoryIntegrity Integrity,
	enum mtrep6__PackageLevel Level,
	enum mtrep6__RepositoryStatus Status,
	int Version)
{	mtrep6__RepositoryInfo *_p = soap_new_mtrep6__RepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep6__RepositoryInfo::Date = Date;
		_p->mtrep6__RepositoryInfo::Delay = Delay;
		_p->mtrep6__RepositoryInfo::Integrity = Integrity;
		_p->mtrep6__RepositoryInfo::Level = Level;
		_p->mtrep6__RepositoryInfo::Status = Status;
		_p->mtrep6__RepositoryInfo::Version = Version;
	}
	return _p;
}

inline mtrep6__RepositoryInfo * soap_new_set_mtrep6__RepositoryInfo(
	struct soap *soap,
	std::string *Country,
	int Date,
	int Delay,
	std::string *Description,
	enum mtrep6__RepositoryIntegrity Integrity,
	enum mtrep6__PackageLevel Level,
	enum mtrep6__RepositoryStatus Status,
	std::string *Url,
	int Version)
{	mtrep6__RepositoryInfo *_p = soap_new_mtrep6__RepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep6__RepositoryInfo::Country = Country;
		_p->mtrep6__RepositoryInfo::Date = Date;
		_p->mtrep6__RepositoryInfo::Delay = Delay;
		_p->mtrep6__RepositoryInfo::Description = Description;
		_p->mtrep6__RepositoryInfo::Integrity = Integrity;
		_p->mtrep6__RepositoryInfo::Level = Level;
		_p->mtrep6__RepositoryInfo::Status = Status;
		_p->mtrep6__RepositoryInfo::Url = Url;
		_p->mtrep6__RepositoryInfo::Version = Version;
	}
	return _p;
}

inline int soap_write_mtrep6__RepositoryInfo(struct soap *soap, mtrep6__RepositoryInfo const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep6:RepositoryInfo", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep6__RepositoryInfo * SOAP_FMAC4 soap_get_mtrep6__RepositoryInfo(struct soap*, mtrep6__RepositoryInfo *, const char*, const char*);

inline int soap_read_mtrep6__RepositoryInfo(struct soap *soap, mtrep6__RepositoryInfo *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep6__RepositoryInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep6__RepositoryInfo2_DEFINED
#define SOAP_TYPE_mtrep6__RepositoryInfo2_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep6__RepositoryInfo2(struct soap*, const char*, int, const mtrep6__RepositoryInfo2 *, const char*);
SOAP_FMAC3 mtrep6__RepositoryInfo2 * SOAP_FMAC4 soap_in_mtrep6__RepositoryInfo2(struct soap*, const char*, mtrep6__RepositoryInfo2 *, const char*);
SOAP_FMAC1 mtrep6__RepositoryInfo2 * SOAP_FMAC2 repository_instantiate_mtrep6__RepositoryInfo2(struct soap*, int, const char*, const char*, size_t*);

inline mtrep6__RepositoryInfo2 * soap_new_mtrep6__RepositoryInfo2(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep6__RepositoryInfo2(soap, n, NULL, NULL, NULL);
}

inline mtrep6__RepositoryInfo2 * soap_new_req_mtrep6__RepositoryInfo2(
	struct soap *soap,
	double Latitude,
	double Longitude,
	int Date1,
	int Delay1,
	enum mtrep6__RepositoryIntegrity Integrity1,
	enum mtrep6__PackageLevel Level1,
	enum mtrep6__RepositoryStatus Status1,
	int Version1)
{	mtrep6__RepositoryInfo2 *_p = soap_new_mtrep6__RepositoryInfo2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep6__RepositoryInfo2::Latitude = Latitude;
		_p->mtrep6__RepositoryInfo2::Longitude = Longitude;
		_p->mtrep6__RepositoryInfo::Date = Date1;
		_p->mtrep6__RepositoryInfo::Delay = Delay1;
		_p->mtrep6__RepositoryInfo::Integrity = Integrity1;
		_p->mtrep6__RepositoryInfo::Level = Level1;
		_p->mtrep6__RepositoryInfo::Status = Status1;
		_p->mtrep6__RepositoryInfo::Version = Version1;
	}
	return _p;
}

inline mtrep6__RepositoryInfo2 * soap_new_set_mtrep6__RepositoryInfo2(
	struct soap *soap,
	std::string *CountryCode,
	std::string *City,
	double Latitude,
	double Longitude,
	std::string *Country1,
	int Date1,
	int Delay1,
	std::string *Description1,
	enum mtrep6__RepositoryIntegrity Integrity1,
	enum mtrep6__PackageLevel Level1,
	enum mtrep6__RepositoryStatus Status1,
	std::string *Url1,
	int Version1)
{	mtrep6__RepositoryInfo2 *_p = soap_new_mtrep6__RepositoryInfo2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep6__RepositoryInfo2::CountryCode = CountryCode;
		_p->mtrep6__RepositoryInfo2::City = City;
		_p->mtrep6__RepositoryInfo2::Latitude = Latitude;
		_p->mtrep6__RepositoryInfo2::Longitude = Longitude;
		_p->mtrep6__RepositoryInfo::Country = Country1;
		_p->mtrep6__RepositoryInfo::Date = Date1;
		_p->mtrep6__RepositoryInfo::Delay = Delay1;
		_p->mtrep6__RepositoryInfo::Description = Description1;
		_p->mtrep6__RepositoryInfo::Integrity = Integrity1;
		_p->mtrep6__RepositoryInfo::Level = Level1;
		_p->mtrep6__RepositoryInfo::Status = Status1;
		_p->mtrep6__RepositoryInfo::Url = Url1;
		_p->mtrep6__RepositoryInfo::Version = Version1;
	}
	return _p;
}

inline int soap_write_mtrep6__RepositoryInfo2(struct soap *soap, mtrep6__RepositoryInfo2 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep6:RepositoryInfo2", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep6__RepositoryInfo2 * SOAP_FMAC4 soap_get_mtrep6__RepositoryInfo2(struct soap*, mtrep6__RepositoryInfo2 *, const char*, const char*);

inline int soap_read_mtrep6__RepositoryInfo2(struct soap *soap, mtrep6__RepositoryInfo2 *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep6__RepositoryInfo2(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep6__RepositoryInfo3_DEFINED
#define SOAP_TYPE_mtrep6__RepositoryInfo3_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep6__RepositoryInfo3(struct soap*, const char*, int, const mtrep6__RepositoryInfo3 *, const char*);
SOAP_FMAC3 mtrep6__RepositoryInfo3 * SOAP_FMAC4 soap_in_mtrep6__RepositoryInfo3(struct soap*, const char*, mtrep6__RepositoryInfo3 *, const char*);
SOAP_FMAC1 mtrep6__RepositoryInfo3 * SOAP_FMAC2 repository_instantiate_mtrep6__RepositoryInfo3(struct soap*, int, const char*, const char*, size_t*);

inline mtrep6__RepositoryInfo3 * soap_new_mtrep6__RepositoryInfo3(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep6__RepositoryInfo3(soap, n, NULL, NULL, NULL);
}

inline mtrep6__RepositoryInfo3 * soap_new_req_mtrep6__RepositoryInfo3(
	struct soap *soap,
	enum mtrep6__RepositoryReleaseState ReleaseState,
	double Latitude1,
	double Longitude1,
	int Date2,
	int Delay2,
	enum mtrep6__RepositoryIntegrity Integrity2,
	enum mtrep6__PackageLevel Level2,
	enum mtrep6__RepositoryStatus Status2,
	int Version2)
{	mtrep6__RepositoryInfo3 *_p = soap_new_mtrep6__RepositoryInfo3(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep6__RepositoryInfo3::ReleaseState = ReleaseState;
		_p->mtrep6__RepositoryInfo2::Latitude = Latitude1;
		_p->mtrep6__RepositoryInfo2::Longitude = Longitude1;
		_p->mtrep6__RepositoryInfo::Date = Date2;
		_p->mtrep6__RepositoryInfo::Delay = Delay2;
		_p->mtrep6__RepositoryInfo::Integrity = Integrity2;
		_p->mtrep6__RepositoryInfo::Level = Level2;
		_p->mtrep6__RepositoryInfo::Status = Status2;
		_p->mtrep6__RepositoryInfo::Version = Version2;
	}
	return _p;
}

inline mtrep6__RepositoryInfo3 * soap_new_set_mtrep6__RepositoryInfo3(
	struct soap *soap,
	std::string *Attributes,
	enum mtrep6__RepositoryReleaseState ReleaseState,
	std::string *CountryCode1,
	std::string *City1,
	double Latitude1,
	double Longitude1,
	std::string *Country2,
	int Date2,
	int Delay2,
	std::string *Description2,
	enum mtrep6__RepositoryIntegrity Integrity2,
	enum mtrep6__PackageLevel Level2,
	enum mtrep6__RepositoryStatus Status2,
	std::string *Url2,
	int Version2)
{	mtrep6__RepositoryInfo3 *_p = soap_new_mtrep6__RepositoryInfo3(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep6__RepositoryInfo3::Attributes = Attributes;
		_p->mtrep6__RepositoryInfo3::ReleaseState = ReleaseState;
		_p->mtrep6__RepositoryInfo2::CountryCode = CountryCode1;
		_p->mtrep6__RepositoryInfo2::City = City1;
		_p->mtrep6__RepositoryInfo2::Latitude = Latitude1;
		_p->mtrep6__RepositoryInfo2::Longitude = Longitude1;
		_p->mtrep6__RepositoryInfo::Country = Country2;
		_p->mtrep6__RepositoryInfo::Date = Date2;
		_p->mtrep6__RepositoryInfo::Delay = Delay2;
		_p->mtrep6__RepositoryInfo::Description = Description2;
		_p->mtrep6__RepositoryInfo::Integrity = Integrity2;
		_p->mtrep6__RepositoryInfo::Level = Level2;
		_p->mtrep6__RepositoryInfo::Status = Status2;
		_p->mtrep6__RepositoryInfo::Url = Url2;
		_p->mtrep6__RepositoryInfo::Version = Version2;
	}
	return _p;
}

inline int soap_write_mtrep6__RepositoryInfo3(struct soap *soap, mtrep6__RepositoryInfo3 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep6:RepositoryInfo3", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep6__RepositoryInfo3 * SOAP_FMAC4 soap_get_mtrep6__RepositoryInfo3(struct soap*, mtrep6__RepositoryInfo3 *, const char*, const char*);

inline int soap_read_mtrep6__RepositoryInfo3(struct soap *soap, mtrep6__RepositoryInfo3 *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep6__RepositoryInfo3(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep6__ArrayOfRepositoryInfo3_DEFINED
#define SOAP_TYPE_mtrep6__ArrayOfRepositoryInfo3_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep6__ArrayOfRepositoryInfo3(struct soap*, const char*, int, const mtrep6__ArrayOfRepositoryInfo3 *, const char*);
SOAP_FMAC3 mtrep6__ArrayOfRepositoryInfo3 * SOAP_FMAC4 soap_in_mtrep6__ArrayOfRepositoryInfo3(struct soap*, const char*, mtrep6__ArrayOfRepositoryInfo3 *, const char*);
SOAP_FMAC1 mtrep6__ArrayOfRepositoryInfo3 * SOAP_FMAC2 repository_instantiate_mtrep6__ArrayOfRepositoryInfo3(struct soap*, int, const char*, const char*, size_t*);

inline mtrep6__ArrayOfRepositoryInfo3 * soap_new_mtrep6__ArrayOfRepositoryInfo3(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep6__ArrayOfRepositoryInfo3(soap, n, NULL, NULL, NULL);
}

inline mtrep6__ArrayOfRepositoryInfo3 * soap_new_req_mtrep6__ArrayOfRepositoryInfo3(
	struct soap *soap)
{	mtrep6__ArrayOfRepositoryInfo3 *_p = soap_new_mtrep6__ArrayOfRepositoryInfo3(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline mtrep6__ArrayOfRepositoryInfo3 * soap_new_set_mtrep6__ArrayOfRepositoryInfo3(
	struct soap *soap,
	const std::vector<mtrep6__RepositoryInfo3 *> & RepositoryInfo3)
{	mtrep6__ArrayOfRepositoryInfo3 *_p = soap_new_mtrep6__ArrayOfRepositoryInfo3(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep6__ArrayOfRepositoryInfo3::RepositoryInfo3 = RepositoryInfo3;
	}
	return _p;
}

inline int soap_write_mtrep6__ArrayOfRepositoryInfo3(struct soap *soap, mtrep6__ArrayOfRepositoryInfo3 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep6:ArrayOfRepositoryInfo3", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep6__ArrayOfRepositoryInfo3 * SOAP_FMAC4 soap_get_mtrep6__ArrayOfRepositoryInfo3(struct soap*, mtrep6__ArrayOfRepositoryInfo3 *, const char*, const char*);

inline int soap_read_mtrep6__ArrayOfRepositoryInfo3(struct soap *soap, mtrep6__ArrayOfRepositoryInfo3 *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep6__ArrayOfRepositoryInfo3(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep6__ClientInfo_DEFINED
#define SOAP_TYPE_mtrep6__ClientInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep6__ClientInfo(struct soap*, const char*, int, const mtrep6__ClientInfo *, const char*);
SOAP_FMAC3 mtrep6__ClientInfo * SOAP_FMAC4 soap_in_mtrep6__ClientInfo(struct soap*, const char*, mtrep6__ClientInfo *, const char*);
SOAP_FMAC1 mtrep6__ClientInfo * SOAP_FMAC2 repository_instantiate_mtrep6__ClientInfo(struct soap*, int, const char*, const char*, size_t*);

inline mtrep6__ClientInfo * soap_new_mtrep6__ClientInfo(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep6__ClientInfo(soap, n, NULL, NULL, NULL);
}

inline mtrep6__ClientInfo * soap_new_req_mtrep6__ClientInfo(
	struct soap *soap)
{	mtrep6__ClientInfo *_p = soap_new_mtrep6__ClientInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline mtrep6__ClientInfo * soap_new_set_mtrep6__ClientInfo(
	struct soap *soap,
	std::string *Name,
	std::string *Version)
{	mtrep6__ClientInfo *_p = soap_new_mtrep6__ClientInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep6__ClientInfo::Name = Name;
		_p->mtrep6__ClientInfo::Version = Version;
	}
	return _p;
}

inline int soap_write_mtrep6__ClientInfo(struct soap *soap, mtrep6__ClientInfo const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep6:ClientInfo", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep6__ClientInfo * SOAP_FMAC4 soap_get_mtrep6__ClientInfo(struct soap*, mtrep6__ClientInfo *, const char*, const char*);

inline int soap_read_mtrep6__ClientInfo(struct soap *soap, mtrep6__ClientInfo *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep6__ClientInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep5__PickRepository3Response_DEFINED
#define SOAP_TYPE__mtrep5__PickRepository3Response_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep5__PickRepository3Response(struct soap*, const char*, int, const _mtrep5__PickRepository3Response *, const char*);
SOAP_FMAC3 _mtrep5__PickRepository3Response * SOAP_FMAC4 soap_in__mtrep5__PickRepository3Response(struct soap*, const char*, _mtrep5__PickRepository3Response *, const char*);
SOAP_FMAC1 _mtrep5__PickRepository3Response * SOAP_FMAC2 repository_instantiate__mtrep5__PickRepository3Response(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep5__PickRepository3Response * soap_new__mtrep5__PickRepository3Response(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep5__PickRepository3Response(soap, n, NULL, NULL, NULL);
}

inline _mtrep5__PickRepository3Response * soap_new_req__mtrep5__PickRepository3Response(
	struct soap *soap)
{	_mtrep5__PickRepository3Response *_p = soap_new__mtrep5__PickRepository3Response(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep5__PickRepository3Response * soap_new_set__mtrep5__PickRepository3Response(
	struct soap *soap,
	mtrep5__RepositoryInfo2 *PickRepository3Result)
{	_mtrep5__PickRepository3Response *_p = soap_new__mtrep5__PickRepository3Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep5__PickRepository3Response::PickRepository3Result = PickRepository3Result;
	}
	return _p;
}

inline int soap_write__mtrep5__PickRepository3Response(struct soap *soap, _mtrep5__PickRepository3Response const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep5:PickRepository3Response", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep5__PickRepository3Response * SOAP_FMAC4 soap_get__mtrep5__PickRepository3Response(struct soap*, _mtrep5__PickRepository3Response *, const char*, const char*);

inline int soap_read__mtrep5__PickRepository3Response(struct soap *soap, _mtrep5__PickRepository3Response *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep5__PickRepository3Response(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep5__PickRepository3_DEFINED
#define SOAP_TYPE__mtrep5__PickRepository3_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep5__PickRepository3(struct soap*, const char*, int, const _mtrep5__PickRepository3 *, const char*);
SOAP_FMAC3 _mtrep5__PickRepository3 * SOAP_FMAC4 soap_in__mtrep5__PickRepository3(struct soap*, const char*, _mtrep5__PickRepository3 *, const char*);
SOAP_FMAC1 _mtrep5__PickRepository3 * SOAP_FMAC2 repository_instantiate__mtrep5__PickRepository3(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep5__PickRepository3 * soap_new__mtrep5__PickRepository3(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep5__PickRepository3(soap, n, NULL, NULL, NULL);
}

inline _mtrep5__PickRepository3 * soap_new_req__mtrep5__PickRepository3(
	struct soap *soap,
	bool favorHttp,
	bool nearest)
{	_mtrep5__PickRepository3 *_p = soap_new__mtrep5__PickRepository3(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep5__PickRepository3::favorHttp = favorHttp;
		_p->_mtrep5__PickRepository3::nearest = nearest;
	}
	return _p;
}

inline _mtrep5__PickRepository3 * soap_new_set__mtrep5__PickRepository3(
	struct soap *soap,
	mtrep5__ClientInfo *clientInfo,
	bool favorHttp,
	bool nearest)
{	_mtrep5__PickRepository3 *_p = soap_new__mtrep5__PickRepository3(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep5__PickRepository3::clientInfo = clientInfo;
		_p->_mtrep5__PickRepository3::favorHttp = favorHttp;
		_p->_mtrep5__PickRepository3::nearest = nearest;
	}
	return _p;
}

inline int soap_write__mtrep5__PickRepository3(struct soap *soap, _mtrep5__PickRepository3 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep5:PickRepository3", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep5__PickRepository3 * SOAP_FMAC4 soap_get__mtrep5__PickRepository3(struct soap*, _mtrep5__PickRepository3 *, const char*, const char*);

inline int soap_read__mtrep5__PickRepository3(struct soap *soap, _mtrep5__PickRepository3 *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep5__PickRepository3(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep5__GetRepositories3Response_DEFINED
#define SOAP_TYPE__mtrep5__GetRepositories3Response_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep5__GetRepositories3Response(struct soap*, const char*, int, const _mtrep5__GetRepositories3Response *, const char*);
SOAP_FMAC3 _mtrep5__GetRepositories3Response * SOAP_FMAC4 soap_in__mtrep5__GetRepositories3Response(struct soap*, const char*, _mtrep5__GetRepositories3Response *, const char*);
SOAP_FMAC1 _mtrep5__GetRepositories3Response * SOAP_FMAC2 repository_instantiate__mtrep5__GetRepositories3Response(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep5__GetRepositories3Response * soap_new__mtrep5__GetRepositories3Response(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep5__GetRepositories3Response(soap, n, NULL, NULL, NULL);
}

inline _mtrep5__GetRepositories3Response * soap_new_req__mtrep5__GetRepositories3Response(
	struct soap *soap)
{	_mtrep5__GetRepositories3Response *_p = soap_new__mtrep5__GetRepositories3Response(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep5__GetRepositories3Response * soap_new_set__mtrep5__GetRepositories3Response(
	struct soap *soap,
	mtrep5__ArrayOfRepositoryInfo2 *GetRepositories3Result)
{	_mtrep5__GetRepositories3Response *_p = soap_new__mtrep5__GetRepositories3Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep5__GetRepositories3Response::GetRepositories3Result = GetRepositories3Result;
	}
	return _p;
}

inline int soap_write__mtrep5__GetRepositories3Response(struct soap *soap, _mtrep5__GetRepositories3Response const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep5:GetRepositories3Response", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep5__GetRepositories3Response * SOAP_FMAC4 soap_get__mtrep5__GetRepositories3Response(struct soap*, _mtrep5__GetRepositories3Response *, const char*, const char*);

inline int soap_read__mtrep5__GetRepositories3Response(struct soap *soap, _mtrep5__GetRepositories3Response *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep5__GetRepositories3Response(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep5__GetRepositories3_DEFINED
#define SOAP_TYPE__mtrep5__GetRepositories3_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep5__GetRepositories3(struct soap*, const char*, int, const _mtrep5__GetRepositories3 *, const char*);
SOAP_FMAC3 _mtrep5__GetRepositories3 * SOAP_FMAC4 soap_in__mtrep5__GetRepositories3(struct soap*, const char*, _mtrep5__GetRepositories3 *, const char*);
SOAP_FMAC1 _mtrep5__GetRepositories3 * SOAP_FMAC2 repository_instantiate__mtrep5__GetRepositories3(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep5__GetRepositories3 * soap_new__mtrep5__GetRepositories3(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep5__GetRepositories3(soap, n, NULL, NULL, NULL);
}

inline _mtrep5__GetRepositories3 * soap_new_req__mtrep5__GetRepositories3(
	struct soap *soap,
	bool onlyOnline,
	bool noCorrupted,
	bool httpOnly,
	bool excludeHidden,
	int maxDelay)
{	_mtrep5__GetRepositories3 *_p = soap_new__mtrep5__GetRepositories3(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep5__GetRepositories3::onlyOnline = onlyOnline;
		_p->_mtrep5__GetRepositories3::noCorrupted = noCorrupted;
		_p->_mtrep5__GetRepositories3::httpOnly = httpOnly;
		_p->_mtrep5__GetRepositories3::excludeHidden = excludeHidden;
		_p->_mtrep5__GetRepositories3::maxDelay = maxDelay;
	}
	return _p;
}

inline _mtrep5__GetRepositories3 * soap_new_set__mtrep5__GetRepositories3(
	struct soap *soap,
	mtrep5__ClientInfo *clientInfo,
	bool onlyOnline,
	bool noCorrupted,
	bool httpOnly,
	bool excludeHidden,
	int maxDelay)
{	_mtrep5__GetRepositories3 *_p = soap_new__mtrep5__GetRepositories3(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep5__GetRepositories3::clientInfo = clientInfo;
		_p->_mtrep5__GetRepositories3::onlyOnline = onlyOnline;
		_p->_mtrep5__GetRepositories3::noCorrupted = noCorrupted;
		_p->_mtrep5__GetRepositories3::httpOnly = httpOnly;
		_p->_mtrep5__GetRepositories3::excludeHidden = excludeHidden;
		_p->_mtrep5__GetRepositories3::maxDelay = maxDelay;
	}
	return _p;
}

inline int soap_write__mtrep5__GetRepositories3(struct soap *soap, _mtrep5__GetRepositories3 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep5:GetRepositories3", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep5__GetRepositories3 * SOAP_FMAC4 soap_get__mtrep5__GetRepositories3(struct soap*, _mtrep5__GetRepositories3 *, const char*, const char*);

inline int soap_read__mtrep5__GetRepositories3(struct soap *soap, _mtrep5__GetRepositories3 *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep5__GetRepositories3(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep5__RepositoryInfo_DEFINED
#define SOAP_TYPE_mtrep5__RepositoryInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep5__RepositoryInfo(struct soap*, const char*, int, const mtrep5__RepositoryInfo *, const char*);
SOAP_FMAC3 mtrep5__RepositoryInfo * SOAP_FMAC4 soap_in_mtrep5__RepositoryInfo(struct soap*, const char*, mtrep5__RepositoryInfo *, const char*);
SOAP_FMAC1 mtrep5__RepositoryInfo * SOAP_FMAC2 repository_instantiate_mtrep5__RepositoryInfo(struct soap*, int, const char*, const char*, size_t*);

inline mtrep5__RepositoryInfo * soap_new_mtrep5__RepositoryInfo(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep5__RepositoryInfo(soap, n, NULL, NULL, NULL);
}

inline mtrep5__RepositoryInfo * soap_new_req_mtrep5__RepositoryInfo(
	struct soap *soap,
	int Date,
	int Delay,
	enum mtrep5__RepositoryIntegrity Integrity,
	enum mtrep5__PackageLevel Level,
	enum mtrep5__RepositoryStatus Status,
	int Version)
{	mtrep5__RepositoryInfo *_p = soap_new_mtrep5__RepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep5__RepositoryInfo::Date = Date;
		_p->mtrep5__RepositoryInfo::Delay = Delay;
		_p->mtrep5__RepositoryInfo::Integrity = Integrity;
		_p->mtrep5__RepositoryInfo::Level = Level;
		_p->mtrep5__RepositoryInfo::Status = Status;
		_p->mtrep5__RepositoryInfo::Version = Version;
	}
	return _p;
}

inline mtrep5__RepositoryInfo * soap_new_set_mtrep5__RepositoryInfo(
	struct soap *soap,
	std::string *Country,
	int Date,
	int Delay,
	std::string *Description,
	enum mtrep5__RepositoryIntegrity Integrity,
	enum mtrep5__PackageLevel Level,
	enum mtrep5__RepositoryStatus Status,
	std::string *Url,
	int Version)
{	mtrep5__RepositoryInfo *_p = soap_new_mtrep5__RepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep5__RepositoryInfo::Country = Country;
		_p->mtrep5__RepositoryInfo::Date = Date;
		_p->mtrep5__RepositoryInfo::Delay = Delay;
		_p->mtrep5__RepositoryInfo::Description = Description;
		_p->mtrep5__RepositoryInfo::Integrity = Integrity;
		_p->mtrep5__RepositoryInfo::Level = Level;
		_p->mtrep5__RepositoryInfo::Status = Status;
		_p->mtrep5__RepositoryInfo::Url = Url;
		_p->mtrep5__RepositoryInfo::Version = Version;
	}
	return _p;
}

inline int soap_write_mtrep5__RepositoryInfo(struct soap *soap, mtrep5__RepositoryInfo const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep5:RepositoryInfo", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep5__RepositoryInfo * SOAP_FMAC4 soap_get_mtrep5__RepositoryInfo(struct soap*, mtrep5__RepositoryInfo *, const char*, const char*);

inline int soap_read_mtrep5__RepositoryInfo(struct soap *soap, mtrep5__RepositoryInfo *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep5__RepositoryInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep5__RepositoryInfo2_DEFINED
#define SOAP_TYPE_mtrep5__RepositoryInfo2_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep5__RepositoryInfo2(struct soap*, const char*, int, const mtrep5__RepositoryInfo2 *, const char*);
SOAP_FMAC3 mtrep5__RepositoryInfo2 * SOAP_FMAC4 soap_in_mtrep5__RepositoryInfo2(struct soap*, const char*, mtrep5__RepositoryInfo2 *, const char*);
SOAP_FMAC1 mtrep5__RepositoryInfo2 * SOAP_FMAC2 repository_instantiate_mtrep5__RepositoryInfo2(struct soap*, int, const char*, const char*, size_t*);

inline mtrep5__RepositoryInfo2 * soap_new_mtrep5__RepositoryInfo2(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep5__RepositoryInfo2(soap, n, NULL, NULL, NULL);
}

inline mtrep5__RepositoryInfo2 * soap_new_req_mtrep5__RepositoryInfo2(
	struct soap *soap,
	double Latitude,
	double Longitude,
	int Date1,
	int Delay1,
	enum mtrep5__RepositoryIntegrity Integrity1,
	enum mtrep5__PackageLevel Level1,
	enum mtrep5__RepositoryStatus Status1,
	int Version1)
{	mtrep5__RepositoryInfo2 *_p = soap_new_mtrep5__RepositoryInfo2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep5__RepositoryInfo2::Latitude = Latitude;
		_p->mtrep5__RepositoryInfo2::Longitude = Longitude;
		_p->mtrep5__RepositoryInfo::Date = Date1;
		_p->mtrep5__RepositoryInfo::Delay = Delay1;
		_p->mtrep5__RepositoryInfo::Integrity = Integrity1;
		_p->mtrep5__RepositoryInfo::Level = Level1;
		_p->mtrep5__RepositoryInfo::Status = Status1;
		_p->mtrep5__RepositoryInfo::Version = Version1;
	}
	return _p;
}

inline mtrep5__RepositoryInfo2 * soap_new_set_mtrep5__RepositoryInfo2(
	struct soap *soap,
	std::string *CountryCode,
	std::string *City,
	double Latitude,
	double Longitude,
	std::string *Country1,
	int Date1,
	int Delay1,
	std::string *Description1,
	enum mtrep5__RepositoryIntegrity Integrity1,
	enum mtrep5__PackageLevel Level1,
	enum mtrep5__RepositoryStatus Status1,
	std::string *Url1,
	int Version1)
{	mtrep5__RepositoryInfo2 *_p = soap_new_mtrep5__RepositoryInfo2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep5__RepositoryInfo2::CountryCode = CountryCode;
		_p->mtrep5__RepositoryInfo2::City = City;
		_p->mtrep5__RepositoryInfo2::Latitude = Latitude;
		_p->mtrep5__RepositoryInfo2::Longitude = Longitude;
		_p->mtrep5__RepositoryInfo::Country = Country1;
		_p->mtrep5__RepositoryInfo::Date = Date1;
		_p->mtrep5__RepositoryInfo::Delay = Delay1;
		_p->mtrep5__RepositoryInfo::Description = Description1;
		_p->mtrep5__RepositoryInfo::Integrity = Integrity1;
		_p->mtrep5__RepositoryInfo::Level = Level1;
		_p->mtrep5__RepositoryInfo::Status = Status1;
		_p->mtrep5__RepositoryInfo::Url = Url1;
		_p->mtrep5__RepositoryInfo::Version = Version1;
	}
	return _p;
}

inline int soap_write_mtrep5__RepositoryInfo2(struct soap *soap, mtrep5__RepositoryInfo2 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep5:RepositoryInfo2", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep5__RepositoryInfo2 * SOAP_FMAC4 soap_get_mtrep5__RepositoryInfo2(struct soap*, mtrep5__RepositoryInfo2 *, const char*, const char*);

inline int soap_read_mtrep5__RepositoryInfo2(struct soap *soap, mtrep5__RepositoryInfo2 *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep5__RepositoryInfo2(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep5__ArrayOfRepositoryInfo2_DEFINED
#define SOAP_TYPE_mtrep5__ArrayOfRepositoryInfo2_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep5__ArrayOfRepositoryInfo2(struct soap*, const char*, int, const mtrep5__ArrayOfRepositoryInfo2 *, const char*);
SOAP_FMAC3 mtrep5__ArrayOfRepositoryInfo2 * SOAP_FMAC4 soap_in_mtrep5__ArrayOfRepositoryInfo2(struct soap*, const char*, mtrep5__ArrayOfRepositoryInfo2 *, const char*);
SOAP_FMAC1 mtrep5__ArrayOfRepositoryInfo2 * SOAP_FMAC2 repository_instantiate_mtrep5__ArrayOfRepositoryInfo2(struct soap*, int, const char*, const char*, size_t*);

inline mtrep5__ArrayOfRepositoryInfo2 * soap_new_mtrep5__ArrayOfRepositoryInfo2(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep5__ArrayOfRepositoryInfo2(soap, n, NULL, NULL, NULL);
}

inline mtrep5__ArrayOfRepositoryInfo2 * soap_new_req_mtrep5__ArrayOfRepositoryInfo2(
	struct soap *soap)
{	mtrep5__ArrayOfRepositoryInfo2 *_p = soap_new_mtrep5__ArrayOfRepositoryInfo2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline mtrep5__ArrayOfRepositoryInfo2 * soap_new_set_mtrep5__ArrayOfRepositoryInfo2(
	struct soap *soap,
	const std::vector<mtrep5__RepositoryInfo2 *> & RepositoryInfo2)
{	mtrep5__ArrayOfRepositoryInfo2 *_p = soap_new_mtrep5__ArrayOfRepositoryInfo2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep5__ArrayOfRepositoryInfo2::RepositoryInfo2 = RepositoryInfo2;
	}
	return _p;
}

inline int soap_write_mtrep5__ArrayOfRepositoryInfo2(struct soap *soap, mtrep5__ArrayOfRepositoryInfo2 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep5:ArrayOfRepositoryInfo2", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep5__ArrayOfRepositoryInfo2 * SOAP_FMAC4 soap_get_mtrep5__ArrayOfRepositoryInfo2(struct soap*, mtrep5__ArrayOfRepositoryInfo2 *, const char*, const char*);

inline int soap_read_mtrep5__ArrayOfRepositoryInfo2(struct soap *soap, mtrep5__ArrayOfRepositoryInfo2 *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep5__ArrayOfRepositoryInfo2(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep5__ClientInfo_DEFINED
#define SOAP_TYPE_mtrep5__ClientInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep5__ClientInfo(struct soap*, const char*, int, const mtrep5__ClientInfo *, const char*);
SOAP_FMAC3 mtrep5__ClientInfo * SOAP_FMAC4 soap_in_mtrep5__ClientInfo(struct soap*, const char*, mtrep5__ClientInfo *, const char*);
SOAP_FMAC1 mtrep5__ClientInfo * SOAP_FMAC2 repository_instantiate_mtrep5__ClientInfo(struct soap*, int, const char*, const char*, size_t*);

inline mtrep5__ClientInfo * soap_new_mtrep5__ClientInfo(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep5__ClientInfo(soap, n, NULL, NULL, NULL);
}

inline mtrep5__ClientInfo * soap_new_req_mtrep5__ClientInfo(
	struct soap *soap)
{	mtrep5__ClientInfo *_p = soap_new_mtrep5__ClientInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline mtrep5__ClientInfo * soap_new_set_mtrep5__ClientInfo(
	struct soap *soap,
	std::string *Name,
	std::string *Version)
{	mtrep5__ClientInfo *_p = soap_new_mtrep5__ClientInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep5__ClientInfo::Name = Name;
		_p->mtrep5__ClientInfo::Version = Version;
	}
	return _p;
}

inline int soap_write_mtrep5__ClientInfo(struct soap *soap, mtrep5__ClientInfo const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep5:ClientInfo", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep5__ClientInfo * SOAP_FMAC4 soap_get_mtrep5__ClientInfo(struct soap*, mtrep5__ClientInfo *, const char*, const char*);

inline int soap_read_mtrep5__ClientInfo(struct soap *soap, mtrep5__ClientInfo *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep5__ClientInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep4__VerifyRepositoryResponse_DEFINED
#define SOAP_TYPE__mtrep4__VerifyRepositoryResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep4__VerifyRepositoryResponse(struct soap*, const char*, int, const _mtrep4__VerifyRepositoryResponse *, const char*);
SOAP_FMAC3 _mtrep4__VerifyRepositoryResponse * SOAP_FMAC4 soap_in__mtrep4__VerifyRepositoryResponse(struct soap*, const char*, _mtrep4__VerifyRepositoryResponse *, const char*);
SOAP_FMAC1 _mtrep4__VerifyRepositoryResponse * SOAP_FMAC2 repository_instantiate__mtrep4__VerifyRepositoryResponse(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep4__VerifyRepositoryResponse * soap_new__mtrep4__VerifyRepositoryResponse(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep4__VerifyRepositoryResponse(soap, n, NULL, NULL, NULL);
}

inline _mtrep4__VerifyRepositoryResponse * soap_new_req__mtrep4__VerifyRepositoryResponse(
	struct soap *soap,
	bool VerifyRepositoryResult)
{	_mtrep4__VerifyRepositoryResponse *_p = soap_new__mtrep4__VerifyRepositoryResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep4__VerifyRepositoryResponse::VerifyRepositoryResult = VerifyRepositoryResult;
	}
	return _p;
}

inline _mtrep4__VerifyRepositoryResponse * soap_new_set__mtrep4__VerifyRepositoryResponse(
	struct soap *soap,
	bool VerifyRepositoryResult,
	mtrep4__RepositoryInfo *repositoryInfo)
{	_mtrep4__VerifyRepositoryResponse *_p = soap_new__mtrep4__VerifyRepositoryResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep4__VerifyRepositoryResponse::VerifyRepositoryResult = VerifyRepositoryResult;
		_p->_mtrep4__VerifyRepositoryResponse::repositoryInfo = repositoryInfo;
	}
	return _p;
}

inline int soap_write__mtrep4__VerifyRepositoryResponse(struct soap *soap, _mtrep4__VerifyRepositoryResponse const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep4:VerifyRepositoryResponse", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep4__VerifyRepositoryResponse * SOAP_FMAC4 soap_get__mtrep4__VerifyRepositoryResponse(struct soap*, _mtrep4__VerifyRepositoryResponse *, const char*, const char*);

inline int soap_read__mtrep4__VerifyRepositoryResponse(struct soap *soap, _mtrep4__VerifyRepositoryResponse *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep4__VerifyRepositoryResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep4__VerifyRepository_DEFINED
#define SOAP_TYPE__mtrep4__VerifyRepository_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep4__VerifyRepository(struct soap*, const char*, int, const _mtrep4__VerifyRepository *, const char*);
SOAP_FMAC3 _mtrep4__VerifyRepository * SOAP_FMAC4 soap_in__mtrep4__VerifyRepository(struct soap*, const char*, _mtrep4__VerifyRepository *, const char*);
SOAP_FMAC1 _mtrep4__VerifyRepository * SOAP_FMAC2 repository_instantiate__mtrep4__VerifyRepository(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep4__VerifyRepository * soap_new__mtrep4__VerifyRepository(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep4__VerifyRepository(soap, n, NULL, NULL, NULL);
}

inline _mtrep4__VerifyRepository * soap_new_req__mtrep4__VerifyRepository(
	struct soap *soap)
{	_mtrep4__VerifyRepository *_p = soap_new__mtrep4__VerifyRepository(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep4__VerifyRepository * soap_new_set__mtrep4__VerifyRepository(
	struct soap *soap,
	mtrep4__ClientInfo *clientInfo,
	std::string *url)
{	_mtrep4__VerifyRepository *_p = soap_new__mtrep4__VerifyRepository(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep4__VerifyRepository::clientInfo = clientInfo;
		_p->_mtrep4__VerifyRepository::url = url;
	}
	return _p;
}

inline int soap_write__mtrep4__VerifyRepository(struct soap *soap, _mtrep4__VerifyRepository const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep4:VerifyRepository", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep4__VerifyRepository * SOAP_FMAC4 soap_get__mtrep4__VerifyRepository(struct soap*, _mtrep4__VerifyRepository *, const char*, const char*);

inline int soap_read__mtrep4__VerifyRepository(struct soap *soap, _mtrep4__VerifyRepository *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep4__VerifyRepository(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep4__RepositoryInfo_DEFINED
#define SOAP_TYPE_mtrep4__RepositoryInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep4__RepositoryInfo(struct soap*, const char*, int, const mtrep4__RepositoryInfo *, const char*);
SOAP_FMAC3 mtrep4__RepositoryInfo * SOAP_FMAC4 soap_in_mtrep4__RepositoryInfo(struct soap*, const char*, mtrep4__RepositoryInfo *, const char*);
SOAP_FMAC1 mtrep4__RepositoryInfo * SOAP_FMAC2 repository_instantiate_mtrep4__RepositoryInfo(struct soap*, int, const char*, const char*, size_t*);

inline mtrep4__RepositoryInfo * soap_new_mtrep4__RepositoryInfo(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep4__RepositoryInfo(soap, n, NULL, NULL, NULL);
}

inline mtrep4__RepositoryInfo * soap_new_req_mtrep4__RepositoryInfo(
	struct soap *soap,
	int Date,
	int Delay,
	enum mtrep4__RepositoryIntegrity Integrity,
	enum mtrep4__PackageLevel Level,
	enum mtrep4__RepositoryStatus Status,
	int Version)
{	mtrep4__RepositoryInfo *_p = soap_new_mtrep4__RepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep4__RepositoryInfo::Date = Date;
		_p->mtrep4__RepositoryInfo::Delay = Delay;
		_p->mtrep4__RepositoryInfo::Integrity = Integrity;
		_p->mtrep4__RepositoryInfo::Level = Level;
		_p->mtrep4__RepositoryInfo::Status = Status;
		_p->mtrep4__RepositoryInfo::Version = Version;
	}
	return _p;
}

inline mtrep4__RepositoryInfo * soap_new_set_mtrep4__RepositoryInfo(
	struct soap *soap,
	std::string *Country,
	int Date,
	int Delay,
	std::string *Description,
	enum mtrep4__RepositoryIntegrity Integrity,
	enum mtrep4__PackageLevel Level,
	enum mtrep4__RepositoryStatus Status,
	std::string *Url,
	int Version)
{	mtrep4__RepositoryInfo *_p = soap_new_mtrep4__RepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep4__RepositoryInfo::Country = Country;
		_p->mtrep4__RepositoryInfo::Date = Date;
		_p->mtrep4__RepositoryInfo::Delay = Delay;
		_p->mtrep4__RepositoryInfo::Description = Description;
		_p->mtrep4__RepositoryInfo::Integrity = Integrity;
		_p->mtrep4__RepositoryInfo::Level = Level;
		_p->mtrep4__RepositoryInfo::Status = Status;
		_p->mtrep4__RepositoryInfo::Url = Url;
		_p->mtrep4__RepositoryInfo::Version = Version;
	}
	return _p;
}

inline int soap_write_mtrep4__RepositoryInfo(struct soap *soap, mtrep4__RepositoryInfo const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep4:RepositoryInfo", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep4__RepositoryInfo * SOAP_FMAC4 soap_get_mtrep4__RepositoryInfo(struct soap*, mtrep4__RepositoryInfo *, const char*, const char*);

inline int soap_read_mtrep4__RepositoryInfo(struct soap *soap, mtrep4__RepositoryInfo *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep4__RepositoryInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep4__ClientInfo_DEFINED
#define SOAP_TYPE_mtrep4__ClientInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep4__ClientInfo(struct soap*, const char*, int, const mtrep4__ClientInfo *, const char*);
SOAP_FMAC3 mtrep4__ClientInfo * SOAP_FMAC4 soap_in_mtrep4__ClientInfo(struct soap*, const char*, mtrep4__ClientInfo *, const char*);
SOAP_FMAC1 mtrep4__ClientInfo * SOAP_FMAC2 repository_instantiate_mtrep4__ClientInfo(struct soap*, int, const char*, const char*, size_t*);

inline mtrep4__ClientInfo * soap_new_mtrep4__ClientInfo(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep4__ClientInfo(soap, n, NULL, NULL, NULL);
}

inline mtrep4__ClientInfo * soap_new_req_mtrep4__ClientInfo(
	struct soap *soap)
{	mtrep4__ClientInfo *_p = soap_new_mtrep4__ClientInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline mtrep4__ClientInfo * soap_new_set_mtrep4__ClientInfo(
	struct soap *soap,
	std::string *Name,
	std::string *Version)
{	mtrep4__ClientInfo *_p = soap_new_mtrep4__ClientInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep4__ClientInfo::Name = Name;
		_p->mtrep4__ClientInfo::Version = Version;
	}
	return _p;
}

inline int soap_write_mtrep4__ClientInfo(struct soap *soap, mtrep4__ClientInfo const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep4:ClientInfo", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep4__ClientInfo * SOAP_FMAC4 soap_get_mtrep4__ClientInfo(struct soap*, mtrep4__ClientInfo *, const char*, const char*);

inline int soap_read_mtrep4__ClientInfo(struct soap *soap, mtrep4__ClientInfo *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep4__ClientInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep3__TryGetRepositoryInfo2Response_DEFINED
#define SOAP_TYPE__mtrep3__TryGetRepositoryInfo2Response_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep3__TryGetRepositoryInfo2Response(struct soap*, const char*, int, const _mtrep3__TryGetRepositoryInfo2Response *, const char*);
SOAP_FMAC3 _mtrep3__TryGetRepositoryInfo2Response * SOAP_FMAC4 soap_in__mtrep3__TryGetRepositoryInfo2Response(struct soap*, const char*, _mtrep3__TryGetRepositoryInfo2Response *, const char*);
SOAP_FMAC1 _mtrep3__TryGetRepositoryInfo2Response * SOAP_FMAC2 repository_instantiate__mtrep3__TryGetRepositoryInfo2Response(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep3__TryGetRepositoryInfo2Response * soap_new__mtrep3__TryGetRepositoryInfo2Response(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep3__TryGetRepositoryInfo2Response(soap, n, NULL, NULL, NULL);
}

inline _mtrep3__TryGetRepositoryInfo2Response * soap_new_req__mtrep3__TryGetRepositoryInfo2Response(
	struct soap *soap,
	bool TryGetRepositoryInfo2Result)
{	_mtrep3__TryGetRepositoryInfo2Response *_p = soap_new__mtrep3__TryGetRepositoryInfo2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep3__TryGetRepositoryInfo2Response::TryGetRepositoryInfo2Result = TryGetRepositoryInfo2Result;
	}
	return _p;
}

inline _mtrep3__TryGetRepositoryInfo2Response * soap_new_set__mtrep3__TryGetRepositoryInfo2Response(
	struct soap *soap,
	bool TryGetRepositoryInfo2Result,
	mtrep3__RepositoryInfo *repositoryInfo)
{	_mtrep3__TryGetRepositoryInfo2Response *_p = soap_new__mtrep3__TryGetRepositoryInfo2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep3__TryGetRepositoryInfo2Response::TryGetRepositoryInfo2Result = TryGetRepositoryInfo2Result;
		_p->_mtrep3__TryGetRepositoryInfo2Response::repositoryInfo = repositoryInfo;
	}
	return _p;
}

inline int soap_write__mtrep3__TryGetRepositoryInfo2Response(struct soap *soap, _mtrep3__TryGetRepositoryInfo2Response const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep3:TryGetRepositoryInfo2Response", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep3__TryGetRepositoryInfo2Response * SOAP_FMAC4 soap_get__mtrep3__TryGetRepositoryInfo2Response(struct soap*, _mtrep3__TryGetRepositoryInfo2Response *, const char*, const char*);

inline int soap_read__mtrep3__TryGetRepositoryInfo2Response(struct soap *soap, _mtrep3__TryGetRepositoryInfo2Response *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep3__TryGetRepositoryInfo2Response(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep3__TryGetRepositoryInfo2_DEFINED
#define SOAP_TYPE__mtrep3__TryGetRepositoryInfo2_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep3__TryGetRepositoryInfo2(struct soap*, const char*, int, const _mtrep3__TryGetRepositoryInfo2 *, const char*);
SOAP_FMAC3 _mtrep3__TryGetRepositoryInfo2 * SOAP_FMAC4 soap_in__mtrep3__TryGetRepositoryInfo2(struct soap*, const char*, _mtrep3__TryGetRepositoryInfo2 *, const char*);
SOAP_FMAC1 _mtrep3__TryGetRepositoryInfo2 * SOAP_FMAC2 repository_instantiate__mtrep3__TryGetRepositoryInfo2(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep3__TryGetRepositoryInfo2 * soap_new__mtrep3__TryGetRepositoryInfo2(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep3__TryGetRepositoryInfo2(soap, n, NULL, NULL, NULL);
}

inline _mtrep3__TryGetRepositoryInfo2 * soap_new_req__mtrep3__TryGetRepositoryInfo2(
	struct soap *soap)
{	_mtrep3__TryGetRepositoryInfo2 *_p = soap_new__mtrep3__TryGetRepositoryInfo2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep3__TryGetRepositoryInfo2 * soap_new_set__mtrep3__TryGetRepositoryInfo2(
	struct soap *soap,
	mtrep3__ClientInfo *clientInfo,
	std::string *url)
{	_mtrep3__TryGetRepositoryInfo2 *_p = soap_new__mtrep3__TryGetRepositoryInfo2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep3__TryGetRepositoryInfo2::clientInfo = clientInfo;
		_p->_mtrep3__TryGetRepositoryInfo2::url = url;
	}
	return _p;
}

inline int soap_write__mtrep3__TryGetRepositoryInfo2(struct soap *soap, _mtrep3__TryGetRepositoryInfo2 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep3:TryGetRepositoryInfo2", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep3__TryGetRepositoryInfo2 * SOAP_FMAC4 soap_get__mtrep3__TryGetRepositoryInfo2(struct soap*, _mtrep3__TryGetRepositoryInfo2 *, const char*, const char*);

inline int soap_read__mtrep3__TryGetRepositoryInfo2(struct soap *soap, _mtrep3__TryGetRepositoryInfo2 *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep3__TryGetRepositoryInfo2(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep3__PickRepository2Response_DEFINED
#define SOAP_TYPE__mtrep3__PickRepository2Response_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep3__PickRepository2Response(struct soap*, const char*, int, const _mtrep3__PickRepository2Response *, const char*);
SOAP_FMAC3 _mtrep3__PickRepository2Response * SOAP_FMAC4 soap_in__mtrep3__PickRepository2Response(struct soap*, const char*, _mtrep3__PickRepository2Response *, const char*);
SOAP_FMAC1 _mtrep3__PickRepository2Response * SOAP_FMAC2 repository_instantiate__mtrep3__PickRepository2Response(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep3__PickRepository2Response * soap_new__mtrep3__PickRepository2Response(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep3__PickRepository2Response(soap, n, NULL, NULL, NULL);
}

inline _mtrep3__PickRepository2Response * soap_new_req__mtrep3__PickRepository2Response(
	struct soap *soap)
{	_mtrep3__PickRepository2Response *_p = soap_new__mtrep3__PickRepository2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep3__PickRepository2Response * soap_new_set__mtrep3__PickRepository2Response(
	struct soap *soap,
	mtrep3__RepositoryInfo *PickRepository2Result)
{	_mtrep3__PickRepository2Response *_p = soap_new__mtrep3__PickRepository2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep3__PickRepository2Response::PickRepository2Result = PickRepository2Result;
	}
	return _p;
}

inline int soap_write__mtrep3__PickRepository2Response(struct soap *soap, _mtrep3__PickRepository2Response const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep3:PickRepository2Response", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep3__PickRepository2Response * SOAP_FMAC4 soap_get__mtrep3__PickRepository2Response(struct soap*, _mtrep3__PickRepository2Response *, const char*, const char*);

inline int soap_read__mtrep3__PickRepository2Response(struct soap *soap, _mtrep3__PickRepository2Response *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep3__PickRepository2Response(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep3__PickRepository2_DEFINED
#define SOAP_TYPE__mtrep3__PickRepository2_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep3__PickRepository2(struct soap*, const char*, int, const _mtrep3__PickRepository2 *, const char*);
SOAP_FMAC3 _mtrep3__PickRepository2 * SOAP_FMAC4 soap_in__mtrep3__PickRepository2(struct soap*, const char*, _mtrep3__PickRepository2 *, const char*);
SOAP_FMAC1 _mtrep3__PickRepository2 * SOAP_FMAC2 repository_instantiate__mtrep3__PickRepository2(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep3__PickRepository2 * soap_new__mtrep3__PickRepository2(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep3__PickRepository2(soap, n, NULL, NULL, NULL);
}

inline _mtrep3__PickRepository2 * soap_new_req__mtrep3__PickRepository2(
	struct soap *soap)
{	_mtrep3__PickRepository2 *_p = soap_new__mtrep3__PickRepository2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep3__PickRepository2 * soap_new_set__mtrep3__PickRepository2(
	struct soap *soap,
	mtrep3__ClientInfo *clientInfo)
{	_mtrep3__PickRepository2 *_p = soap_new__mtrep3__PickRepository2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep3__PickRepository2::clientInfo = clientInfo;
	}
	return _p;
}

inline int soap_write__mtrep3__PickRepository2(struct soap *soap, _mtrep3__PickRepository2 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep3:PickRepository2", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep3__PickRepository2 * SOAP_FMAC4 soap_get__mtrep3__PickRepository2(struct soap*, _mtrep3__PickRepository2 *, const char*, const char*);

inline int soap_read__mtrep3__PickRepository2(struct soap *soap, _mtrep3__PickRepository2 *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep3__PickRepository2(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep3__GetRepositories2Response_DEFINED
#define SOAP_TYPE__mtrep3__GetRepositories2Response_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep3__GetRepositories2Response(struct soap*, const char*, int, const _mtrep3__GetRepositories2Response *, const char*);
SOAP_FMAC3 _mtrep3__GetRepositories2Response * SOAP_FMAC4 soap_in__mtrep3__GetRepositories2Response(struct soap*, const char*, _mtrep3__GetRepositories2Response *, const char*);
SOAP_FMAC1 _mtrep3__GetRepositories2Response * SOAP_FMAC2 repository_instantiate__mtrep3__GetRepositories2Response(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep3__GetRepositories2Response * soap_new__mtrep3__GetRepositories2Response(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep3__GetRepositories2Response(soap, n, NULL, NULL, NULL);
}

inline _mtrep3__GetRepositories2Response * soap_new_req__mtrep3__GetRepositories2Response(
	struct soap *soap)
{	_mtrep3__GetRepositories2Response *_p = soap_new__mtrep3__GetRepositories2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep3__GetRepositories2Response * soap_new_set__mtrep3__GetRepositories2Response(
	struct soap *soap,
	mtrep3__ArrayOfRepositoryInfo *GetRepositories2Result)
{	_mtrep3__GetRepositories2Response *_p = soap_new__mtrep3__GetRepositories2Response(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep3__GetRepositories2Response::GetRepositories2Result = GetRepositories2Result;
	}
	return _p;
}

inline int soap_write__mtrep3__GetRepositories2Response(struct soap *soap, _mtrep3__GetRepositories2Response const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep3:GetRepositories2Response", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep3__GetRepositories2Response * SOAP_FMAC4 soap_get__mtrep3__GetRepositories2Response(struct soap*, _mtrep3__GetRepositories2Response *, const char*, const char*);

inline int soap_read__mtrep3__GetRepositories2Response(struct soap *soap, _mtrep3__GetRepositories2Response *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep3__GetRepositories2Response(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep3__GetRepositories2_DEFINED
#define SOAP_TYPE__mtrep3__GetRepositories2_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep3__GetRepositories2(struct soap*, const char*, int, const _mtrep3__GetRepositories2 *, const char*);
SOAP_FMAC3 _mtrep3__GetRepositories2 * SOAP_FMAC4 soap_in__mtrep3__GetRepositories2(struct soap*, const char*, _mtrep3__GetRepositories2 *, const char*);
SOAP_FMAC1 _mtrep3__GetRepositories2 * SOAP_FMAC2 repository_instantiate__mtrep3__GetRepositories2(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep3__GetRepositories2 * soap_new__mtrep3__GetRepositories2(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep3__GetRepositories2(soap, n, NULL, NULL, NULL);
}

inline _mtrep3__GetRepositories2 * soap_new_req__mtrep3__GetRepositories2(
	struct soap *soap,
	bool onlyOnline,
	bool noCorrupted,
	int maxDelay)
{	_mtrep3__GetRepositories2 *_p = soap_new__mtrep3__GetRepositories2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep3__GetRepositories2::onlyOnline = onlyOnline;
		_p->_mtrep3__GetRepositories2::noCorrupted = noCorrupted;
		_p->_mtrep3__GetRepositories2::maxDelay = maxDelay;
	}
	return _p;
}

inline _mtrep3__GetRepositories2 * soap_new_set__mtrep3__GetRepositories2(
	struct soap *soap,
	mtrep3__ClientInfo *clientInfo,
	bool onlyOnline,
	bool noCorrupted,
	int maxDelay)
{	_mtrep3__GetRepositories2 *_p = soap_new__mtrep3__GetRepositories2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep3__GetRepositories2::clientInfo = clientInfo;
		_p->_mtrep3__GetRepositories2::onlyOnline = onlyOnline;
		_p->_mtrep3__GetRepositories2::noCorrupted = noCorrupted;
		_p->_mtrep3__GetRepositories2::maxDelay = maxDelay;
	}
	return _p;
}

inline int soap_write__mtrep3__GetRepositories2(struct soap *soap, _mtrep3__GetRepositories2 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep3:GetRepositories2", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep3__GetRepositories2 * SOAP_FMAC4 soap_get__mtrep3__GetRepositories2(struct soap*, _mtrep3__GetRepositories2 *, const char*, const char*);

inline int soap_read__mtrep3__GetRepositories2(struct soap *soap, _mtrep3__GetRepositories2 *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep3__GetRepositories2(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep3__RepositoryInfo_DEFINED
#define SOAP_TYPE_mtrep3__RepositoryInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep3__RepositoryInfo(struct soap*, const char*, int, const mtrep3__RepositoryInfo *, const char*);
SOAP_FMAC3 mtrep3__RepositoryInfo * SOAP_FMAC4 soap_in_mtrep3__RepositoryInfo(struct soap*, const char*, mtrep3__RepositoryInfo *, const char*);
SOAP_FMAC1 mtrep3__RepositoryInfo * SOAP_FMAC2 repository_instantiate_mtrep3__RepositoryInfo(struct soap*, int, const char*, const char*, size_t*);

inline mtrep3__RepositoryInfo * soap_new_mtrep3__RepositoryInfo(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep3__RepositoryInfo(soap, n, NULL, NULL, NULL);
}

inline mtrep3__RepositoryInfo * soap_new_req_mtrep3__RepositoryInfo(
	struct soap *soap,
	int Date,
	int Delay,
	enum mtrep3__RepositoryIntegrity Integrity,
	enum mtrep3__PackageLevel Level,
	enum mtrep3__RepositoryStatus Status,
	int Version)
{	mtrep3__RepositoryInfo *_p = soap_new_mtrep3__RepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep3__RepositoryInfo::Date = Date;
		_p->mtrep3__RepositoryInfo::Delay = Delay;
		_p->mtrep3__RepositoryInfo::Integrity = Integrity;
		_p->mtrep3__RepositoryInfo::Level = Level;
		_p->mtrep3__RepositoryInfo::Status = Status;
		_p->mtrep3__RepositoryInfo::Version = Version;
	}
	return _p;
}

inline mtrep3__RepositoryInfo * soap_new_set_mtrep3__RepositoryInfo(
	struct soap *soap,
	std::string *Country,
	int Date,
	int Delay,
	std::string *Description,
	enum mtrep3__RepositoryIntegrity Integrity,
	enum mtrep3__PackageLevel Level,
	enum mtrep3__RepositoryStatus Status,
	std::string *Url,
	int Version)
{	mtrep3__RepositoryInfo *_p = soap_new_mtrep3__RepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep3__RepositoryInfo::Country = Country;
		_p->mtrep3__RepositoryInfo::Date = Date;
		_p->mtrep3__RepositoryInfo::Delay = Delay;
		_p->mtrep3__RepositoryInfo::Description = Description;
		_p->mtrep3__RepositoryInfo::Integrity = Integrity;
		_p->mtrep3__RepositoryInfo::Level = Level;
		_p->mtrep3__RepositoryInfo::Status = Status;
		_p->mtrep3__RepositoryInfo::Url = Url;
		_p->mtrep3__RepositoryInfo::Version = Version;
	}
	return _p;
}

inline int soap_write_mtrep3__RepositoryInfo(struct soap *soap, mtrep3__RepositoryInfo const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep3:RepositoryInfo", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep3__RepositoryInfo * SOAP_FMAC4 soap_get_mtrep3__RepositoryInfo(struct soap*, mtrep3__RepositoryInfo *, const char*, const char*);

inline int soap_read_mtrep3__RepositoryInfo(struct soap *soap, mtrep3__RepositoryInfo *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep3__RepositoryInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep3__ArrayOfRepositoryInfo_DEFINED
#define SOAP_TYPE_mtrep3__ArrayOfRepositoryInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep3__ArrayOfRepositoryInfo(struct soap*, const char*, int, const mtrep3__ArrayOfRepositoryInfo *, const char*);
SOAP_FMAC3 mtrep3__ArrayOfRepositoryInfo * SOAP_FMAC4 soap_in_mtrep3__ArrayOfRepositoryInfo(struct soap*, const char*, mtrep3__ArrayOfRepositoryInfo *, const char*);
SOAP_FMAC1 mtrep3__ArrayOfRepositoryInfo * SOAP_FMAC2 repository_instantiate_mtrep3__ArrayOfRepositoryInfo(struct soap*, int, const char*, const char*, size_t*);

inline mtrep3__ArrayOfRepositoryInfo * soap_new_mtrep3__ArrayOfRepositoryInfo(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep3__ArrayOfRepositoryInfo(soap, n, NULL, NULL, NULL);
}

inline mtrep3__ArrayOfRepositoryInfo * soap_new_req_mtrep3__ArrayOfRepositoryInfo(
	struct soap *soap)
{	mtrep3__ArrayOfRepositoryInfo *_p = soap_new_mtrep3__ArrayOfRepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline mtrep3__ArrayOfRepositoryInfo * soap_new_set_mtrep3__ArrayOfRepositoryInfo(
	struct soap *soap,
	const std::vector<mtrep3__RepositoryInfo *> & RepositoryInfo)
{	mtrep3__ArrayOfRepositoryInfo *_p = soap_new_mtrep3__ArrayOfRepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep3__ArrayOfRepositoryInfo::RepositoryInfo = RepositoryInfo;
	}
	return _p;
}

inline int soap_write_mtrep3__ArrayOfRepositoryInfo(struct soap *soap, mtrep3__ArrayOfRepositoryInfo const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep3:ArrayOfRepositoryInfo", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep3__ArrayOfRepositoryInfo * SOAP_FMAC4 soap_get_mtrep3__ArrayOfRepositoryInfo(struct soap*, mtrep3__ArrayOfRepositoryInfo *, const char*, const char*);

inline int soap_read_mtrep3__ArrayOfRepositoryInfo(struct soap *soap, mtrep3__ArrayOfRepositoryInfo *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep3__ArrayOfRepositoryInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep3__ClientInfo_DEFINED
#define SOAP_TYPE_mtrep3__ClientInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep3__ClientInfo(struct soap*, const char*, int, const mtrep3__ClientInfo *, const char*);
SOAP_FMAC3 mtrep3__ClientInfo * SOAP_FMAC4 soap_in_mtrep3__ClientInfo(struct soap*, const char*, mtrep3__ClientInfo *, const char*);
SOAP_FMAC1 mtrep3__ClientInfo * SOAP_FMAC2 repository_instantiate_mtrep3__ClientInfo(struct soap*, int, const char*, const char*, size_t*);

inline mtrep3__ClientInfo * soap_new_mtrep3__ClientInfo(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep3__ClientInfo(soap, n, NULL, NULL, NULL);
}

inline mtrep3__ClientInfo * soap_new_req_mtrep3__ClientInfo(
	struct soap *soap)
{	mtrep3__ClientInfo *_p = soap_new_mtrep3__ClientInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline mtrep3__ClientInfo * soap_new_set_mtrep3__ClientInfo(
	struct soap *soap,
	std::string *Name,
	std::string *Version)
{	mtrep3__ClientInfo *_p = soap_new_mtrep3__ClientInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep3__ClientInfo::Name = Name;
		_p->mtrep3__ClientInfo::Version = Version;
	}
	return _p;
}

inline int soap_write_mtrep3__ClientInfo(struct soap *soap, mtrep3__ClientInfo const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep3:ClientInfo", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep3__ClientInfo * SOAP_FMAC4 soap_get_mtrep3__ClientInfo(struct soap*, mtrep3__ClientInfo *, const char*, const char*);

inline int soap_read_mtrep3__ClientInfo(struct soap *soap, mtrep3__ClientInfo *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep3__ClientInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep2__GetListCreationTimeResponse_DEFINED
#define SOAP_TYPE__mtrep2__GetListCreationTimeResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep2__GetListCreationTimeResponse(struct soap*, const char*, int, const _mtrep2__GetListCreationTimeResponse *, const char*);
SOAP_FMAC3 _mtrep2__GetListCreationTimeResponse * SOAP_FMAC4 soap_in__mtrep2__GetListCreationTimeResponse(struct soap*, const char*, _mtrep2__GetListCreationTimeResponse *, const char*);
SOAP_FMAC1 _mtrep2__GetListCreationTimeResponse * SOAP_FMAC2 repository_instantiate__mtrep2__GetListCreationTimeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep2__GetListCreationTimeResponse * soap_new__mtrep2__GetListCreationTimeResponse(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep2__GetListCreationTimeResponse(soap, n, NULL, NULL, NULL);
}

inline _mtrep2__GetListCreationTimeResponse * soap_new_req__mtrep2__GetListCreationTimeResponse(
	struct soap *soap,
	int GetListCreationTimeResult)
{	_mtrep2__GetListCreationTimeResponse *_p = soap_new__mtrep2__GetListCreationTimeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep2__GetListCreationTimeResponse::GetListCreationTimeResult = GetListCreationTimeResult;
	}
	return _p;
}

inline _mtrep2__GetListCreationTimeResponse * soap_new_set__mtrep2__GetListCreationTimeResponse(
	struct soap *soap,
	int GetListCreationTimeResult)
{	_mtrep2__GetListCreationTimeResponse *_p = soap_new__mtrep2__GetListCreationTimeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep2__GetListCreationTimeResponse::GetListCreationTimeResult = GetListCreationTimeResult;
	}
	return _p;
}

inline int soap_write__mtrep2__GetListCreationTimeResponse(struct soap *soap, _mtrep2__GetListCreationTimeResponse const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep2:GetListCreationTimeResponse", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep2__GetListCreationTimeResponse * SOAP_FMAC4 soap_get__mtrep2__GetListCreationTimeResponse(struct soap*, _mtrep2__GetListCreationTimeResponse *, const char*, const char*);

inline int soap_read__mtrep2__GetListCreationTimeResponse(struct soap *soap, _mtrep2__GetListCreationTimeResponse *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep2__GetListCreationTimeResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep2__GetListCreationTime_DEFINED
#define SOAP_TYPE__mtrep2__GetListCreationTime_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep2__GetListCreationTime(struct soap*, const char*, int, const _mtrep2__GetListCreationTime *, const char*);
SOAP_FMAC3 _mtrep2__GetListCreationTime * SOAP_FMAC4 soap_in__mtrep2__GetListCreationTime(struct soap*, const char*, _mtrep2__GetListCreationTime *, const char*);
SOAP_FMAC1 _mtrep2__GetListCreationTime * SOAP_FMAC2 repository_instantiate__mtrep2__GetListCreationTime(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep2__GetListCreationTime * soap_new__mtrep2__GetListCreationTime(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep2__GetListCreationTime(soap, n, NULL, NULL, NULL);
}

inline _mtrep2__GetListCreationTime * soap_new_req__mtrep2__GetListCreationTime(
	struct soap *soap)
{	_mtrep2__GetListCreationTime *_p = soap_new__mtrep2__GetListCreationTime(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep2__GetListCreationTime * soap_new_set__mtrep2__GetListCreationTime(
	struct soap *soap)
{	_mtrep2__GetListCreationTime *_p = soap_new__mtrep2__GetListCreationTime(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__mtrep2__GetListCreationTime(struct soap *soap, _mtrep2__GetListCreationTime const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep2:GetListCreationTime", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep2__GetListCreationTime * SOAP_FMAC4 soap_get__mtrep2__GetListCreationTime(struct soap*, _mtrep2__GetListCreationTime *, const char*, const char*);

inline int soap_read__mtrep2__GetListCreationTime(struct soap *soap, _mtrep2__GetListCreationTime *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep2__GetListCreationTime(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep__GetRepositoriesResponse_DEFINED
#define SOAP_TYPE__mtrep__GetRepositoriesResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep__GetRepositoriesResponse(struct soap*, const char*, int, const _mtrep__GetRepositoriesResponse *, const char*);
SOAP_FMAC3 _mtrep__GetRepositoriesResponse * SOAP_FMAC4 soap_in__mtrep__GetRepositoriesResponse(struct soap*, const char*, _mtrep__GetRepositoriesResponse *, const char*);
SOAP_FMAC1 _mtrep__GetRepositoriesResponse * SOAP_FMAC2 repository_instantiate__mtrep__GetRepositoriesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep__GetRepositoriesResponse * soap_new__mtrep__GetRepositoriesResponse(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep__GetRepositoriesResponse(soap, n, NULL, NULL, NULL);
}

inline _mtrep__GetRepositoriesResponse * soap_new_req__mtrep__GetRepositoriesResponse(
	struct soap *soap)
{	_mtrep__GetRepositoriesResponse *_p = soap_new__mtrep__GetRepositoriesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep__GetRepositoriesResponse * soap_new_set__mtrep__GetRepositoriesResponse(
	struct soap *soap,
	mtrep__ArrayOfRepositoryInfo *GetRepositoriesResult)
{	_mtrep__GetRepositoriesResponse *_p = soap_new__mtrep__GetRepositoriesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep__GetRepositoriesResponse::GetRepositoriesResult = GetRepositoriesResult;
	}
	return _p;
}

inline int soap_write__mtrep__GetRepositoriesResponse(struct soap *soap, _mtrep__GetRepositoriesResponse const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep:GetRepositoriesResponse", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep__GetRepositoriesResponse * SOAP_FMAC4 soap_get__mtrep__GetRepositoriesResponse(struct soap*, _mtrep__GetRepositoriesResponse *, const char*, const char*);

inline int soap_read__mtrep__GetRepositoriesResponse(struct soap *soap, _mtrep__GetRepositoriesResponse *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep__GetRepositoriesResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep__GetRepositories_DEFINED
#define SOAP_TYPE__mtrep__GetRepositories_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep__GetRepositories(struct soap*, const char*, int, const _mtrep__GetRepositories *, const char*);
SOAP_FMAC3 _mtrep__GetRepositories * SOAP_FMAC4 soap_in__mtrep__GetRepositories(struct soap*, const char*, _mtrep__GetRepositories *, const char*);
SOAP_FMAC1 _mtrep__GetRepositories * SOAP_FMAC2 repository_instantiate__mtrep__GetRepositories(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep__GetRepositories * soap_new__mtrep__GetRepositories(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep__GetRepositories(soap, n, NULL, NULL, NULL);
}

inline _mtrep__GetRepositories * soap_new_req__mtrep__GetRepositories(
	struct soap *soap,
	bool onlyOnline,
	bool noCorrupted,
	int maxDelay)
{	_mtrep__GetRepositories *_p = soap_new__mtrep__GetRepositories(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep__GetRepositories::onlyOnline = onlyOnline;
		_p->_mtrep__GetRepositories::noCorrupted = noCorrupted;
		_p->_mtrep__GetRepositories::maxDelay = maxDelay;
	}
	return _p;
}

inline _mtrep__GetRepositories * soap_new_set__mtrep__GetRepositories(
	struct soap *soap,
	bool onlyOnline,
	bool noCorrupted,
	int maxDelay)
{	_mtrep__GetRepositories *_p = soap_new__mtrep__GetRepositories(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep__GetRepositories::onlyOnline = onlyOnline;
		_p->_mtrep__GetRepositories::noCorrupted = noCorrupted;
		_p->_mtrep__GetRepositories::maxDelay = maxDelay;
	}
	return _p;
}

inline int soap_write__mtrep__GetRepositories(struct soap *soap, _mtrep__GetRepositories const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep:GetRepositories", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep__GetRepositories * SOAP_FMAC4 soap_get__mtrep__GetRepositories(struct soap*, _mtrep__GetRepositories *, const char*, const char*);

inline int soap_read__mtrep__GetRepositories(struct soap *soap, _mtrep__GetRepositories *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep__GetRepositories(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep__GetAllRepositoriesResponse_DEFINED
#define SOAP_TYPE__mtrep__GetAllRepositoriesResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep__GetAllRepositoriesResponse(struct soap*, const char*, int, const _mtrep__GetAllRepositoriesResponse *, const char*);
SOAP_FMAC3 _mtrep__GetAllRepositoriesResponse * SOAP_FMAC4 soap_in__mtrep__GetAllRepositoriesResponse(struct soap*, const char*, _mtrep__GetAllRepositoriesResponse *, const char*);
SOAP_FMAC1 _mtrep__GetAllRepositoriesResponse * SOAP_FMAC2 repository_instantiate__mtrep__GetAllRepositoriesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep__GetAllRepositoriesResponse * soap_new__mtrep__GetAllRepositoriesResponse(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep__GetAllRepositoriesResponse(soap, n, NULL, NULL, NULL);
}

inline _mtrep__GetAllRepositoriesResponse * soap_new_req__mtrep__GetAllRepositoriesResponse(
	struct soap *soap)
{	_mtrep__GetAllRepositoriesResponse *_p = soap_new__mtrep__GetAllRepositoriesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep__GetAllRepositoriesResponse * soap_new_set__mtrep__GetAllRepositoriesResponse(
	struct soap *soap,
	mtrep__ArrayOfRepositoryInfo *GetAllRepositoriesResult)
{	_mtrep__GetAllRepositoriesResponse *_p = soap_new__mtrep__GetAllRepositoriesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep__GetAllRepositoriesResponse::GetAllRepositoriesResult = GetAllRepositoriesResult;
	}
	return _p;
}

inline int soap_write__mtrep__GetAllRepositoriesResponse(struct soap *soap, _mtrep__GetAllRepositoriesResponse const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep:GetAllRepositoriesResponse", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep__GetAllRepositoriesResponse * SOAP_FMAC4 soap_get__mtrep__GetAllRepositoriesResponse(struct soap*, _mtrep__GetAllRepositoriesResponse *, const char*, const char*);

inline int soap_read__mtrep__GetAllRepositoriesResponse(struct soap *soap, _mtrep__GetAllRepositoriesResponse *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep__GetAllRepositoriesResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep__GetAllRepositories_DEFINED
#define SOAP_TYPE__mtrep__GetAllRepositories_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep__GetAllRepositories(struct soap*, const char*, int, const _mtrep__GetAllRepositories *, const char*);
SOAP_FMAC3 _mtrep__GetAllRepositories * SOAP_FMAC4 soap_in__mtrep__GetAllRepositories(struct soap*, const char*, _mtrep__GetAllRepositories *, const char*);
SOAP_FMAC1 _mtrep__GetAllRepositories * SOAP_FMAC2 repository_instantiate__mtrep__GetAllRepositories(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep__GetAllRepositories * soap_new__mtrep__GetAllRepositories(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep__GetAllRepositories(soap, n, NULL, NULL, NULL);
}

inline _mtrep__GetAllRepositories * soap_new_req__mtrep__GetAllRepositories(
	struct soap *soap)
{	_mtrep__GetAllRepositories *_p = soap_new__mtrep__GetAllRepositories(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep__GetAllRepositories * soap_new_set__mtrep__GetAllRepositories(
	struct soap *soap)
{	_mtrep__GetAllRepositories *_p = soap_new__mtrep__GetAllRepositories(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__mtrep__GetAllRepositories(struct soap *soap, _mtrep__GetAllRepositories const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep:GetAllRepositories", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep__GetAllRepositories * SOAP_FMAC4 soap_get__mtrep__GetAllRepositories(struct soap*, _mtrep__GetAllRepositories *, const char*, const char*);

inline int soap_read__mtrep__GetAllRepositories(struct soap *soap, _mtrep__GetAllRepositories *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep__GetAllRepositories(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep__PickRepositoryResponse_DEFINED
#define SOAP_TYPE__mtrep__PickRepositoryResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep__PickRepositoryResponse(struct soap*, const char*, int, const _mtrep__PickRepositoryResponse *, const char*);
SOAP_FMAC3 _mtrep__PickRepositoryResponse * SOAP_FMAC4 soap_in__mtrep__PickRepositoryResponse(struct soap*, const char*, _mtrep__PickRepositoryResponse *, const char*);
SOAP_FMAC1 _mtrep__PickRepositoryResponse * SOAP_FMAC2 repository_instantiate__mtrep__PickRepositoryResponse(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep__PickRepositoryResponse * soap_new__mtrep__PickRepositoryResponse(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep__PickRepositoryResponse(soap, n, NULL, NULL, NULL);
}

inline _mtrep__PickRepositoryResponse * soap_new_req__mtrep__PickRepositoryResponse(
	struct soap *soap)
{	_mtrep__PickRepositoryResponse *_p = soap_new__mtrep__PickRepositoryResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep__PickRepositoryResponse * soap_new_set__mtrep__PickRepositoryResponse(
	struct soap *soap,
	mtrep__RepositoryInfo *PickRepositoryResult)
{	_mtrep__PickRepositoryResponse *_p = soap_new__mtrep__PickRepositoryResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep__PickRepositoryResponse::PickRepositoryResult = PickRepositoryResult;
	}
	return _p;
}

inline int soap_write__mtrep__PickRepositoryResponse(struct soap *soap, _mtrep__PickRepositoryResponse const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep:PickRepositoryResponse", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep__PickRepositoryResponse * SOAP_FMAC4 soap_get__mtrep__PickRepositoryResponse(struct soap*, _mtrep__PickRepositoryResponse *, const char*, const char*);

inline int soap_read__mtrep__PickRepositoryResponse(struct soap *soap, _mtrep__PickRepositoryResponse *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep__PickRepositoryResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep__PickRepository_DEFINED
#define SOAP_TYPE__mtrep__PickRepository_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep__PickRepository(struct soap*, const char*, int, const _mtrep__PickRepository *, const char*);
SOAP_FMAC3 _mtrep__PickRepository * SOAP_FMAC4 soap_in__mtrep__PickRepository(struct soap*, const char*, _mtrep__PickRepository *, const char*);
SOAP_FMAC1 _mtrep__PickRepository * SOAP_FMAC2 repository_instantiate__mtrep__PickRepository(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep__PickRepository * soap_new__mtrep__PickRepository(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep__PickRepository(soap, n, NULL, NULL, NULL);
}

inline _mtrep__PickRepository * soap_new_req__mtrep__PickRepository(
	struct soap *soap)
{	_mtrep__PickRepository *_p = soap_new__mtrep__PickRepository(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep__PickRepository * soap_new_set__mtrep__PickRepository(
	struct soap *soap)
{	_mtrep__PickRepository *_p = soap_new__mtrep__PickRepository(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write__mtrep__PickRepository(struct soap *soap, _mtrep__PickRepository const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep:PickRepository", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep__PickRepository * SOAP_FMAC4 soap_get__mtrep__PickRepository(struct soap*, _mtrep__PickRepository *, const char*, const char*);

inline int soap_read__mtrep__PickRepository(struct soap *soap, _mtrep__PickRepository *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep__PickRepository(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep__TryGetRepositoryInfoResponse_DEFINED
#define SOAP_TYPE__mtrep__TryGetRepositoryInfoResponse_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep__TryGetRepositoryInfoResponse(struct soap*, const char*, int, const _mtrep__TryGetRepositoryInfoResponse *, const char*);
SOAP_FMAC3 _mtrep__TryGetRepositoryInfoResponse * SOAP_FMAC4 soap_in__mtrep__TryGetRepositoryInfoResponse(struct soap*, const char*, _mtrep__TryGetRepositoryInfoResponse *, const char*);
SOAP_FMAC1 _mtrep__TryGetRepositoryInfoResponse * SOAP_FMAC2 repository_instantiate__mtrep__TryGetRepositoryInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep__TryGetRepositoryInfoResponse * soap_new__mtrep__TryGetRepositoryInfoResponse(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep__TryGetRepositoryInfoResponse(soap, n, NULL, NULL, NULL);
}

inline _mtrep__TryGetRepositoryInfoResponse * soap_new_req__mtrep__TryGetRepositoryInfoResponse(
	struct soap *soap,
	bool TryGetRepositoryInfoResult)
{	_mtrep__TryGetRepositoryInfoResponse *_p = soap_new__mtrep__TryGetRepositoryInfoResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep__TryGetRepositoryInfoResponse::TryGetRepositoryInfoResult = TryGetRepositoryInfoResult;
	}
	return _p;
}

inline _mtrep__TryGetRepositoryInfoResponse * soap_new_set__mtrep__TryGetRepositoryInfoResponse(
	struct soap *soap,
	bool TryGetRepositoryInfoResult,
	mtrep__RepositoryInfo *repositoryInfo)
{	_mtrep__TryGetRepositoryInfoResponse *_p = soap_new__mtrep__TryGetRepositoryInfoResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep__TryGetRepositoryInfoResponse::TryGetRepositoryInfoResult = TryGetRepositoryInfoResult;
		_p->_mtrep__TryGetRepositoryInfoResponse::repositoryInfo = repositoryInfo;
	}
	return _p;
}

inline int soap_write__mtrep__TryGetRepositoryInfoResponse(struct soap *soap, _mtrep__TryGetRepositoryInfoResponse const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep:TryGetRepositoryInfoResponse", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep__TryGetRepositoryInfoResponse * SOAP_FMAC4 soap_get__mtrep__TryGetRepositoryInfoResponse(struct soap*, _mtrep__TryGetRepositoryInfoResponse *, const char*, const char*);

inline int soap_read__mtrep__TryGetRepositoryInfoResponse(struct soap *soap, _mtrep__TryGetRepositoryInfoResponse *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep__TryGetRepositoryInfoResponse(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE__mtrep__TryGetRepositoryInfo_DEFINED
#define SOAP_TYPE__mtrep__TryGetRepositoryInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__mtrep__TryGetRepositoryInfo(struct soap*, const char*, int, const _mtrep__TryGetRepositoryInfo *, const char*);
SOAP_FMAC3 _mtrep__TryGetRepositoryInfo * SOAP_FMAC4 soap_in__mtrep__TryGetRepositoryInfo(struct soap*, const char*, _mtrep__TryGetRepositoryInfo *, const char*);
SOAP_FMAC1 _mtrep__TryGetRepositoryInfo * SOAP_FMAC2 repository_instantiate__mtrep__TryGetRepositoryInfo(struct soap*, int, const char*, const char*, size_t*);

inline _mtrep__TryGetRepositoryInfo * soap_new__mtrep__TryGetRepositoryInfo(struct soap *soap, int n = -1)
{	return repository_instantiate__mtrep__TryGetRepositoryInfo(soap, n, NULL, NULL, NULL);
}

inline _mtrep__TryGetRepositoryInfo * soap_new_req__mtrep__TryGetRepositoryInfo(
	struct soap *soap)
{	_mtrep__TryGetRepositoryInfo *_p = soap_new__mtrep__TryGetRepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _mtrep__TryGetRepositoryInfo * soap_new_set__mtrep__TryGetRepositoryInfo(
	struct soap *soap,
	std::string *url)
{	_mtrep__TryGetRepositoryInfo *_p = soap_new__mtrep__TryGetRepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_mtrep__TryGetRepositoryInfo::url = url;
	}
	return _p;
}

inline int soap_write__mtrep__TryGetRepositoryInfo(struct soap *soap, _mtrep__TryGetRepositoryInfo const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep:TryGetRepositoryInfo", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _mtrep__TryGetRepositoryInfo * SOAP_FMAC4 soap_get__mtrep__TryGetRepositoryInfo(struct soap*, _mtrep__TryGetRepositoryInfo *, const char*, const char*);

inline int soap_read__mtrep__TryGetRepositoryInfo(struct soap *soap, _mtrep__TryGetRepositoryInfo *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__mtrep__TryGetRepositoryInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep__ArrayOfRepositoryInfo_DEFINED
#define SOAP_TYPE_mtrep__ArrayOfRepositoryInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep__ArrayOfRepositoryInfo(struct soap*, const char*, int, const mtrep__ArrayOfRepositoryInfo *, const char*);
SOAP_FMAC3 mtrep__ArrayOfRepositoryInfo * SOAP_FMAC4 soap_in_mtrep__ArrayOfRepositoryInfo(struct soap*, const char*, mtrep__ArrayOfRepositoryInfo *, const char*);
SOAP_FMAC1 mtrep__ArrayOfRepositoryInfo * SOAP_FMAC2 repository_instantiate_mtrep__ArrayOfRepositoryInfo(struct soap*, int, const char*, const char*, size_t*);

inline mtrep__ArrayOfRepositoryInfo * soap_new_mtrep__ArrayOfRepositoryInfo(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep__ArrayOfRepositoryInfo(soap, n, NULL, NULL, NULL);
}

inline mtrep__ArrayOfRepositoryInfo * soap_new_req_mtrep__ArrayOfRepositoryInfo(
	struct soap *soap)
{	mtrep__ArrayOfRepositoryInfo *_p = soap_new_mtrep__ArrayOfRepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline mtrep__ArrayOfRepositoryInfo * soap_new_set_mtrep__ArrayOfRepositoryInfo(
	struct soap *soap,
	const std::vector<mtrep__RepositoryInfo *> & RepositoryInfo)
{	mtrep__ArrayOfRepositoryInfo *_p = soap_new_mtrep__ArrayOfRepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep__ArrayOfRepositoryInfo::RepositoryInfo = RepositoryInfo;
	}
	return _p;
}

inline int soap_write_mtrep__ArrayOfRepositoryInfo(struct soap *soap, mtrep__ArrayOfRepositoryInfo const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep:ArrayOfRepositoryInfo", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep__ArrayOfRepositoryInfo * SOAP_FMAC4 soap_get_mtrep__ArrayOfRepositoryInfo(struct soap*, mtrep__ArrayOfRepositoryInfo *, const char*, const char*);

inline int soap_read_mtrep__ArrayOfRepositoryInfo(struct soap *soap, mtrep__ArrayOfRepositoryInfo *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep__ArrayOfRepositoryInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_mtrep__RepositoryInfo_DEFINED
#define SOAP_TYPE_mtrep__RepositoryInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mtrep__RepositoryInfo(struct soap*, const char*, int, const mtrep__RepositoryInfo *, const char*);
SOAP_FMAC3 mtrep__RepositoryInfo * SOAP_FMAC4 soap_in_mtrep__RepositoryInfo(struct soap*, const char*, mtrep__RepositoryInfo *, const char*);
SOAP_FMAC1 mtrep__RepositoryInfo * SOAP_FMAC2 repository_instantiate_mtrep__RepositoryInfo(struct soap*, int, const char*, const char*, size_t*);

inline mtrep__RepositoryInfo * soap_new_mtrep__RepositoryInfo(struct soap *soap, int n = -1)
{	return repository_instantiate_mtrep__RepositoryInfo(soap, n, NULL, NULL, NULL);
}

inline mtrep__RepositoryInfo * soap_new_req_mtrep__RepositoryInfo(
	struct soap *soap,
	int Date,
	int Delay,
	enum mtrep__RepositoryIntegrity Integrity,
	enum mtrep__PackageLevel Level,
	enum mtrep__RepositoryStatus Status,
	int Version)
{	mtrep__RepositoryInfo *_p = soap_new_mtrep__RepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep__RepositoryInfo::Date = Date;
		_p->mtrep__RepositoryInfo::Delay = Delay;
		_p->mtrep__RepositoryInfo::Integrity = Integrity;
		_p->mtrep__RepositoryInfo::Level = Level;
		_p->mtrep__RepositoryInfo::Status = Status;
		_p->mtrep__RepositoryInfo::Version = Version;
	}
	return _p;
}

inline mtrep__RepositoryInfo * soap_new_set_mtrep__RepositoryInfo(
	struct soap *soap,
	std::string *Country,
	int Date,
	int Delay,
	std::string *Description,
	enum mtrep__RepositoryIntegrity Integrity,
	enum mtrep__PackageLevel Level,
	enum mtrep__RepositoryStatus Status,
	std::string *Url,
	int Version)
{	mtrep__RepositoryInfo *_p = soap_new_mtrep__RepositoryInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->mtrep__RepositoryInfo::Country = Country;
		_p->mtrep__RepositoryInfo::Date = Date;
		_p->mtrep__RepositoryInfo::Delay = Delay;
		_p->mtrep__RepositoryInfo::Description = Description;
		_p->mtrep__RepositoryInfo::Integrity = Integrity;
		_p->mtrep__RepositoryInfo::Level = Level;
		_p->mtrep__RepositoryInfo::Status = Status;
		_p->mtrep__RepositoryInfo::Url = Url;
		_p->mtrep__RepositoryInfo::Version = Version;
	}
	return _p;
}

inline int soap_write_mtrep__RepositoryInfo(struct soap *soap, mtrep__RepositoryInfo const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "mtrep:RepositoryInfo", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 mtrep__RepositoryInfo * SOAP_FMAC4 soap_get_mtrep__RepositoryInfo(struct soap*, mtrep__RepositoryInfo *, const char*, const char*);

inline int soap_read_mtrep__RepositoryInfo(struct soap *soap, mtrep__RepositoryInfo *p)
{	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_mtrep__RepositoryInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 repository_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1)
{	return repository_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(
	struct soap *soap)
{	struct SOAP_ENV__Fault *_p = soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Fault(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(
	struct soap *soap,
	char *faultcode,
	char *faultstring,
	char *faultactor,
	struct SOAP_ENV__Detail *detail,
	struct SOAP_ENV__Code *SOAP_ENV__Code,
	struct SOAP_ENV__Reason *SOAP_ENV__Reason,
	char *SOAP_ENV__Node,
	char *SOAP_ENV__Role,
	struct SOAP_ENV__Detail *SOAP_ENV__Detail)
{	struct SOAP_ENV__Fault *_p = soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Fault(soap, _p);
		_p->faultcode = faultcode;
		_p->faultstring = faultstring;
		_p->faultactor = faultactor;
		_p->detail = detail;
		_p->SOAP_ENV__Code = SOAP_ENV__Code;
		_p->SOAP_ENV__Reason = SOAP_ENV__Reason;
		_p->SOAP_ENV__Node = SOAP_ENV__Node;
		_p->SOAP_ENV__Role = SOAP_ENV__Role;
		_p->SOAP_ENV__Detail = SOAP_ENV__Detail;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

inline int soap_write_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, p), 0) || soap_put_SOAP_ENV__Fault(soap, p, "SOAP-ENV:Fault", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

inline int soap_read_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p)
{	if (p)
	{	soap_default_SOAP_ENV__Fault(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Fault(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 repository_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1)
{	return repository_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(
	struct soap *soap)
{	struct SOAP_ENV__Reason *_p = soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Reason(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(
	struct soap *soap,
	char *SOAP_ENV__Text)
{	struct SOAP_ENV__Reason *_p = soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Reason(soap, _p);
		_p->SOAP_ENV__Text = SOAP_ENV__Text;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

inline int soap_write_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, p), 0) || soap_put_SOAP_ENV__Reason(soap, p, "SOAP-ENV:Reason", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

inline int soap_read_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p)
{	if (p)
	{	soap_default_SOAP_ENV__Reason(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Reason(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 repository_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1)
{	return repository_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(
	struct soap *soap,
	int __type,
	void *fault)
{	struct SOAP_ENV__Detail *_p = soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(
	struct soap *soap,
	char *__any,
	int __type,
	void *fault)
{	struct SOAP_ENV__Detail *_p = soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__any = __any;
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

inline int soap_write_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, p), 0) || soap_put_SOAP_ENV__Detail(soap, p, "SOAP-ENV:Detail", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

inline int soap_read_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p)
{	if (p)
	{	soap_default_SOAP_ENV__Detail(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Detail(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 repository_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1)
{	return repository_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(
	struct soap *soap)
{	struct SOAP_ENV__Code *_p = soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Code(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(
	struct soap *soap,
	char *SOAP_ENV__Value,
	struct SOAP_ENV__Code *SOAP_ENV__Subcode)
{	struct SOAP_ENV__Code *_p = soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Code(soap, _p);
		_p->SOAP_ENV__Value = SOAP_ENV__Value;
		_p->SOAP_ENV__Subcode = SOAP_ENV__Subcode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

inline int soap_write_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, p), 0) || soap_put_SOAP_ENV__Code(soap, p, "SOAP-ENV:Code", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

inline int soap_read_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p)
{	if (p)
	{	soap_default_SOAP_ENV__Code(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Code(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 repository_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1)
{	return repository_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(
	struct soap *soap)
{	struct SOAP_ENV__Header *_p = soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(
	struct soap *soap)
{	struct SOAP_ENV__Header *_p = soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

inline int soap_write_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, p), 0) || soap_put_SOAP_ENV__Header(soap, p, "SOAP-ENV:Header", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

inline int soap_read_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p)
{	if (p)
	{	soap_default_SOAP_ENV__Header(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Header(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef SOAP_TYPE___mtrep7__TryGetRepositoryInfo3__DEFINED
#define SOAP_TYPE___mtrep7__TryGetRepositoryInfo3__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__TryGetRepositoryInfo3_(struct soap*, struct __mtrep7__TryGetRepositoryInfo3_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__TryGetRepositoryInfo3_(struct soap*, const struct __mtrep7__TryGetRepositoryInfo3_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__TryGetRepositoryInfo3_(struct soap*, const char*, int, const struct __mtrep7__TryGetRepositoryInfo3_ *, const char*);
SOAP_FMAC3 struct __mtrep7__TryGetRepositoryInfo3_ * SOAP_FMAC4 soap_in___mtrep7__TryGetRepositoryInfo3_(struct soap*, const char*, struct __mtrep7__TryGetRepositoryInfo3_ *, const char*);
SOAP_FMAC1 struct __mtrep7__TryGetRepositoryInfo3_ * SOAP_FMAC2 repository_instantiate___mtrep7__TryGetRepositoryInfo3_(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__TryGetRepositoryInfo3_ * soap_new___mtrep7__TryGetRepositoryInfo3_(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__TryGetRepositoryInfo3_(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__TryGetRepositoryInfo3_ * soap_new_req___mtrep7__TryGetRepositoryInfo3_(
	struct soap *soap)
{	struct __mtrep7__TryGetRepositoryInfo3_ *_p = soap_new___mtrep7__TryGetRepositoryInfo3_(soap);
	if (_p)
	{	soap_default___mtrep7__TryGetRepositoryInfo3_(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__TryGetRepositoryInfo3_ * soap_new_set___mtrep7__TryGetRepositoryInfo3_(
	struct soap *soap,
	_mtrep7__TryGetRepositoryInfo3 *mtrep7__TryGetRepositoryInfo3)
{	struct __mtrep7__TryGetRepositoryInfo3_ *_p = soap_new___mtrep7__TryGetRepositoryInfo3_(soap);
	if (_p)
	{	soap_default___mtrep7__TryGetRepositoryInfo3_(soap, _p);
		_p->mtrep7__TryGetRepositoryInfo3 = mtrep7__TryGetRepositoryInfo3;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__TryGetRepositoryInfo3_(struct soap*, const struct __mtrep7__TryGetRepositoryInfo3_ *, const char*, const char*);

inline int soap_write___mtrep7__TryGetRepositoryInfo3_(struct soap *soap, struct __mtrep7__TryGetRepositoryInfo3_ const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__TryGetRepositoryInfo3_(soap, p), 0) || soap_put___mtrep7__TryGetRepositoryInfo3_(soap, p, "-mtrep7:TryGetRepositoryInfo3", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__TryGetRepositoryInfo3_ * SOAP_FMAC4 soap_get___mtrep7__TryGetRepositoryInfo3_(struct soap*, struct __mtrep7__TryGetRepositoryInfo3_ *, const char*, const char*);

inline int soap_read___mtrep7__TryGetRepositoryInfo3_(struct soap *soap, struct __mtrep7__TryGetRepositoryInfo3_ *p)
{	if (p)
	{	soap_default___mtrep7__TryGetRepositoryInfo3_(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__TryGetRepositoryInfo3_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__VerifyRepository2__DEFINED
#define SOAP_TYPE___mtrep7__VerifyRepository2__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__VerifyRepository2_(struct soap*, struct __mtrep7__VerifyRepository2_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__VerifyRepository2_(struct soap*, const struct __mtrep7__VerifyRepository2_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__VerifyRepository2_(struct soap*, const char*, int, const struct __mtrep7__VerifyRepository2_ *, const char*);
SOAP_FMAC3 struct __mtrep7__VerifyRepository2_ * SOAP_FMAC4 soap_in___mtrep7__VerifyRepository2_(struct soap*, const char*, struct __mtrep7__VerifyRepository2_ *, const char*);
SOAP_FMAC1 struct __mtrep7__VerifyRepository2_ * SOAP_FMAC2 repository_instantiate___mtrep7__VerifyRepository2_(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__VerifyRepository2_ * soap_new___mtrep7__VerifyRepository2_(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__VerifyRepository2_(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__VerifyRepository2_ * soap_new_req___mtrep7__VerifyRepository2_(
	struct soap *soap)
{	struct __mtrep7__VerifyRepository2_ *_p = soap_new___mtrep7__VerifyRepository2_(soap);
	if (_p)
	{	soap_default___mtrep7__VerifyRepository2_(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__VerifyRepository2_ * soap_new_set___mtrep7__VerifyRepository2_(
	struct soap *soap,
	_mtrep7__VerifyRepository2 *mtrep7__VerifyRepository2)
{	struct __mtrep7__VerifyRepository2_ *_p = soap_new___mtrep7__VerifyRepository2_(soap);
	if (_p)
	{	soap_default___mtrep7__VerifyRepository2_(soap, _p);
		_p->mtrep7__VerifyRepository2 = mtrep7__VerifyRepository2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__VerifyRepository2_(struct soap*, const struct __mtrep7__VerifyRepository2_ *, const char*, const char*);

inline int soap_write___mtrep7__VerifyRepository2_(struct soap *soap, struct __mtrep7__VerifyRepository2_ const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__VerifyRepository2_(soap, p), 0) || soap_put___mtrep7__VerifyRepository2_(soap, p, "-mtrep7:VerifyRepository2", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__VerifyRepository2_ * SOAP_FMAC4 soap_get___mtrep7__VerifyRepository2_(struct soap*, struct __mtrep7__VerifyRepository2_ *, const char*, const char*);

inline int soap_read___mtrep7__VerifyRepository2_(struct soap *soap, struct __mtrep7__VerifyRepository2_ *p)
{	if (p)
	{	soap_default___mtrep7__VerifyRepository2_(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__VerifyRepository2_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__PickRepository4__DEFINED
#define SOAP_TYPE___mtrep7__PickRepository4__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__PickRepository4_(struct soap*, struct __mtrep7__PickRepository4_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__PickRepository4_(struct soap*, const struct __mtrep7__PickRepository4_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__PickRepository4_(struct soap*, const char*, int, const struct __mtrep7__PickRepository4_ *, const char*);
SOAP_FMAC3 struct __mtrep7__PickRepository4_ * SOAP_FMAC4 soap_in___mtrep7__PickRepository4_(struct soap*, const char*, struct __mtrep7__PickRepository4_ *, const char*);
SOAP_FMAC1 struct __mtrep7__PickRepository4_ * SOAP_FMAC2 repository_instantiate___mtrep7__PickRepository4_(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__PickRepository4_ * soap_new___mtrep7__PickRepository4_(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__PickRepository4_(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__PickRepository4_ * soap_new_req___mtrep7__PickRepository4_(
	struct soap *soap)
{	struct __mtrep7__PickRepository4_ *_p = soap_new___mtrep7__PickRepository4_(soap);
	if (_p)
	{	soap_default___mtrep7__PickRepository4_(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__PickRepository4_ * soap_new_set___mtrep7__PickRepository4_(
	struct soap *soap,
	_mtrep6__PickRepository4 *mtrep6__PickRepository4)
{	struct __mtrep7__PickRepository4_ *_p = soap_new___mtrep7__PickRepository4_(soap);
	if (_p)
	{	soap_default___mtrep7__PickRepository4_(soap, _p);
		_p->mtrep6__PickRepository4 = mtrep6__PickRepository4;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__PickRepository4_(struct soap*, const struct __mtrep7__PickRepository4_ *, const char*, const char*);

inline int soap_write___mtrep7__PickRepository4_(struct soap *soap, struct __mtrep7__PickRepository4_ const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__PickRepository4_(soap, p), 0) || soap_put___mtrep7__PickRepository4_(soap, p, "-mtrep7:PickRepository4", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__PickRepository4_ * SOAP_FMAC4 soap_get___mtrep7__PickRepository4_(struct soap*, struct __mtrep7__PickRepository4_ *, const char*, const char*);

inline int soap_read___mtrep7__PickRepository4_(struct soap *soap, struct __mtrep7__PickRepository4_ *p)
{	if (p)
	{	soap_default___mtrep7__PickRepository4_(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__PickRepository4_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__GetRepositories4__DEFINED
#define SOAP_TYPE___mtrep7__GetRepositories4__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__GetRepositories4_(struct soap*, struct __mtrep7__GetRepositories4_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__GetRepositories4_(struct soap*, const struct __mtrep7__GetRepositories4_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__GetRepositories4_(struct soap*, const char*, int, const struct __mtrep7__GetRepositories4_ *, const char*);
SOAP_FMAC3 struct __mtrep7__GetRepositories4_ * SOAP_FMAC4 soap_in___mtrep7__GetRepositories4_(struct soap*, const char*, struct __mtrep7__GetRepositories4_ *, const char*);
SOAP_FMAC1 struct __mtrep7__GetRepositories4_ * SOAP_FMAC2 repository_instantiate___mtrep7__GetRepositories4_(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__GetRepositories4_ * soap_new___mtrep7__GetRepositories4_(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__GetRepositories4_(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__GetRepositories4_ * soap_new_req___mtrep7__GetRepositories4_(
	struct soap *soap)
{	struct __mtrep7__GetRepositories4_ *_p = soap_new___mtrep7__GetRepositories4_(soap);
	if (_p)
	{	soap_default___mtrep7__GetRepositories4_(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__GetRepositories4_ * soap_new_set___mtrep7__GetRepositories4_(
	struct soap *soap,
	_mtrep6__GetRepositories4 *mtrep6__GetRepositories4)
{	struct __mtrep7__GetRepositories4_ *_p = soap_new___mtrep7__GetRepositories4_(soap);
	if (_p)
	{	soap_default___mtrep7__GetRepositories4_(soap, _p);
		_p->mtrep6__GetRepositories4 = mtrep6__GetRepositories4;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__GetRepositories4_(struct soap*, const struct __mtrep7__GetRepositories4_ *, const char*, const char*);

inline int soap_write___mtrep7__GetRepositories4_(struct soap *soap, struct __mtrep7__GetRepositories4_ const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__GetRepositories4_(soap, p), 0) || soap_put___mtrep7__GetRepositories4_(soap, p, "-mtrep7:GetRepositories4", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__GetRepositories4_ * SOAP_FMAC4 soap_get___mtrep7__GetRepositories4_(struct soap*, struct __mtrep7__GetRepositories4_ *, const char*, const char*);

inline int soap_read___mtrep7__GetRepositories4_(struct soap *soap, struct __mtrep7__GetRepositories4_ *p)
{	if (p)
	{	soap_default___mtrep7__GetRepositories4_(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__GetRepositories4_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__PickRepository3__DEFINED
#define SOAP_TYPE___mtrep7__PickRepository3__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__PickRepository3_(struct soap*, struct __mtrep7__PickRepository3_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__PickRepository3_(struct soap*, const struct __mtrep7__PickRepository3_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__PickRepository3_(struct soap*, const char*, int, const struct __mtrep7__PickRepository3_ *, const char*);
SOAP_FMAC3 struct __mtrep7__PickRepository3_ * SOAP_FMAC4 soap_in___mtrep7__PickRepository3_(struct soap*, const char*, struct __mtrep7__PickRepository3_ *, const char*);
SOAP_FMAC1 struct __mtrep7__PickRepository3_ * SOAP_FMAC2 repository_instantiate___mtrep7__PickRepository3_(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__PickRepository3_ * soap_new___mtrep7__PickRepository3_(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__PickRepository3_(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__PickRepository3_ * soap_new_req___mtrep7__PickRepository3_(
	struct soap *soap)
{	struct __mtrep7__PickRepository3_ *_p = soap_new___mtrep7__PickRepository3_(soap);
	if (_p)
	{	soap_default___mtrep7__PickRepository3_(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__PickRepository3_ * soap_new_set___mtrep7__PickRepository3_(
	struct soap *soap,
	_mtrep5__PickRepository3 *mtrep5__PickRepository3)
{	struct __mtrep7__PickRepository3_ *_p = soap_new___mtrep7__PickRepository3_(soap);
	if (_p)
	{	soap_default___mtrep7__PickRepository3_(soap, _p);
		_p->mtrep5__PickRepository3 = mtrep5__PickRepository3;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__PickRepository3_(struct soap*, const struct __mtrep7__PickRepository3_ *, const char*, const char*);

inline int soap_write___mtrep7__PickRepository3_(struct soap *soap, struct __mtrep7__PickRepository3_ const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__PickRepository3_(soap, p), 0) || soap_put___mtrep7__PickRepository3_(soap, p, "-mtrep7:PickRepository3", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__PickRepository3_ * SOAP_FMAC4 soap_get___mtrep7__PickRepository3_(struct soap*, struct __mtrep7__PickRepository3_ *, const char*, const char*);

inline int soap_read___mtrep7__PickRepository3_(struct soap *soap, struct __mtrep7__PickRepository3_ *p)
{	if (p)
	{	soap_default___mtrep7__PickRepository3_(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__PickRepository3_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__GetRepositories3__DEFINED
#define SOAP_TYPE___mtrep7__GetRepositories3__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__GetRepositories3_(struct soap*, struct __mtrep7__GetRepositories3_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__GetRepositories3_(struct soap*, const struct __mtrep7__GetRepositories3_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__GetRepositories3_(struct soap*, const char*, int, const struct __mtrep7__GetRepositories3_ *, const char*);
SOAP_FMAC3 struct __mtrep7__GetRepositories3_ * SOAP_FMAC4 soap_in___mtrep7__GetRepositories3_(struct soap*, const char*, struct __mtrep7__GetRepositories3_ *, const char*);
SOAP_FMAC1 struct __mtrep7__GetRepositories3_ * SOAP_FMAC2 repository_instantiate___mtrep7__GetRepositories3_(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__GetRepositories3_ * soap_new___mtrep7__GetRepositories3_(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__GetRepositories3_(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__GetRepositories3_ * soap_new_req___mtrep7__GetRepositories3_(
	struct soap *soap)
{	struct __mtrep7__GetRepositories3_ *_p = soap_new___mtrep7__GetRepositories3_(soap);
	if (_p)
	{	soap_default___mtrep7__GetRepositories3_(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__GetRepositories3_ * soap_new_set___mtrep7__GetRepositories3_(
	struct soap *soap,
	_mtrep5__GetRepositories3 *mtrep5__GetRepositories3)
{	struct __mtrep7__GetRepositories3_ *_p = soap_new___mtrep7__GetRepositories3_(soap);
	if (_p)
	{	soap_default___mtrep7__GetRepositories3_(soap, _p);
		_p->mtrep5__GetRepositories3 = mtrep5__GetRepositories3;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__GetRepositories3_(struct soap*, const struct __mtrep7__GetRepositories3_ *, const char*, const char*);

inline int soap_write___mtrep7__GetRepositories3_(struct soap *soap, struct __mtrep7__GetRepositories3_ const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__GetRepositories3_(soap, p), 0) || soap_put___mtrep7__GetRepositories3_(soap, p, "-mtrep7:GetRepositories3", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__GetRepositories3_ * SOAP_FMAC4 soap_get___mtrep7__GetRepositories3_(struct soap*, struct __mtrep7__GetRepositories3_ *, const char*, const char*);

inline int soap_read___mtrep7__GetRepositories3_(struct soap *soap, struct __mtrep7__GetRepositories3_ *p)
{	if (p)
	{	soap_default___mtrep7__GetRepositories3_(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__GetRepositories3_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__VerifyRepository__DEFINED
#define SOAP_TYPE___mtrep7__VerifyRepository__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__VerifyRepository_(struct soap*, struct __mtrep7__VerifyRepository_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__VerifyRepository_(struct soap*, const struct __mtrep7__VerifyRepository_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__VerifyRepository_(struct soap*, const char*, int, const struct __mtrep7__VerifyRepository_ *, const char*);
SOAP_FMAC3 struct __mtrep7__VerifyRepository_ * SOAP_FMAC4 soap_in___mtrep7__VerifyRepository_(struct soap*, const char*, struct __mtrep7__VerifyRepository_ *, const char*);
SOAP_FMAC1 struct __mtrep7__VerifyRepository_ * SOAP_FMAC2 repository_instantiate___mtrep7__VerifyRepository_(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__VerifyRepository_ * soap_new___mtrep7__VerifyRepository_(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__VerifyRepository_(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__VerifyRepository_ * soap_new_req___mtrep7__VerifyRepository_(
	struct soap *soap)
{	struct __mtrep7__VerifyRepository_ *_p = soap_new___mtrep7__VerifyRepository_(soap);
	if (_p)
	{	soap_default___mtrep7__VerifyRepository_(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__VerifyRepository_ * soap_new_set___mtrep7__VerifyRepository_(
	struct soap *soap,
	_mtrep4__VerifyRepository *mtrep4__VerifyRepository)
{	struct __mtrep7__VerifyRepository_ *_p = soap_new___mtrep7__VerifyRepository_(soap);
	if (_p)
	{	soap_default___mtrep7__VerifyRepository_(soap, _p);
		_p->mtrep4__VerifyRepository = mtrep4__VerifyRepository;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__VerifyRepository_(struct soap*, const struct __mtrep7__VerifyRepository_ *, const char*, const char*);

inline int soap_write___mtrep7__VerifyRepository_(struct soap *soap, struct __mtrep7__VerifyRepository_ const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__VerifyRepository_(soap, p), 0) || soap_put___mtrep7__VerifyRepository_(soap, p, "-mtrep7:VerifyRepository", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__VerifyRepository_ * SOAP_FMAC4 soap_get___mtrep7__VerifyRepository_(struct soap*, struct __mtrep7__VerifyRepository_ *, const char*, const char*);

inline int soap_read___mtrep7__VerifyRepository_(struct soap *soap, struct __mtrep7__VerifyRepository_ *p)
{	if (p)
	{	soap_default___mtrep7__VerifyRepository_(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__VerifyRepository_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__TryGetRepositoryInfo2__DEFINED
#define SOAP_TYPE___mtrep7__TryGetRepositoryInfo2__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__TryGetRepositoryInfo2_(struct soap*, struct __mtrep7__TryGetRepositoryInfo2_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__TryGetRepositoryInfo2_(struct soap*, const struct __mtrep7__TryGetRepositoryInfo2_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__TryGetRepositoryInfo2_(struct soap*, const char*, int, const struct __mtrep7__TryGetRepositoryInfo2_ *, const char*);
SOAP_FMAC3 struct __mtrep7__TryGetRepositoryInfo2_ * SOAP_FMAC4 soap_in___mtrep7__TryGetRepositoryInfo2_(struct soap*, const char*, struct __mtrep7__TryGetRepositoryInfo2_ *, const char*);
SOAP_FMAC1 struct __mtrep7__TryGetRepositoryInfo2_ * SOAP_FMAC2 repository_instantiate___mtrep7__TryGetRepositoryInfo2_(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__TryGetRepositoryInfo2_ * soap_new___mtrep7__TryGetRepositoryInfo2_(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__TryGetRepositoryInfo2_(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__TryGetRepositoryInfo2_ * soap_new_req___mtrep7__TryGetRepositoryInfo2_(
	struct soap *soap)
{	struct __mtrep7__TryGetRepositoryInfo2_ *_p = soap_new___mtrep7__TryGetRepositoryInfo2_(soap);
	if (_p)
	{	soap_default___mtrep7__TryGetRepositoryInfo2_(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__TryGetRepositoryInfo2_ * soap_new_set___mtrep7__TryGetRepositoryInfo2_(
	struct soap *soap,
	_mtrep3__TryGetRepositoryInfo2 *mtrep3__TryGetRepositoryInfo2)
{	struct __mtrep7__TryGetRepositoryInfo2_ *_p = soap_new___mtrep7__TryGetRepositoryInfo2_(soap);
	if (_p)
	{	soap_default___mtrep7__TryGetRepositoryInfo2_(soap, _p);
		_p->mtrep3__TryGetRepositoryInfo2 = mtrep3__TryGetRepositoryInfo2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__TryGetRepositoryInfo2_(struct soap*, const struct __mtrep7__TryGetRepositoryInfo2_ *, const char*, const char*);

inline int soap_write___mtrep7__TryGetRepositoryInfo2_(struct soap *soap, struct __mtrep7__TryGetRepositoryInfo2_ const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__TryGetRepositoryInfo2_(soap, p), 0) || soap_put___mtrep7__TryGetRepositoryInfo2_(soap, p, "-mtrep7:TryGetRepositoryInfo2", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__TryGetRepositoryInfo2_ * SOAP_FMAC4 soap_get___mtrep7__TryGetRepositoryInfo2_(struct soap*, struct __mtrep7__TryGetRepositoryInfo2_ *, const char*, const char*);

inline int soap_read___mtrep7__TryGetRepositoryInfo2_(struct soap *soap, struct __mtrep7__TryGetRepositoryInfo2_ *p)
{	if (p)
	{	soap_default___mtrep7__TryGetRepositoryInfo2_(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__TryGetRepositoryInfo2_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__PickRepository2__DEFINED
#define SOAP_TYPE___mtrep7__PickRepository2__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__PickRepository2_(struct soap*, struct __mtrep7__PickRepository2_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__PickRepository2_(struct soap*, const struct __mtrep7__PickRepository2_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__PickRepository2_(struct soap*, const char*, int, const struct __mtrep7__PickRepository2_ *, const char*);
SOAP_FMAC3 struct __mtrep7__PickRepository2_ * SOAP_FMAC4 soap_in___mtrep7__PickRepository2_(struct soap*, const char*, struct __mtrep7__PickRepository2_ *, const char*);
SOAP_FMAC1 struct __mtrep7__PickRepository2_ * SOAP_FMAC2 repository_instantiate___mtrep7__PickRepository2_(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__PickRepository2_ * soap_new___mtrep7__PickRepository2_(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__PickRepository2_(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__PickRepository2_ * soap_new_req___mtrep7__PickRepository2_(
	struct soap *soap)
{	struct __mtrep7__PickRepository2_ *_p = soap_new___mtrep7__PickRepository2_(soap);
	if (_p)
	{	soap_default___mtrep7__PickRepository2_(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__PickRepository2_ * soap_new_set___mtrep7__PickRepository2_(
	struct soap *soap,
	_mtrep3__PickRepository2 *mtrep3__PickRepository2)
{	struct __mtrep7__PickRepository2_ *_p = soap_new___mtrep7__PickRepository2_(soap);
	if (_p)
	{	soap_default___mtrep7__PickRepository2_(soap, _p);
		_p->mtrep3__PickRepository2 = mtrep3__PickRepository2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__PickRepository2_(struct soap*, const struct __mtrep7__PickRepository2_ *, const char*, const char*);

inline int soap_write___mtrep7__PickRepository2_(struct soap *soap, struct __mtrep7__PickRepository2_ const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__PickRepository2_(soap, p), 0) || soap_put___mtrep7__PickRepository2_(soap, p, "-mtrep7:PickRepository2", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__PickRepository2_ * SOAP_FMAC4 soap_get___mtrep7__PickRepository2_(struct soap*, struct __mtrep7__PickRepository2_ *, const char*, const char*);

inline int soap_read___mtrep7__PickRepository2_(struct soap *soap, struct __mtrep7__PickRepository2_ *p)
{	if (p)
	{	soap_default___mtrep7__PickRepository2_(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__PickRepository2_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__GetRepositories2__DEFINED
#define SOAP_TYPE___mtrep7__GetRepositories2__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__GetRepositories2_(struct soap*, struct __mtrep7__GetRepositories2_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__GetRepositories2_(struct soap*, const struct __mtrep7__GetRepositories2_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__GetRepositories2_(struct soap*, const char*, int, const struct __mtrep7__GetRepositories2_ *, const char*);
SOAP_FMAC3 struct __mtrep7__GetRepositories2_ * SOAP_FMAC4 soap_in___mtrep7__GetRepositories2_(struct soap*, const char*, struct __mtrep7__GetRepositories2_ *, const char*);
SOAP_FMAC1 struct __mtrep7__GetRepositories2_ * SOAP_FMAC2 repository_instantiate___mtrep7__GetRepositories2_(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__GetRepositories2_ * soap_new___mtrep7__GetRepositories2_(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__GetRepositories2_(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__GetRepositories2_ * soap_new_req___mtrep7__GetRepositories2_(
	struct soap *soap)
{	struct __mtrep7__GetRepositories2_ *_p = soap_new___mtrep7__GetRepositories2_(soap);
	if (_p)
	{	soap_default___mtrep7__GetRepositories2_(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__GetRepositories2_ * soap_new_set___mtrep7__GetRepositories2_(
	struct soap *soap,
	_mtrep3__GetRepositories2 *mtrep3__GetRepositories2)
{	struct __mtrep7__GetRepositories2_ *_p = soap_new___mtrep7__GetRepositories2_(soap);
	if (_p)
	{	soap_default___mtrep7__GetRepositories2_(soap, _p);
		_p->mtrep3__GetRepositories2 = mtrep3__GetRepositories2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__GetRepositories2_(struct soap*, const struct __mtrep7__GetRepositories2_ *, const char*, const char*);

inline int soap_write___mtrep7__GetRepositories2_(struct soap *soap, struct __mtrep7__GetRepositories2_ const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__GetRepositories2_(soap, p), 0) || soap_put___mtrep7__GetRepositories2_(soap, p, "-mtrep7:GetRepositories2", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__GetRepositories2_ * SOAP_FMAC4 soap_get___mtrep7__GetRepositories2_(struct soap*, struct __mtrep7__GetRepositories2_ *, const char*, const char*);

inline int soap_read___mtrep7__GetRepositories2_(struct soap *soap, struct __mtrep7__GetRepositories2_ *p)
{	if (p)
	{	soap_default___mtrep7__GetRepositories2_(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__GetRepositories2_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__GetListCreationTime__DEFINED
#define SOAP_TYPE___mtrep7__GetListCreationTime__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__GetListCreationTime_(struct soap*, struct __mtrep7__GetListCreationTime_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__GetListCreationTime_(struct soap*, const struct __mtrep7__GetListCreationTime_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__GetListCreationTime_(struct soap*, const char*, int, const struct __mtrep7__GetListCreationTime_ *, const char*);
SOAP_FMAC3 struct __mtrep7__GetListCreationTime_ * SOAP_FMAC4 soap_in___mtrep7__GetListCreationTime_(struct soap*, const char*, struct __mtrep7__GetListCreationTime_ *, const char*);
SOAP_FMAC1 struct __mtrep7__GetListCreationTime_ * SOAP_FMAC2 repository_instantiate___mtrep7__GetListCreationTime_(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__GetListCreationTime_ * soap_new___mtrep7__GetListCreationTime_(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__GetListCreationTime_(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__GetListCreationTime_ * soap_new_req___mtrep7__GetListCreationTime_(
	struct soap *soap)
{	struct __mtrep7__GetListCreationTime_ *_p = soap_new___mtrep7__GetListCreationTime_(soap);
	if (_p)
	{	soap_default___mtrep7__GetListCreationTime_(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__GetListCreationTime_ * soap_new_set___mtrep7__GetListCreationTime_(
	struct soap *soap,
	_mtrep2__GetListCreationTime *mtrep2__GetListCreationTime)
{	struct __mtrep7__GetListCreationTime_ *_p = soap_new___mtrep7__GetListCreationTime_(soap);
	if (_p)
	{	soap_default___mtrep7__GetListCreationTime_(soap, _p);
		_p->mtrep2__GetListCreationTime = mtrep2__GetListCreationTime;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__GetListCreationTime_(struct soap*, const struct __mtrep7__GetListCreationTime_ *, const char*, const char*);

inline int soap_write___mtrep7__GetListCreationTime_(struct soap *soap, struct __mtrep7__GetListCreationTime_ const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__GetListCreationTime_(soap, p), 0) || soap_put___mtrep7__GetListCreationTime_(soap, p, "-mtrep7:GetListCreationTime", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__GetListCreationTime_ * SOAP_FMAC4 soap_get___mtrep7__GetListCreationTime_(struct soap*, struct __mtrep7__GetListCreationTime_ *, const char*, const char*);

inline int soap_read___mtrep7__GetListCreationTime_(struct soap *soap, struct __mtrep7__GetListCreationTime_ *p)
{	if (p)
	{	soap_default___mtrep7__GetListCreationTime_(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__GetListCreationTime_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__GetRepositories__DEFINED
#define SOAP_TYPE___mtrep7__GetRepositories__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__GetRepositories_(struct soap*, struct __mtrep7__GetRepositories_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__GetRepositories_(struct soap*, const struct __mtrep7__GetRepositories_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__GetRepositories_(struct soap*, const char*, int, const struct __mtrep7__GetRepositories_ *, const char*);
SOAP_FMAC3 struct __mtrep7__GetRepositories_ * SOAP_FMAC4 soap_in___mtrep7__GetRepositories_(struct soap*, const char*, struct __mtrep7__GetRepositories_ *, const char*);
SOAP_FMAC1 struct __mtrep7__GetRepositories_ * SOAP_FMAC2 repository_instantiate___mtrep7__GetRepositories_(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__GetRepositories_ * soap_new___mtrep7__GetRepositories_(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__GetRepositories_(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__GetRepositories_ * soap_new_req___mtrep7__GetRepositories_(
	struct soap *soap)
{	struct __mtrep7__GetRepositories_ *_p = soap_new___mtrep7__GetRepositories_(soap);
	if (_p)
	{	soap_default___mtrep7__GetRepositories_(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__GetRepositories_ * soap_new_set___mtrep7__GetRepositories_(
	struct soap *soap,
	_mtrep__GetRepositories *mtrep__GetRepositories)
{	struct __mtrep7__GetRepositories_ *_p = soap_new___mtrep7__GetRepositories_(soap);
	if (_p)
	{	soap_default___mtrep7__GetRepositories_(soap, _p);
		_p->mtrep__GetRepositories = mtrep__GetRepositories;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__GetRepositories_(struct soap*, const struct __mtrep7__GetRepositories_ *, const char*, const char*);

inline int soap_write___mtrep7__GetRepositories_(struct soap *soap, struct __mtrep7__GetRepositories_ const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__GetRepositories_(soap, p), 0) || soap_put___mtrep7__GetRepositories_(soap, p, "-mtrep7:GetRepositories", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__GetRepositories_ * SOAP_FMAC4 soap_get___mtrep7__GetRepositories_(struct soap*, struct __mtrep7__GetRepositories_ *, const char*, const char*);

inline int soap_read___mtrep7__GetRepositories_(struct soap *soap, struct __mtrep7__GetRepositories_ *p)
{	if (p)
	{	soap_default___mtrep7__GetRepositories_(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__GetRepositories_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__GetAllRepositories__DEFINED
#define SOAP_TYPE___mtrep7__GetAllRepositories__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__GetAllRepositories_(struct soap*, struct __mtrep7__GetAllRepositories_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__GetAllRepositories_(struct soap*, const struct __mtrep7__GetAllRepositories_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__GetAllRepositories_(struct soap*, const char*, int, const struct __mtrep7__GetAllRepositories_ *, const char*);
SOAP_FMAC3 struct __mtrep7__GetAllRepositories_ * SOAP_FMAC4 soap_in___mtrep7__GetAllRepositories_(struct soap*, const char*, struct __mtrep7__GetAllRepositories_ *, const char*);
SOAP_FMAC1 struct __mtrep7__GetAllRepositories_ * SOAP_FMAC2 repository_instantiate___mtrep7__GetAllRepositories_(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__GetAllRepositories_ * soap_new___mtrep7__GetAllRepositories_(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__GetAllRepositories_(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__GetAllRepositories_ * soap_new_req___mtrep7__GetAllRepositories_(
	struct soap *soap)
{	struct __mtrep7__GetAllRepositories_ *_p = soap_new___mtrep7__GetAllRepositories_(soap);
	if (_p)
	{	soap_default___mtrep7__GetAllRepositories_(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__GetAllRepositories_ * soap_new_set___mtrep7__GetAllRepositories_(
	struct soap *soap,
	_mtrep__GetAllRepositories *mtrep__GetAllRepositories)
{	struct __mtrep7__GetAllRepositories_ *_p = soap_new___mtrep7__GetAllRepositories_(soap);
	if (_p)
	{	soap_default___mtrep7__GetAllRepositories_(soap, _p);
		_p->mtrep__GetAllRepositories = mtrep__GetAllRepositories;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__GetAllRepositories_(struct soap*, const struct __mtrep7__GetAllRepositories_ *, const char*, const char*);

inline int soap_write___mtrep7__GetAllRepositories_(struct soap *soap, struct __mtrep7__GetAllRepositories_ const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__GetAllRepositories_(soap, p), 0) || soap_put___mtrep7__GetAllRepositories_(soap, p, "-mtrep7:GetAllRepositories", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__GetAllRepositories_ * SOAP_FMAC4 soap_get___mtrep7__GetAllRepositories_(struct soap*, struct __mtrep7__GetAllRepositories_ *, const char*, const char*);

inline int soap_read___mtrep7__GetAllRepositories_(struct soap *soap, struct __mtrep7__GetAllRepositories_ *p)
{	if (p)
	{	soap_default___mtrep7__GetAllRepositories_(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__GetAllRepositories_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__PickRepository__DEFINED
#define SOAP_TYPE___mtrep7__PickRepository__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__PickRepository_(struct soap*, struct __mtrep7__PickRepository_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__PickRepository_(struct soap*, const struct __mtrep7__PickRepository_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__PickRepository_(struct soap*, const char*, int, const struct __mtrep7__PickRepository_ *, const char*);
SOAP_FMAC3 struct __mtrep7__PickRepository_ * SOAP_FMAC4 soap_in___mtrep7__PickRepository_(struct soap*, const char*, struct __mtrep7__PickRepository_ *, const char*);
SOAP_FMAC1 struct __mtrep7__PickRepository_ * SOAP_FMAC2 repository_instantiate___mtrep7__PickRepository_(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__PickRepository_ * soap_new___mtrep7__PickRepository_(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__PickRepository_(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__PickRepository_ * soap_new_req___mtrep7__PickRepository_(
	struct soap *soap)
{	struct __mtrep7__PickRepository_ *_p = soap_new___mtrep7__PickRepository_(soap);
	if (_p)
	{	soap_default___mtrep7__PickRepository_(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__PickRepository_ * soap_new_set___mtrep7__PickRepository_(
	struct soap *soap,
	_mtrep__PickRepository *mtrep__PickRepository)
{	struct __mtrep7__PickRepository_ *_p = soap_new___mtrep7__PickRepository_(soap);
	if (_p)
	{	soap_default___mtrep7__PickRepository_(soap, _p);
		_p->mtrep__PickRepository = mtrep__PickRepository;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__PickRepository_(struct soap*, const struct __mtrep7__PickRepository_ *, const char*, const char*);

inline int soap_write___mtrep7__PickRepository_(struct soap *soap, struct __mtrep7__PickRepository_ const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__PickRepository_(soap, p), 0) || soap_put___mtrep7__PickRepository_(soap, p, "-mtrep7:PickRepository", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__PickRepository_ * SOAP_FMAC4 soap_get___mtrep7__PickRepository_(struct soap*, struct __mtrep7__PickRepository_ *, const char*, const char*);

inline int soap_read___mtrep7__PickRepository_(struct soap *soap, struct __mtrep7__PickRepository_ *p)
{	if (p)
	{	soap_default___mtrep7__PickRepository_(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__PickRepository_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__TryGetRepositoryInfo__DEFINED
#define SOAP_TYPE___mtrep7__TryGetRepositoryInfo__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__TryGetRepositoryInfo_(struct soap*, struct __mtrep7__TryGetRepositoryInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__TryGetRepositoryInfo_(struct soap*, const struct __mtrep7__TryGetRepositoryInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__TryGetRepositoryInfo_(struct soap*, const char*, int, const struct __mtrep7__TryGetRepositoryInfo_ *, const char*);
SOAP_FMAC3 struct __mtrep7__TryGetRepositoryInfo_ * SOAP_FMAC4 soap_in___mtrep7__TryGetRepositoryInfo_(struct soap*, const char*, struct __mtrep7__TryGetRepositoryInfo_ *, const char*);
SOAP_FMAC1 struct __mtrep7__TryGetRepositoryInfo_ * SOAP_FMAC2 repository_instantiate___mtrep7__TryGetRepositoryInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__TryGetRepositoryInfo_ * soap_new___mtrep7__TryGetRepositoryInfo_(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__TryGetRepositoryInfo_(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__TryGetRepositoryInfo_ * soap_new_req___mtrep7__TryGetRepositoryInfo_(
	struct soap *soap)
{	struct __mtrep7__TryGetRepositoryInfo_ *_p = soap_new___mtrep7__TryGetRepositoryInfo_(soap);
	if (_p)
	{	soap_default___mtrep7__TryGetRepositoryInfo_(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__TryGetRepositoryInfo_ * soap_new_set___mtrep7__TryGetRepositoryInfo_(
	struct soap *soap,
	_mtrep__TryGetRepositoryInfo *mtrep__TryGetRepositoryInfo)
{	struct __mtrep7__TryGetRepositoryInfo_ *_p = soap_new___mtrep7__TryGetRepositoryInfo_(soap);
	if (_p)
	{	soap_default___mtrep7__TryGetRepositoryInfo_(soap, _p);
		_p->mtrep__TryGetRepositoryInfo = mtrep__TryGetRepositoryInfo;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__TryGetRepositoryInfo_(struct soap*, const struct __mtrep7__TryGetRepositoryInfo_ *, const char*, const char*);

inline int soap_write___mtrep7__TryGetRepositoryInfo_(struct soap *soap, struct __mtrep7__TryGetRepositoryInfo_ const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__TryGetRepositoryInfo_(soap, p), 0) || soap_put___mtrep7__TryGetRepositoryInfo_(soap, p, "-mtrep7:TryGetRepositoryInfo", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__TryGetRepositoryInfo_ * SOAP_FMAC4 soap_get___mtrep7__TryGetRepositoryInfo_(struct soap*, struct __mtrep7__TryGetRepositoryInfo_ *, const char*, const char*);

inline int soap_read___mtrep7__TryGetRepositoryInfo_(struct soap *soap, struct __mtrep7__TryGetRepositoryInfo_ *p)
{	if (p)
	{	soap_default___mtrep7__TryGetRepositoryInfo_(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__TryGetRepositoryInfo_(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__TryGetRepositoryInfo3_DEFINED
#define SOAP_TYPE___mtrep7__TryGetRepositoryInfo3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__TryGetRepositoryInfo3(struct soap*, struct __mtrep7__TryGetRepositoryInfo3 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__TryGetRepositoryInfo3(struct soap*, const struct __mtrep7__TryGetRepositoryInfo3 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__TryGetRepositoryInfo3(struct soap*, const char*, int, const struct __mtrep7__TryGetRepositoryInfo3 *, const char*);
SOAP_FMAC3 struct __mtrep7__TryGetRepositoryInfo3 * SOAP_FMAC4 soap_in___mtrep7__TryGetRepositoryInfo3(struct soap*, const char*, struct __mtrep7__TryGetRepositoryInfo3 *, const char*);
SOAP_FMAC1 struct __mtrep7__TryGetRepositoryInfo3 * SOAP_FMAC2 repository_instantiate___mtrep7__TryGetRepositoryInfo3(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__TryGetRepositoryInfo3 * soap_new___mtrep7__TryGetRepositoryInfo3(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__TryGetRepositoryInfo3(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__TryGetRepositoryInfo3 * soap_new_req___mtrep7__TryGetRepositoryInfo3(
	struct soap *soap)
{	struct __mtrep7__TryGetRepositoryInfo3 *_p = soap_new___mtrep7__TryGetRepositoryInfo3(soap);
	if (_p)
	{	soap_default___mtrep7__TryGetRepositoryInfo3(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__TryGetRepositoryInfo3 * soap_new_set___mtrep7__TryGetRepositoryInfo3(
	struct soap *soap,
	_mtrep7__TryGetRepositoryInfo3 *mtrep7__TryGetRepositoryInfo3)
{	struct __mtrep7__TryGetRepositoryInfo3 *_p = soap_new___mtrep7__TryGetRepositoryInfo3(soap);
	if (_p)
	{	soap_default___mtrep7__TryGetRepositoryInfo3(soap, _p);
		_p->mtrep7__TryGetRepositoryInfo3 = mtrep7__TryGetRepositoryInfo3;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__TryGetRepositoryInfo3(struct soap*, const struct __mtrep7__TryGetRepositoryInfo3 *, const char*, const char*);

inline int soap_write___mtrep7__TryGetRepositoryInfo3(struct soap *soap, struct __mtrep7__TryGetRepositoryInfo3 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__TryGetRepositoryInfo3(soap, p), 0) || soap_put___mtrep7__TryGetRepositoryInfo3(soap, p, "-mtrep7:TryGetRepositoryInfo3", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__TryGetRepositoryInfo3 * SOAP_FMAC4 soap_get___mtrep7__TryGetRepositoryInfo3(struct soap*, struct __mtrep7__TryGetRepositoryInfo3 *, const char*, const char*);

inline int soap_read___mtrep7__TryGetRepositoryInfo3(struct soap *soap, struct __mtrep7__TryGetRepositoryInfo3 *p)
{	if (p)
	{	soap_default___mtrep7__TryGetRepositoryInfo3(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__TryGetRepositoryInfo3(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__VerifyRepository2_DEFINED
#define SOAP_TYPE___mtrep7__VerifyRepository2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__VerifyRepository2(struct soap*, struct __mtrep7__VerifyRepository2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__VerifyRepository2(struct soap*, const struct __mtrep7__VerifyRepository2 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__VerifyRepository2(struct soap*, const char*, int, const struct __mtrep7__VerifyRepository2 *, const char*);
SOAP_FMAC3 struct __mtrep7__VerifyRepository2 * SOAP_FMAC4 soap_in___mtrep7__VerifyRepository2(struct soap*, const char*, struct __mtrep7__VerifyRepository2 *, const char*);
SOAP_FMAC1 struct __mtrep7__VerifyRepository2 * SOAP_FMAC2 repository_instantiate___mtrep7__VerifyRepository2(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__VerifyRepository2 * soap_new___mtrep7__VerifyRepository2(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__VerifyRepository2(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__VerifyRepository2 * soap_new_req___mtrep7__VerifyRepository2(
	struct soap *soap)
{	struct __mtrep7__VerifyRepository2 *_p = soap_new___mtrep7__VerifyRepository2(soap);
	if (_p)
	{	soap_default___mtrep7__VerifyRepository2(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__VerifyRepository2 * soap_new_set___mtrep7__VerifyRepository2(
	struct soap *soap,
	_mtrep7__VerifyRepository2 *mtrep7__VerifyRepository2)
{	struct __mtrep7__VerifyRepository2 *_p = soap_new___mtrep7__VerifyRepository2(soap);
	if (_p)
	{	soap_default___mtrep7__VerifyRepository2(soap, _p);
		_p->mtrep7__VerifyRepository2 = mtrep7__VerifyRepository2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__VerifyRepository2(struct soap*, const struct __mtrep7__VerifyRepository2 *, const char*, const char*);

inline int soap_write___mtrep7__VerifyRepository2(struct soap *soap, struct __mtrep7__VerifyRepository2 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__VerifyRepository2(soap, p), 0) || soap_put___mtrep7__VerifyRepository2(soap, p, "-mtrep7:VerifyRepository2", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__VerifyRepository2 * SOAP_FMAC4 soap_get___mtrep7__VerifyRepository2(struct soap*, struct __mtrep7__VerifyRepository2 *, const char*, const char*);

inline int soap_read___mtrep7__VerifyRepository2(struct soap *soap, struct __mtrep7__VerifyRepository2 *p)
{	if (p)
	{	soap_default___mtrep7__VerifyRepository2(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__VerifyRepository2(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__PickRepository4_DEFINED
#define SOAP_TYPE___mtrep7__PickRepository4_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__PickRepository4(struct soap*, struct __mtrep7__PickRepository4 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__PickRepository4(struct soap*, const struct __mtrep7__PickRepository4 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__PickRepository4(struct soap*, const char*, int, const struct __mtrep7__PickRepository4 *, const char*);
SOAP_FMAC3 struct __mtrep7__PickRepository4 * SOAP_FMAC4 soap_in___mtrep7__PickRepository4(struct soap*, const char*, struct __mtrep7__PickRepository4 *, const char*);
SOAP_FMAC1 struct __mtrep7__PickRepository4 * SOAP_FMAC2 repository_instantiate___mtrep7__PickRepository4(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__PickRepository4 * soap_new___mtrep7__PickRepository4(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__PickRepository4(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__PickRepository4 * soap_new_req___mtrep7__PickRepository4(
	struct soap *soap)
{	struct __mtrep7__PickRepository4 *_p = soap_new___mtrep7__PickRepository4(soap);
	if (_p)
	{	soap_default___mtrep7__PickRepository4(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__PickRepository4 * soap_new_set___mtrep7__PickRepository4(
	struct soap *soap,
	_mtrep6__PickRepository4 *mtrep6__PickRepository4)
{	struct __mtrep7__PickRepository4 *_p = soap_new___mtrep7__PickRepository4(soap);
	if (_p)
	{	soap_default___mtrep7__PickRepository4(soap, _p);
		_p->mtrep6__PickRepository4 = mtrep6__PickRepository4;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__PickRepository4(struct soap*, const struct __mtrep7__PickRepository4 *, const char*, const char*);

inline int soap_write___mtrep7__PickRepository4(struct soap *soap, struct __mtrep7__PickRepository4 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__PickRepository4(soap, p), 0) || soap_put___mtrep7__PickRepository4(soap, p, "-mtrep7:PickRepository4", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__PickRepository4 * SOAP_FMAC4 soap_get___mtrep7__PickRepository4(struct soap*, struct __mtrep7__PickRepository4 *, const char*, const char*);

inline int soap_read___mtrep7__PickRepository4(struct soap *soap, struct __mtrep7__PickRepository4 *p)
{	if (p)
	{	soap_default___mtrep7__PickRepository4(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__PickRepository4(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__GetRepositories4_DEFINED
#define SOAP_TYPE___mtrep7__GetRepositories4_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__GetRepositories4(struct soap*, struct __mtrep7__GetRepositories4 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__GetRepositories4(struct soap*, const struct __mtrep7__GetRepositories4 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__GetRepositories4(struct soap*, const char*, int, const struct __mtrep7__GetRepositories4 *, const char*);
SOAP_FMAC3 struct __mtrep7__GetRepositories4 * SOAP_FMAC4 soap_in___mtrep7__GetRepositories4(struct soap*, const char*, struct __mtrep7__GetRepositories4 *, const char*);
SOAP_FMAC1 struct __mtrep7__GetRepositories4 * SOAP_FMAC2 repository_instantiate___mtrep7__GetRepositories4(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__GetRepositories4 * soap_new___mtrep7__GetRepositories4(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__GetRepositories4(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__GetRepositories4 * soap_new_req___mtrep7__GetRepositories4(
	struct soap *soap)
{	struct __mtrep7__GetRepositories4 *_p = soap_new___mtrep7__GetRepositories4(soap);
	if (_p)
	{	soap_default___mtrep7__GetRepositories4(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__GetRepositories4 * soap_new_set___mtrep7__GetRepositories4(
	struct soap *soap,
	_mtrep6__GetRepositories4 *mtrep6__GetRepositories4)
{	struct __mtrep7__GetRepositories4 *_p = soap_new___mtrep7__GetRepositories4(soap);
	if (_p)
	{	soap_default___mtrep7__GetRepositories4(soap, _p);
		_p->mtrep6__GetRepositories4 = mtrep6__GetRepositories4;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__GetRepositories4(struct soap*, const struct __mtrep7__GetRepositories4 *, const char*, const char*);

inline int soap_write___mtrep7__GetRepositories4(struct soap *soap, struct __mtrep7__GetRepositories4 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__GetRepositories4(soap, p), 0) || soap_put___mtrep7__GetRepositories4(soap, p, "-mtrep7:GetRepositories4", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__GetRepositories4 * SOAP_FMAC4 soap_get___mtrep7__GetRepositories4(struct soap*, struct __mtrep7__GetRepositories4 *, const char*, const char*);

inline int soap_read___mtrep7__GetRepositories4(struct soap *soap, struct __mtrep7__GetRepositories4 *p)
{	if (p)
	{	soap_default___mtrep7__GetRepositories4(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__GetRepositories4(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__PickRepository3_DEFINED
#define SOAP_TYPE___mtrep7__PickRepository3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__PickRepository3(struct soap*, struct __mtrep7__PickRepository3 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__PickRepository3(struct soap*, const struct __mtrep7__PickRepository3 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__PickRepository3(struct soap*, const char*, int, const struct __mtrep7__PickRepository3 *, const char*);
SOAP_FMAC3 struct __mtrep7__PickRepository3 * SOAP_FMAC4 soap_in___mtrep7__PickRepository3(struct soap*, const char*, struct __mtrep7__PickRepository3 *, const char*);
SOAP_FMAC1 struct __mtrep7__PickRepository3 * SOAP_FMAC2 repository_instantiate___mtrep7__PickRepository3(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__PickRepository3 * soap_new___mtrep7__PickRepository3(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__PickRepository3(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__PickRepository3 * soap_new_req___mtrep7__PickRepository3(
	struct soap *soap)
{	struct __mtrep7__PickRepository3 *_p = soap_new___mtrep7__PickRepository3(soap);
	if (_p)
	{	soap_default___mtrep7__PickRepository3(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__PickRepository3 * soap_new_set___mtrep7__PickRepository3(
	struct soap *soap,
	_mtrep5__PickRepository3 *mtrep5__PickRepository3)
{	struct __mtrep7__PickRepository3 *_p = soap_new___mtrep7__PickRepository3(soap);
	if (_p)
	{	soap_default___mtrep7__PickRepository3(soap, _p);
		_p->mtrep5__PickRepository3 = mtrep5__PickRepository3;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__PickRepository3(struct soap*, const struct __mtrep7__PickRepository3 *, const char*, const char*);

inline int soap_write___mtrep7__PickRepository3(struct soap *soap, struct __mtrep7__PickRepository3 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__PickRepository3(soap, p), 0) || soap_put___mtrep7__PickRepository3(soap, p, "-mtrep7:PickRepository3", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__PickRepository3 * SOAP_FMAC4 soap_get___mtrep7__PickRepository3(struct soap*, struct __mtrep7__PickRepository3 *, const char*, const char*);

inline int soap_read___mtrep7__PickRepository3(struct soap *soap, struct __mtrep7__PickRepository3 *p)
{	if (p)
	{	soap_default___mtrep7__PickRepository3(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__PickRepository3(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__GetRepositories3_DEFINED
#define SOAP_TYPE___mtrep7__GetRepositories3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__GetRepositories3(struct soap*, struct __mtrep7__GetRepositories3 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__GetRepositories3(struct soap*, const struct __mtrep7__GetRepositories3 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__GetRepositories3(struct soap*, const char*, int, const struct __mtrep7__GetRepositories3 *, const char*);
SOAP_FMAC3 struct __mtrep7__GetRepositories3 * SOAP_FMAC4 soap_in___mtrep7__GetRepositories3(struct soap*, const char*, struct __mtrep7__GetRepositories3 *, const char*);
SOAP_FMAC1 struct __mtrep7__GetRepositories3 * SOAP_FMAC2 repository_instantiate___mtrep7__GetRepositories3(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__GetRepositories3 * soap_new___mtrep7__GetRepositories3(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__GetRepositories3(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__GetRepositories3 * soap_new_req___mtrep7__GetRepositories3(
	struct soap *soap)
{	struct __mtrep7__GetRepositories3 *_p = soap_new___mtrep7__GetRepositories3(soap);
	if (_p)
	{	soap_default___mtrep7__GetRepositories3(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__GetRepositories3 * soap_new_set___mtrep7__GetRepositories3(
	struct soap *soap,
	_mtrep5__GetRepositories3 *mtrep5__GetRepositories3)
{	struct __mtrep7__GetRepositories3 *_p = soap_new___mtrep7__GetRepositories3(soap);
	if (_p)
	{	soap_default___mtrep7__GetRepositories3(soap, _p);
		_p->mtrep5__GetRepositories3 = mtrep5__GetRepositories3;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__GetRepositories3(struct soap*, const struct __mtrep7__GetRepositories3 *, const char*, const char*);

inline int soap_write___mtrep7__GetRepositories3(struct soap *soap, struct __mtrep7__GetRepositories3 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__GetRepositories3(soap, p), 0) || soap_put___mtrep7__GetRepositories3(soap, p, "-mtrep7:GetRepositories3", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__GetRepositories3 * SOAP_FMAC4 soap_get___mtrep7__GetRepositories3(struct soap*, struct __mtrep7__GetRepositories3 *, const char*, const char*);

inline int soap_read___mtrep7__GetRepositories3(struct soap *soap, struct __mtrep7__GetRepositories3 *p)
{	if (p)
	{	soap_default___mtrep7__GetRepositories3(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__GetRepositories3(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__VerifyRepository_DEFINED
#define SOAP_TYPE___mtrep7__VerifyRepository_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__VerifyRepository(struct soap*, struct __mtrep7__VerifyRepository *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__VerifyRepository(struct soap*, const struct __mtrep7__VerifyRepository *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__VerifyRepository(struct soap*, const char*, int, const struct __mtrep7__VerifyRepository *, const char*);
SOAP_FMAC3 struct __mtrep7__VerifyRepository * SOAP_FMAC4 soap_in___mtrep7__VerifyRepository(struct soap*, const char*, struct __mtrep7__VerifyRepository *, const char*);
SOAP_FMAC1 struct __mtrep7__VerifyRepository * SOAP_FMAC2 repository_instantiate___mtrep7__VerifyRepository(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__VerifyRepository * soap_new___mtrep7__VerifyRepository(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__VerifyRepository(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__VerifyRepository * soap_new_req___mtrep7__VerifyRepository(
	struct soap *soap)
{	struct __mtrep7__VerifyRepository *_p = soap_new___mtrep7__VerifyRepository(soap);
	if (_p)
	{	soap_default___mtrep7__VerifyRepository(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__VerifyRepository * soap_new_set___mtrep7__VerifyRepository(
	struct soap *soap,
	_mtrep4__VerifyRepository *mtrep4__VerifyRepository)
{	struct __mtrep7__VerifyRepository *_p = soap_new___mtrep7__VerifyRepository(soap);
	if (_p)
	{	soap_default___mtrep7__VerifyRepository(soap, _p);
		_p->mtrep4__VerifyRepository = mtrep4__VerifyRepository;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__VerifyRepository(struct soap*, const struct __mtrep7__VerifyRepository *, const char*, const char*);

inline int soap_write___mtrep7__VerifyRepository(struct soap *soap, struct __mtrep7__VerifyRepository const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__VerifyRepository(soap, p), 0) || soap_put___mtrep7__VerifyRepository(soap, p, "-mtrep7:VerifyRepository", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__VerifyRepository * SOAP_FMAC4 soap_get___mtrep7__VerifyRepository(struct soap*, struct __mtrep7__VerifyRepository *, const char*, const char*);

inline int soap_read___mtrep7__VerifyRepository(struct soap *soap, struct __mtrep7__VerifyRepository *p)
{	if (p)
	{	soap_default___mtrep7__VerifyRepository(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__VerifyRepository(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__TryGetRepositoryInfo2_DEFINED
#define SOAP_TYPE___mtrep7__TryGetRepositoryInfo2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__TryGetRepositoryInfo2(struct soap*, struct __mtrep7__TryGetRepositoryInfo2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__TryGetRepositoryInfo2(struct soap*, const struct __mtrep7__TryGetRepositoryInfo2 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__TryGetRepositoryInfo2(struct soap*, const char*, int, const struct __mtrep7__TryGetRepositoryInfo2 *, const char*);
SOAP_FMAC3 struct __mtrep7__TryGetRepositoryInfo2 * SOAP_FMAC4 soap_in___mtrep7__TryGetRepositoryInfo2(struct soap*, const char*, struct __mtrep7__TryGetRepositoryInfo2 *, const char*);
SOAP_FMAC1 struct __mtrep7__TryGetRepositoryInfo2 * SOAP_FMAC2 repository_instantiate___mtrep7__TryGetRepositoryInfo2(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__TryGetRepositoryInfo2 * soap_new___mtrep7__TryGetRepositoryInfo2(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__TryGetRepositoryInfo2(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__TryGetRepositoryInfo2 * soap_new_req___mtrep7__TryGetRepositoryInfo2(
	struct soap *soap)
{	struct __mtrep7__TryGetRepositoryInfo2 *_p = soap_new___mtrep7__TryGetRepositoryInfo2(soap);
	if (_p)
	{	soap_default___mtrep7__TryGetRepositoryInfo2(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__TryGetRepositoryInfo2 * soap_new_set___mtrep7__TryGetRepositoryInfo2(
	struct soap *soap,
	_mtrep3__TryGetRepositoryInfo2 *mtrep3__TryGetRepositoryInfo2)
{	struct __mtrep7__TryGetRepositoryInfo2 *_p = soap_new___mtrep7__TryGetRepositoryInfo2(soap);
	if (_p)
	{	soap_default___mtrep7__TryGetRepositoryInfo2(soap, _p);
		_p->mtrep3__TryGetRepositoryInfo2 = mtrep3__TryGetRepositoryInfo2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__TryGetRepositoryInfo2(struct soap*, const struct __mtrep7__TryGetRepositoryInfo2 *, const char*, const char*);

inline int soap_write___mtrep7__TryGetRepositoryInfo2(struct soap *soap, struct __mtrep7__TryGetRepositoryInfo2 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__TryGetRepositoryInfo2(soap, p), 0) || soap_put___mtrep7__TryGetRepositoryInfo2(soap, p, "-mtrep7:TryGetRepositoryInfo2", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__TryGetRepositoryInfo2 * SOAP_FMAC4 soap_get___mtrep7__TryGetRepositoryInfo2(struct soap*, struct __mtrep7__TryGetRepositoryInfo2 *, const char*, const char*);

inline int soap_read___mtrep7__TryGetRepositoryInfo2(struct soap *soap, struct __mtrep7__TryGetRepositoryInfo2 *p)
{	if (p)
	{	soap_default___mtrep7__TryGetRepositoryInfo2(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__TryGetRepositoryInfo2(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__PickRepository2_DEFINED
#define SOAP_TYPE___mtrep7__PickRepository2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__PickRepository2(struct soap*, struct __mtrep7__PickRepository2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__PickRepository2(struct soap*, const struct __mtrep7__PickRepository2 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__PickRepository2(struct soap*, const char*, int, const struct __mtrep7__PickRepository2 *, const char*);
SOAP_FMAC3 struct __mtrep7__PickRepository2 * SOAP_FMAC4 soap_in___mtrep7__PickRepository2(struct soap*, const char*, struct __mtrep7__PickRepository2 *, const char*);
SOAP_FMAC1 struct __mtrep7__PickRepository2 * SOAP_FMAC2 repository_instantiate___mtrep7__PickRepository2(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__PickRepository2 * soap_new___mtrep7__PickRepository2(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__PickRepository2(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__PickRepository2 * soap_new_req___mtrep7__PickRepository2(
	struct soap *soap)
{	struct __mtrep7__PickRepository2 *_p = soap_new___mtrep7__PickRepository2(soap);
	if (_p)
	{	soap_default___mtrep7__PickRepository2(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__PickRepository2 * soap_new_set___mtrep7__PickRepository2(
	struct soap *soap,
	_mtrep3__PickRepository2 *mtrep3__PickRepository2)
{	struct __mtrep7__PickRepository2 *_p = soap_new___mtrep7__PickRepository2(soap);
	if (_p)
	{	soap_default___mtrep7__PickRepository2(soap, _p);
		_p->mtrep3__PickRepository2 = mtrep3__PickRepository2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__PickRepository2(struct soap*, const struct __mtrep7__PickRepository2 *, const char*, const char*);

inline int soap_write___mtrep7__PickRepository2(struct soap *soap, struct __mtrep7__PickRepository2 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__PickRepository2(soap, p), 0) || soap_put___mtrep7__PickRepository2(soap, p, "-mtrep7:PickRepository2", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__PickRepository2 * SOAP_FMAC4 soap_get___mtrep7__PickRepository2(struct soap*, struct __mtrep7__PickRepository2 *, const char*, const char*);

inline int soap_read___mtrep7__PickRepository2(struct soap *soap, struct __mtrep7__PickRepository2 *p)
{	if (p)
	{	soap_default___mtrep7__PickRepository2(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__PickRepository2(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__GetRepositories2_DEFINED
#define SOAP_TYPE___mtrep7__GetRepositories2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__GetRepositories2(struct soap*, struct __mtrep7__GetRepositories2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__GetRepositories2(struct soap*, const struct __mtrep7__GetRepositories2 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__GetRepositories2(struct soap*, const char*, int, const struct __mtrep7__GetRepositories2 *, const char*);
SOAP_FMAC3 struct __mtrep7__GetRepositories2 * SOAP_FMAC4 soap_in___mtrep7__GetRepositories2(struct soap*, const char*, struct __mtrep7__GetRepositories2 *, const char*);
SOAP_FMAC1 struct __mtrep7__GetRepositories2 * SOAP_FMAC2 repository_instantiate___mtrep7__GetRepositories2(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__GetRepositories2 * soap_new___mtrep7__GetRepositories2(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__GetRepositories2(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__GetRepositories2 * soap_new_req___mtrep7__GetRepositories2(
	struct soap *soap)
{	struct __mtrep7__GetRepositories2 *_p = soap_new___mtrep7__GetRepositories2(soap);
	if (_p)
	{	soap_default___mtrep7__GetRepositories2(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__GetRepositories2 * soap_new_set___mtrep7__GetRepositories2(
	struct soap *soap,
	_mtrep3__GetRepositories2 *mtrep3__GetRepositories2)
{	struct __mtrep7__GetRepositories2 *_p = soap_new___mtrep7__GetRepositories2(soap);
	if (_p)
	{	soap_default___mtrep7__GetRepositories2(soap, _p);
		_p->mtrep3__GetRepositories2 = mtrep3__GetRepositories2;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__GetRepositories2(struct soap*, const struct __mtrep7__GetRepositories2 *, const char*, const char*);

inline int soap_write___mtrep7__GetRepositories2(struct soap *soap, struct __mtrep7__GetRepositories2 const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__GetRepositories2(soap, p), 0) || soap_put___mtrep7__GetRepositories2(soap, p, "-mtrep7:GetRepositories2", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__GetRepositories2 * SOAP_FMAC4 soap_get___mtrep7__GetRepositories2(struct soap*, struct __mtrep7__GetRepositories2 *, const char*, const char*);

inline int soap_read___mtrep7__GetRepositories2(struct soap *soap, struct __mtrep7__GetRepositories2 *p)
{	if (p)
	{	soap_default___mtrep7__GetRepositories2(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__GetRepositories2(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__GetListCreationTime_DEFINED
#define SOAP_TYPE___mtrep7__GetListCreationTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__GetListCreationTime(struct soap*, struct __mtrep7__GetListCreationTime *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__GetListCreationTime(struct soap*, const struct __mtrep7__GetListCreationTime *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__GetListCreationTime(struct soap*, const char*, int, const struct __mtrep7__GetListCreationTime *, const char*);
SOAP_FMAC3 struct __mtrep7__GetListCreationTime * SOAP_FMAC4 soap_in___mtrep7__GetListCreationTime(struct soap*, const char*, struct __mtrep7__GetListCreationTime *, const char*);
SOAP_FMAC1 struct __mtrep7__GetListCreationTime * SOAP_FMAC2 repository_instantiate___mtrep7__GetListCreationTime(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__GetListCreationTime * soap_new___mtrep7__GetListCreationTime(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__GetListCreationTime(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__GetListCreationTime * soap_new_req___mtrep7__GetListCreationTime(
	struct soap *soap)
{	struct __mtrep7__GetListCreationTime *_p = soap_new___mtrep7__GetListCreationTime(soap);
	if (_p)
	{	soap_default___mtrep7__GetListCreationTime(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__GetListCreationTime * soap_new_set___mtrep7__GetListCreationTime(
	struct soap *soap,
	_mtrep2__GetListCreationTime *mtrep2__GetListCreationTime)
{	struct __mtrep7__GetListCreationTime *_p = soap_new___mtrep7__GetListCreationTime(soap);
	if (_p)
	{	soap_default___mtrep7__GetListCreationTime(soap, _p);
		_p->mtrep2__GetListCreationTime = mtrep2__GetListCreationTime;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__GetListCreationTime(struct soap*, const struct __mtrep7__GetListCreationTime *, const char*, const char*);

inline int soap_write___mtrep7__GetListCreationTime(struct soap *soap, struct __mtrep7__GetListCreationTime const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__GetListCreationTime(soap, p), 0) || soap_put___mtrep7__GetListCreationTime(soap, p, "-mtrep7:GetListCreationTime", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__GetListCreationTime * SOAP_FMAC4 soap_get___mtrep7__GetListCreationTime(struct soap*, struct __mtrep7__GetListCreationTime *, const char*, const char*);

inline int soap_read___mtrep7__GetListCreationTime(struct soap *soap, struct __mtrep7__GetListCreationTime *p)
{	if (p)
	{	soap_default___mtrep7__GetListCreationTime(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__GetListCreationTime(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__GetRepositories_DEFINED
#define SOAP_TYPE___mtrep7__GetRepositories_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__GetRepositories(struct soap*, struct __mtrep7__GetRepositories *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__GetRepositories(struct soap*, const struct __mtrep7__GetRepositories *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__GetRepositories(struct soap*, const char*, int, const struct __mtrep7__GetRepositories *, const char*);
SOAP_FMAC3 struct __mtrep7__GetRepositories * SOAP_FMAC4 soap_in___mtrep7__GetRepositories(struct soap*, const char*, struct __mtrep7__GetRepositories *, const char*);
SOAP_FMAC1 struct __mtrep7__GetRepositories * SOAP_FMAC2 repository_instantiate___mtrep7__GetRepositories(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__GetRepositories * soap_new___mtrep7__GetRepositories(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__GetRepositories(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__GetRepositories * soap_new_req___mtrep7__GetRepositories(
	struct soap *soap)
{	struct __mtrep7__GetRepositories *_p = soap_new___mtrep7__GetRepositories(soap);
	if (_p)
	{	soap_default___mtrep7__GetRepositories(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__GetRepositories * soap_new_set___mtrep7__GetRepositories(
	struct soap *soap,
	_mtrep__GetRepositories *mtrep__GetRepositories)
{	struct __mtrep7__GetRepositories *_p = soap_new___mtrep7__GetRepositories(soap);
	if (_p)
	{	soap_default___mtrep7__GetRepositories(soap, _p);
		_p->mtrep__GetRepositories = mtrep__GetRepositories;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__GetRepositories(struct soap*, const struct __mtrep7__GetRepositories *, const char*, const char*);

inline int soap_write___mtrep7__GetRepositories(struct soap *soap, struct __mtrep7__GetRepositories const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__GetRepositories(soap, p), 0) || soap_put___mtrep7__GetRepositories(soap, p, "-mtrep7:GetRepositories", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__GetRepositories * SOAP_FMAC4 soap_get___mtrep7__GetRepositories(struct soap*, struct __mtrep7__GetRepositories *, const char*, const char*);

inline int soap_read___mtrep7__GetRepositories(struct soap *soap, struct __mtrep7__GetRepositories *p)
{	if (p)
	{	soap_default___mtrep7__GetRepositories(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__GetRepositories(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__GetAllRepositories_DEFINED
#define SOAP_TYPE___mtrep7__GetAllRepositories_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__GetAllRepositories(struct soap*, struct __mtrep7__GetAllRepositories *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__GetAllRepositories(struct soap*, const struct __mtrep7__GetAllRepositories *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__GetAllRepositories(struct soap*, const char*, int, const struct __mtrep7__GetAllRepositories *, const char*);
SOAP_FMAC3 struct __mtrep7__GetAllRepositories * SOAP_FMAC4 soap_in___mtrep7__GetAllRepositories(struct soap*, const char*, struct __mtrep7__GetAllRepositories *, const char*);
SOAP_FMAC1 struct __mtrep7__GetAllRepositories * SOAP_FMAC2 repository_instantiate___mtrep7__GetAllRepositories(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__GetAllRepositories * soap_new___mtrep7__GetAllRepositories(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__GetAllRepositories(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__GetAllRepositories * soap_new_req___mtrep7__GetAllRepositories(
	struct soap *soap)
{	struct __mtrep7__GetAllRepositories *_p = soap_new___mtrep7__GetAllRepositories(soap);
	if (_p)
	{	soap_default___mtrep7__GetAllRepositories(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__GetAllRepositories * soap_new_set___mtrep7__GetAllRepositories(
	struct soap *soap,
	_mtrep__GetAllRepositories *mtrep__GetAllRepositories)
{	struct __mtrep7__GetAllRepositories *_p = soap_new___mtrep7__GetAllRepositories(soap);
	if (_p)
	{	soap_default___mtrep7__GetAllRepositories(soap, _p);
		_p->mtrep__GetAllRepositories = mtrep__GetAllRepositories;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__GetAllRepositories(struct soap*, const struct __mtrep7__GetAllRepositories *, const char*, const char*);

inline int soap_write___mtrep7__GetAllRepositories(struct soap *soap, struct __mtrep7__GetAllRepositories const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__GetAllRepositories(soap, p), 0) || soap_put___mtrep7__GetAllRepositories(soap, p, "-mtrep7:GetAllRepositories", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__GetAllRepositories * SOAP_FMAC4 soap_get___mtrep7__GetAllRepositories(struct soap*, struct __mtrep7__GetAllRepositories *, const char*, const char*);

inline int soap_read___mtrep7__GetAllRepositories(struct soap *soap, struct __mtrep7__GetAllRepositories *p)
{	if (p)
	{	soap_default___mtrep7__GetAllRepositories(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__GetAllRepositories(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__PickRepository_DEFINED
#define SOAP_TYPE___mtrep7__PickRepository_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__PickRepository(struct soap*, struct __mtrep7__PickRepository *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__PickRepository(struct soap*, const struct __mtrep7__PickRepository *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__PickRepository(struct soap*, const char*, int, const struct __mtrep7__PickRepository *, const char*);
SOAP_FMAC3 struct __mtrep7__PickRepository * SOAP_FMAC4 soap_in___mtrep7__PickRepository(struct soap*, const char*, struct __mtrep7__PickRepository *, const char*);
SOAP_FMAC1 struct __mtrep7__PickRepository * SOAP_FMAC2 repository_instantiate___mtrep7__PickRepository(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__PickRepository * soap_new___mtrep7__PickRepository(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__PickRepository(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__PickRepository * soap_new_req___mtrep7__PickRepository(
	struct soap *soap)
{	struct __mtrep7__PickRepository *_p = soap_new___mtrep7__PickRepository(soap);
	if (_p)
	{	soap_default___mtrep7__PickRepository(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__PickRepository * soap_new_set___mtrep7__PickRepository(
	struct soap *soap,
	_mtrep__PickRepository *mtrep__PickRepository)
{	struct __mtrep7__PickRepository *_p = soap_new___mtrep7__PickRepository(soap);
	if (_p)
	{	soap_default___mtrep7__PickRepository(soap, _p);
		_p->mtrep__PickRepository = mtrep__PickRepository;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__PickRepository(struct soap*, const struct __mtrep7__PickRepository *, const char*, const char*);

inline int soap_write___mtrep7__PickRepository(struct soap *soap, struct __mtrep7__PickRepository const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__PickRepository(soap, p), 0) || soap_put___mtrep7__PickRepository(soap, p, "-mtrep7:PickRepository", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__PickRepository * SOAP_FMAC4 soap_get___mtrep7__PickRepository(struct soap*, struct __mtrep7__PickRepository *, const char*, const char*);

inline int soap_read___mtrep7__PickRepository(struct soap *soap, struct __mtrep7__PickRepository *p)
{	if (p)
	{	soap_default___mtrep7__PickRepository(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__PickRepository(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE___mtrep7__TryGetRepositoryInfo_DEFINED
#define SOAP_TYPE___mtrep7__TryGetRepositoryInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___mtrep7__TryGetRepositoryInfo(struct soap*, struct __mtrep7__TryGetRepositoryInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___mtrep7__TryGetRepositoryInfo(struct soap*, const struct __mtrep7__TryGetRepositoryInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___mtrep7__TryGetRepositoryInfo(struct soap*, const char*, int, const struct __mtrep7__TryGetRepositoryInfo *, const char*);
SOAP_FMAC3 struct __mtrep7__TryGetRepositoryInfo * SOAP_FMAC4 soap_in___mtrep7__TryGetRepositoryInfo(struct soap*, const char*, struct __mtrep7__TryGetRepositoryInfo *, const char*);
SOAP_FMAC1 struct __mtrep7__TryGetRepositoryInfo * SOAP_FMAC2 repository_instantiate___mtrep7__TryGetRepositoryInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __mtrep7__TryGetRepositoryInfo * soap_new___mtrep7__TryGetRepositoryInfo(struct soap *soap, int n = -1)
{	return repository_instantiate___mtrep7__TryGetRepositoryInfo(soap, n, NULL, NULL, NULL);
}

inline struct __mtrep7__TryGetRepositoryInfo * soap_new_req___mtrep7__TryGetRepositoryInfo(
	struct soap *soap)
{	struct __mtrep7__TryGetRepositoryInfo *_p = soap_new___mtrep7__TryGetRepositoryInfo(soap);
	if (_p)
	{	soap_default___mtrep7__TryGetRepositoryInfo(soap, _p);
	}
	return _p;
}

inline struct __mtrep7__TryGetRepositoryInfo * soap_new_set___mtrep7__TryGetRepositoryInfo(
	struct soap *soap,
	_mtrep__TryGetRepositoryInfo *mtrep__TryGetRepositoryInfo)
{	struct __mtrep7__TryGetRepositoryInfo *_p = soap_new___mtrep7__TryGetRepositoryInfo(soap);
	if (_p)
	{	soap_default___mtrep7__TryGetRepositoryInfo(soap, _p);
		_p->mtrep__TryGetRepositoryInfo = mtrep__TryGetRepositoryInfo;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___mtrep7__TryGetRepositoryInfo(struct soap*, const struct __mtrep7__TryGetRepositoryInfo *, const char*, const char*);

inline int soap_write___mtrep7__TryGetRepositoryInfo(struct soap *soap, struct __mtrep7__TryGetRepositoryInfo const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize___mtrep7__TryGetRepositoryInfo(soap, p), 0) || soap_put___mtrep7__TryGetRepositoryInfo(soap, p, "-mtrep7:TryGetRepositoryInfo", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct __mtrep7__TryGetRepositoryInfo * SOAP_FMAC4 soap_get___mtrep7__TryGetRepositoryInfo(struct soap*, struct __mtrep7__TryGetRepositoryInfo *, const char*, const char*);

inline int soap_read___mtrep7__TryGetRepositoryInfo(struct soap *soap, struct __mtrep7__TryGetRepositoryInfo *p)
{	if (p)
	{	soap_default___mtrep7__TryGetRepositoryInfo(soap, p);
		if (soap_begin_recv(soap) || soap_get___mtrep7__TryGetRepositoryInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_PointerTo_mtrep7__TryGetRepositoryInfo3_DEFINED
#define SOAP_TYPE_PointerTo_mtrep7__TryGetRepositoryInfo3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_mtrep7__TryGetRepositoryInfo3(struct soap*, _mtrep7__TryGetRepositoryInfo3 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_mtrep7__TryGetRepositoryInfo3(struct soap*, const char *, int, _mtrep7__TryGetRepositoryInfo3 *const*, const char *);
SOAP_FMAC3 _mtrep7__TryGetRepositoryInfo3 ** SOAP_FMAC4 soap_in_PointerTo_mtrep7__TryGetRepositoryInfo3(struct soap*, const char*, _mtrep7__TryGetRepositoryInfo3 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_mtrep7__TryGetRepositoryInfo3(struct soap*, _mtrep7__TryGetRepositoryInfo3 *const*, const char*, const char*);
SOAP_FMAC3 _mtrep7__TryGetRepositoryInfo3 ** SOAP_FMAC4 soap_get_PointerTo_mtrep7__TryGetRepositoryInfo3(struct soap*, _mtrep7__TryGetRepositoryInfo3 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_mtrep7__VerifyRepository2_DEFINED
#define SOAP_TYPE_PointerTo_mtrep7__VerifyRepository2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_mtrep7__VerifyRepository2(struct soap*, _mtrep7__VerifyRepository2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_mtrep7__VerifyRepository2(struct soap*, const char *, int, _mtrep7__VerifyRepository2 *const*, const char *);
SOAP_FMAC3 _mtrep7__VerifyRepository2 ** SOAP_FMAC4 soap_in_PointerTo_mtrep7__VerifyRepository2(struct soap*, const char*, _mtrep7__VerifyRepository2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_mtrep7__VerifyRepository2(struct soap*, _mtrep7__VerifyRepository2 *const*, const char*, const char*);
SOAP_FMAC3 _mtrep7__VerifyRepository2 ** SOAP_FMAC4 soap_get_PointerTo_mtrep7__VerifyRepository2(struct soap*, _mtrep7__VerifyRepository2 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_mtrep6__PickRepository4_DEFINED
#define SOAP_TYPE_PointerTo_mtrep6__PickRepository4_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_mtrep6__PickRepository4(struct soap*, _mtrep6__PickRepository4 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_mtrep6__PickRepository4(struct soap*, const char *, int, _mtrep6__PickRepository4 *const*, const char *);
SOAP_FMAC3 _mtrep6__PickRepository4 ** SOAP_FMAC4 soap_in_PointerTo_mtrep6__PickRepository4(struct soap*, const char*, _mtrep6__PickRepository4 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_mtrep6__PickRepository4(struct soap*, _mtrep6__PickRepository4 *const*, const char*, const char*);
SOAP_FMAC3 _mtrep6__PickRepository4 ** SOAP_FMAC4 soap_get_PointerTo_mtrep6__PickRepository4(struct soap*, _mtrep6__PickRepository4 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_mtrep6__GetRepositories4_DEFINED
#define SOAP_TYPE_PointerTo_mtrep6__GetRepositories4_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_mtrep6__GetRepositories4(struct soap*, _mtrep6__GetRepositories4 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_mtrep6__GetRepositories4(struct soap*, const char *, int, _mtrep6__GetRepositories4 *const*, const char *);
SOAP_FMAC3 _mtrep6__GetRepositories4 ** SOAP_FMAC4 soap_in_PointerTo_mtrep6__GetRepositories4(struct soap*, const char*, _mtrep6__GetRepositories4 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_mtrep6__GetRepositories4(struct soap*, _mtrep6__GetRepositories4 *const*, const char*, const char*);
SOAP_FMAC3 _mtrep6__GetRepositories4 ** SOAP_FMAC4 soap_get_PointerTo_mtrep6__GetRepositories4(struct soap*, _mtrep6__GetRepositories4 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_mtrep5__PickRepository3_DEFINED
#define SOAP_TYPE_PointerTo_mtrep5__PickRepository3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_mtrep5__PickRepository3(struct soap*, _mtrep5__PickRepository3 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_mtrep5__PickRepository3(struct soap*, const char *, int, _mtrep5__PickRepository3 *const*, const char *);
SOAP_FMAC3 _mtrep5__PickRepository3 ** SOAP_FMAC4 soap_in_PointerTo_mtrep5__PickRepository3(struct soap*, const char*, _mtrep5__PickRepository3 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_mtrep5__PickRepository3(struct soap*, _mtrep5__PickRepository3 *const*, const char*, const char*);
SOAP_FMAC3 _mtrep5__PickRepository3 ** SOAP_FMAC4 soap_get_PointerTo_mtrep5__PickRepository3(struct soap*, _mtrep5__PickRepository3 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_mtrep5__GetRepositories3_DEFINED
#define SOAP_TYPE_PointerTo_mtrep5__GetRepositories3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_mtrep5__GetRepositories3(struct soap*, _mtrep5__GetRepositories3 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_mtrep5__GetRepositories3(struct soap*, const char *, int, _mtrep5__GetRepositories3 *const*, const char *);
SOAP_FMAC3 _mtrep5__GetRepositories3 ** SOAP_FMAC4 soap_in_PointerTo_mtrep5__GetRepositories3(struct soap*, const char*, _mtrep5__GetRepositories3 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_mtrep5__GetRepositories3(struct soap*, _mtrep5__GetRepositories3 *const*, const char*, const char*);
SOAP_FMAC3 _mtrep5__GetRepositories3 ** SOAP_FMAC4 soap_get_PointerTo_mtrep5__GetRepositories3(struct soap*, _mtrep5__GetRepositories3 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_mtrep4__VerifyRepository_DEFINED
#define SOAP_TYPE_PointerTo_mtrep4__VerifyRepository_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_mtrep4__VerifyRepository(struct soap*, _mtrep4__VerifyRepository *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_mtrep4__VerifyRepository(struct soap*, const char *, int, _mtrep4__VerifyRepository *const*, const char *);
SOAP_FMAC3 _mtrep4__VerifyRepository ** SOAP_FMAC4 soap_in_PointerTo_mtrep4__VerifyRepository(struct soap*, const char*, _mtrep4__VerifyRepository **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_mtrep4__VerifyRepository(struct soap*, _mtrep4__VerifyRepository *const*, const char*, const char*);
SOAP_FMAC3 _mtrep4__VerifyRepository ** SOAP_FMAC4 soap_get_PointerTo_mtrep4__VerifyRepository(struct soap*, _mtrep4__VerifyRepository **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_mtrep3__TryGetRepositoryInfo2_DEFINED
#define SOAP_TYPE_PointerTo_mtrep3__TryGetRepositoryInfo2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_mtrep3__TryGetRepositoryInfo2(struct soap*, _mtrep3__TryGetRepositoryInfo2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_mtrep3__TryGetRepositoryInfo2(struct soap*, const char *, int, _mtrep3__TryGetRepositoryInfo2 *const*, const char *);
SOAP_FMAC3 _mtrep3__TryGetRepositoryInfo2 ** SOAP_FMAC4 soap_in_PointerTo_mtrep3__TryGetRepositoryInfo2(struct soap*, const char*, _mtrep3__TryGetRepositoryInfo2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_mtrep3__TryGetRepositoryInfo2(struct soap*, _mtrep3__TryGetRepositoryInfo2 *const*, const char*, const char*);
SOAP_FMAC3 _mtrep3__TryGetRepositoryInfo2 ** SOAP_FMAC4 soap_get_PointerTo_mtrep3__TryGetRepositoryInfo2(struct soap*, _mtrep3__TryGetRepositoryInfo2 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_mtrep3__PickRepository2_DEFINED
#define SOAP_TYPE_PointerTo_mtrep3__PickRepository2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_mtrep3__PickRepository2(struct soap*, _mtrep3__PickRepository2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_mtrep3__PickRepository2(struct soap*, const char *, int, _mtrep3__PickRepository2 *const*, const char *);
SOAP_FMAC3 _mtrep3__PickRepository2 ** SOAP_FMAC4 soap_in_PointerTo_mtrep3__PickRepository2(struct soap*, const char*, _mtrep3__PickRepository2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_mtrep3__PickRepository2(struct soap*, _mtrep3__PickRepository2 *const*, const char*, const char*);
SOAP_FMAC3 _mtrep3__PickRepository2 ** SOAP_FMAC4 soap_get_PointerTo_mtrep3__PickRepository2(struct soap*, _mtrep3__PickRepository2 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_mtrep3__GetRepositories2_DEFINED
#define SOAP_TYPE_PointerTo_mtrep3__GetRepositories2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_mtrep3__GetRepositories2(struct soap*, _mtrep3__GetRepositories2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_mtrep3__GetRepositories2(struct soap*, const char *, int, _mtrep3__GetRepositories2 *const*, const char *);
SOAP_FMAC3 _mtrep3__GetRepositories2 ** SOAP_FMAC4 soap_in_PointerTo_mtrep3__GetRepositories2(struct soap*, const char*, _mtrep3__GetRepositories2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_mtrep3__GetRepositories2(struct soap*, _mtrep3__GetRepositories2 *const*, const char*, const char*);
SOAP_FMAC3 _mtrep3__GetRepositories2 ** SOAP_FMAC4 soap_get_PointerTo_mtrep3__GetRepositories2(struct soap*, _mtrep3__GetRepositories2 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_mtrep2__GetListCreationTime_DEFINED
#define SOAP_TYPE_PointerTo_mtrep2__GetListCreationTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_mtrep2__GetListCreationTime(struct soap*, _mtrep2__GetListCreationTime *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_mtrep2__GetListCreationTime(struct soap*, const char *, int, _mtrep2__GetListCreationTime *const*, const char *);
SOAP_FMAC3 _mtrep2__GetListCreationTime ** SOAP_FMAC4 soap_in_PointerTo_mtrep2__GetListCreationTime(struct soap*, const char*, _mtrep2__GetListCreationTime **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_mtrep2__GetListCreationTime(struct soap*, _mtrep2__GetListCreationTime *const*, const char*, const char*);
SOAP_FMAC3 _mtrep2__GetListCreationTime ** SOAP_FMAC4 soap_get_PointerTo_mtrep2__GetListCreationTime(struct soap*, _mtrep2__GetListCreationTime **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_mtrep__GetRepositories_DEFINED
#define SOAP_TYPE_PointerTo_mtrep__GetRepositories_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_mtrep__GetRepositories(struct soap*, _mtrep__GetRepositories *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_mtrep__GetRepositories(struct soap*, const char *, int, _mtrep__GetRepositories *const*, const char *);
SOAP_FMAC3 _mtrep__GetRepositories ** SOAP_FMAC4 soap_in_PointerTo_mtrep__GetRepositories(struct soap*, const char*, _mtrep__GetRepositories **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_mtrep__GetRepositories(struct soap*, _mtrep__GetRepositories *const*, const char*, const char*);
SOAP_FMAC3 _mtrep__GetRepositories ** SOAP_FMAC4 soap_get_PointerTo_mtrep__GetRepositories(struct soap*, _mtrep__GetRepositories **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_mtrep__GetAllRepositories_DEFINED
#define SOAP_TYPE_PointerTo_mtrep__GetAllRepositories_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_mtrep__GetAllRepositories(struct soap*, _mtrep__GetAllRepositories *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_mtrep__GetAllRepositories(struct soap*, const char *, int, _mtrep__GetAllRepositories *const*, const char *);
SOAP_FMAC3 _mtrep__GetAllRepositories ** SOAP_FMAC4 soap_in_PointerTo_mtrep__GetAllRepositories(struct soap*, const char*, _mtrep__GetAllRepositories **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_mtrep__GetAllRepositories(struct soap*, _mtrep__GetAllRepositories *const*, const char*, const char*);
SOAP_FMAC3 _mtrep__GetAllRepositories ** SOAP_FMAC4 soap_get_PointerTo_mtrep__GetAllRepositories(struct soap*, _mtrep__GetAllRepositories **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_mtrep__PickRepository_DEFINED
#define SOAP_TYPE_PointerTo_mtrep__PickRepository_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_mtrep__PickRepository(struct soap*, _mtrep__PickRepository *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_mtrep__PickRepository(struct soap*, const char *, int, _mtrep__PickRepository *const*, const char *);
SOAP_FMAC3 _mtrep__PickRepository ** SOAP_FMAC4 soap_in_PointerTo_mtrep__PickRepository(struct soap*, const char*, _mtrep__PickRepository **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_mtrep__PickRepository(struct soap*, _mtrep__PickRepository *const*, const char*, const char*);
SOAP_FMAC3 _mtrep__PickRepository ** SOAP_FMAC4 soap_get_PointerTo_mtrep__PickRepository(struct soap*, _mtrep__PickRepository **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_mtrep__TryGetRepositoryInfo_DEFINED
#define SOAP_TYPE_PointerTo_mtrep__TryGetRepositoryInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_mtrep__TryGetRepositoryInfo(struct soap*, _mtrep__TryGetRepositoryInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_mtrep__TryGetRepositoryInfo(struct soap*, const char *, int, _mtrep__TryGetRepositoryInfo *const*, const char *);
SOAP_FMAC3 _mtrep__TryGetRepositoryInfo ** SOAP_FMAC4 soap_in_PointerTo_mtrep__TryGetRepositoryInfo(struct soap*, const char*, _mtrep__TryGetRepositoryInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_mtrep__TryGetRepositoryInfo(struct soap*, _mtrep__TryGetRepositoryInfo *const*, const char*, const char*);
SOAP_FMAC3 _mtrep__TryGetRepositoryInfo ** SOAP_FMAC4 soap_get_PointerTo_mtrep__TryGetRepositoryInfo(struct soap*, _mtrep__TryGetRepositoryInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTomtrep7__RepositoryInfo3_DEFINED
#define SOAP_TYPE_PointerTomtrep7__RepositoryInfo3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomtrep7__RepositoryInfo3(struct soap*, mtrep7__RepositoryInfo3 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomtrep7__RepositoryInfo3(struct soap*, const char *, int, mtrep7__RepositoryInfo3 *const*, const char *);
SOAP_FMAC3 mtrep7__RepositoryInfo3 ** SOAP_FMAC4 soap_in_PointerTomtrep7__RepositoryInfo3(struct soap*, const char*, mtrep7__RepositoryInfo3 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomtrep7__RepositoryInfo3(struct soap*, mtrep7__RepositoryInfo3 *const*, const char*, const char*);
SOAP_FMAC3 mtrep7__RepositoryInfo3 ** SOAP_FMAC4 soap_get_PointerTomtrep7__RepositoryInfo3(struct soap*, mtrep7__RepositoryInfo3 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTomtrep7__ClientInfo_DEFINED
#define SOAP_TYPE_PointerTomtrep7__ClientInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomtrep7__ClientInfo(struct soap*, mtrep7__ClientInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomtrep7__ClientInfo(struct soap*, const char *, int, mtrep7__ClientInfo *const*, const char *);
SOAP_FMAC3 mtrep7__ClientInfo ** SOAP_FMAC4 soap_in_PointerTomtrep7__ClientInfo(struct soap*, const char*, mtrep7__ClientInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomtrep7__ClientInfo(struct soap*, mtrep7__ClientInfo *const*, const char*, const char*);
SOAP_FMAC3 mtrep7__ClientInfo ** SOAP_FMAC4 soap_get_PointerTomtrep7__ClientInfo(struct soap*, mtrep7__ClientInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTomtrep6__ArrayOfRepositoryInfo3_DEFINED
#define SOAP_TYPE_PointerTomtrep6__ArrayOfRepositoryInfo3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomtrep6__ArrayOfRepositoryInfo3(struct soap*, mtrep6__ArrayOfRepositoryInfo3 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomtrep6__ArrayOfRepositoryInfo3(struct soap*, const char *, int, mtrep6__ArrayOfRepositoryInfo3 *const*, const char *);
SOAP_FMAC3 mtrep6__ArrayOfRepositoryInfo3 ** SOAP_FMAC4 soap_in_PointerTomtrep6__ArrayOfRepositoryInfo3(struct soap*, const char*, mtrep6__ArrayOfRepositoryInfo3 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomtrep6__ArrayOfRepositoryInfo3(struct soap*, mtrep6__ArrayOfRepositoryInfo3 *const*, const char*, const char*);
SOAP_FMAC3 mtrep6__ArrayOfRepositoryInfo3 ** SOAP_FMAC4 soap_get_PointerTomtrep6__ArrayOfRepositoryInfo3(struct soap*, mtrep6__ArrayOfRepositoryInfo3 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTomtrep6__ClientInfo_DEFINED
#define SOAP_TYPE_PointerTomtrep6__ClientInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomtrep6__ClientInfo(struct soap*, mtrep6__ClientInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomtrep6__ClientInfo(struct soap*, const char *, int, mtrep6__ClientInfo *const*, const char *);
SOAP_FMAC3 mtrep6__ClientInfo ** SOAP_FMAC4 soap_in_PointerTomtrep6__ClientInfo(struct soap*, const char*, mtrep6__ClientInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomtrep6__ClientInfo(struct soap*, mtrep6__ClientInfo *const*, const char*, const char*);
SOAP_FMAC3 mtrep6__ClientInfo ** SOAP_FMAC4 soap_get_PointerTomtrep6__ClientInfo(struct soap*, mtrep6__ClientInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTomtrep6__RepositoryInfo3_DEFINED
#define SOAP_TYPE_PointerTomtrep6__RepositoryInfo3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomtrep6__RepositoryInfo3(struct soap*, mtrep6__RepositoryInfo3 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomtrep6__RepositoryInfo3(struct soap*, const char *, int, mtrep6__RepositoryInfo3 *const*, const char *);
SOAP_FMAC3 mtrep6__RepositoryInfo3 ** SOAP_FMAC4 soap_in_PointerTomtrep6__RepositoryInfo3(struct soap*, const char*, mtrep6__RepositoryInfo3 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomtrep6__RepositoryInfo3(struct soap*, mtrep6__RepositoryInfo3 *const*, const char*, const char*);
SOAP_FMAC3 mtrep6__RepositoryInfo3 ** SOAP_FMAC4 soap_get_PointerTomtrep6__RepositoryInfo3(struct soap*, mtrep6__RepositoryInfo3 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTomtrep5__ArrayOfRepositoryInfo2_DEFINED
#define SOAP_TYPE_PointerTomtrep5__ArrayOfRepositoryInfo2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomtrep5__ArrayOfRepositoryInfo2(struct soap*, mtrep5__ArrayOfRepositoryInfo2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomtrep5__ArrayOfRepositoryInfo2(struct soap*, const char *, int, mtrep5__ArrayOfRepositoryInfo2 *const*, const char *);
SOAP_FMAC3 mtrep5__ArrayOfRepositoryInfo2 ** SOAP_FMAC4 soap_in_PointerTomtrep5__ArrayOfRepositoryInfo2(struct soap*, const char*, mtrep5__ArrayOfRepositoryInfo2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomtrep5__ArrayOfRepositoryInfo2(struct soap*, mtrep5__ArrayOfRepositoryInfo2 *const*, const char*, const char*);
SOAP_FMAC3 mtrep5__ArrayOfRepositoryInfo2 ** SOAP_FMAC4 soap_get_PointerTomtrep5__ArrayOfRepositoryInfo2(struct soap*, mtrep5__ArrayOfRepositoryInfo2 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTomtrep5__ClientInfo_DEFINED
#define SOAP_TYPE_PointerTomtrep5__ClientInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomtrep5__ClientInfo(struct soap*, mtrep5__ClientInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomtrep5__ClientInfo(struct soap*, const char *, int, mtrep5__ClientInfo *const*, const char *);
SOAP_FMAC3 mtrep5__ClientInfo ** SOAP_FMAC4 soap_in_PointerTomtrep5__ClientInfo(struct soap*, const char*, mtrep5__ClientInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomtrep5__ClientInfo(struct soap*, mtrep5__ClientInfo *const*, const char*, const char*);
SOAP_FMAC3 mtrep5__ClientInfo ** SOAP_FMAC4 soap_get_PointerTomtrep5__ClientInfo(struct soap*, mtrep5__ClientInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTomtrep5__RepositoryInfo2_DEFINED
#define SOAP_TYPE_PointerTomtrep5__RepositoryInfo2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomtrep5__RepositoryInfo2(struct soap*, mtrep5__RepositoryInfo2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomtrep5__RepositoryInfo2(struct soap*, const char *, int, mtrep5__RepositoryInfo2 *const*, const char *);
SOAP_FMAC3 mtrep5__RepositoryInfo2 ** SOAP_FMAC4 soap_in_PointerTomtrep5__RepositoryInfo2(struct soap*, const char*, mtrep5__RepositoryInfo2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomtrep5__RepositoryInfo2(struct soap*, mtrep5__RepositoryInfo2 *const*, const char*, const char*);
SOAP_FMAC3 mtrep5__RepositoryInfo2 ** SOAP_FMAC4 soap_get_PointerTomtrep5__RepositoryInfo2(struct soap*, mtrep5__RepositoryInfo2 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTomtrep4__RepositoryInfo_DEFINED
#define SOAP_TYPE_PointerTomtrep4__RepositoryInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomtrep4__RepositoryInfo(struct soap*, mtrep4__RepositoryInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomtrep4__RepositoryInfo(struct soap*, const char *, int, mtrep4__RepositoryInfo *const*, const char *);
SOAP_FMAC3 mtrep4__RepositoryInfo ** SOAP_FMAC4 soap_in_PointerTomtrep4__RepositoryInfo(struct soap*, const char*, mtrep4__RepositoryInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomtrep4__RepositoryInfo(struct soap*, mtrep4__RepositoryInfo *const*, const char*, const char*);
SOAP_FMAC3 mtrep4__RepositoryInfo ** SOAP_FMAC4 soap_get_PointerTomtrep4__RepositoryInfo(struct soap*, mtrep4__RepositoryInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTomtrep4__ClientInfo_DEFINED
#define SOAP_TYPE_PointerTomtrep4__ClientInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomtrep4__ClientInfo(struct soap*, mtrep4__ClientInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomtrep4__ClientInfo(struct soap*, const char *, int, mtrep4__ClientInfo *const*, const char *);
SOAP_FMAC3 mtrep4__ClientInfo ** SOAP_FMAC4 soap_in_PointerTomtrep4__ClientInfo(struct soap*, const char*, mtrep4__ClientInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomtrep4__ClientInfo(struct soap*, mtrep4__ClientInfo *const*, const char*, const char*);
SOAP_FMAC3 mtrep4__ClientInfo ** SOAP_FMAC4 soap_get_PointerTomtrep4__ClientInfo(struct soap*, mtrep4__ClientInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTomtrep3__ArrayOfRepositoryInfo_DEFINED
#define SOAP_TYPE_PointerTomtrep3__ArrayOfRepositoryInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomtrep3__ArrayOfRepositoryInfo(struct soap*, mtrep3__ArrayOfRepositoryInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomtrep3__ArrayOfRepositoryInfo(struct soap*, const char *, int, mtrep3__ArrayOfRepositoryInfo *const*, const char *);
SOAP_FMAC3 mtrep3__ArrayOfRepositoryInfo ** SOAP_FMAC4 soap_in_PointerTomtrep3__ArrayOfRepositoryInfo(struct soap*, const char*, mtrep3__ArrayOfRepositoryInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomtrep3__ArrayOfRepositoryInfo(struct soap*, mtrep3__ArrayOfRepositoryInfo *const*, const char*, const char*);
SOAP_FMAC3 mtrep3__ArrayOfRepositoryInfo ** SOAP_FMAC4 soap_get_PointerTomtrep3__ArrayOfRepositoryInfo(struct soap*, mtrep3__ArrayOfRepositoryInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTomtrep3__ClientInfo_DEFINED
#define SOAP_TYPE_PointerTomtrep3__ClientInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomtrep3__ClientInfo(struct soap*, mtrep3__ClientInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomtrep3__ClientInfo(struct soap*, const char *, int, mtrep3__ClientInfo *const*, const char *);
SOAP_FMAC3 mtrep3__ClientInfo ** SOAP_FMAC4 soap_in_PointerTomtrep3__ClientInfo(struct soap*, const char*, mtrep3__ClientInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomtrep3__ClientInfo(struct soap*, mtrep3__ClientInfo *const*, const char*, const char*);
SOAP_FMAC3 mtrep3__ClientInfo ** SOAP_FMAC4 soap_get_PointerTomtrep3__ClientInfo(struct soap*, mtrep3__ClientInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTomtrep3__RepositoryInfo_DEFINED
#define SOAP_TYPE_PointerTomtrep3__RepositoryInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomtrep3__RepositoryInfo(struct soap*, mtrep3__RepositoryInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomtrep3__RepositoryInfo(struct soap*, const char *, int, mtrep3__RepositoryInfo *const*, const char *);
SOAP_FMAC3 mtrep3__RepositoryInfo ** SOAP_FMAC4 soap_in_PointerTomtrep3__RepositoryInfo(struct soap*, const char*, mtrep3__RepositoryInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomtrep3__RepositoryInfo(struct soap*, mtrep3__RepositoryInfo *const*, const char*, const char*);
SOAP_FMAC3 mtrep3__RepositoryInfo ** SOAP_FMAC4 soap_get_PointerTomtrep3__RepositoryInfo(struct soap*, mtrep3__RepositoryInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTomtrep__ArrayOfRepositoryInfo_DEFINED
#define SOAP_TYPE_PointerTomtrep__ArrayOfRepositoryInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomtrep__ArrayOfRepositoryInfo(struct soap*, mtrep__ArrayOfRepositoryInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomtrep__ArrayOfRepositoryInfo(struct soap*, const char *, int, mtrep__ArrayOfRepositoryInfo *const*, const char *);
SOAP_FMAC3 mtrep__ArrayOfRepositoryInfo ** SOAP_FMAC4 soap_in_PointerTomtrep__ArrayOfRepositoryInfo(struct soap*, const char*, mtrep__ArrayOfRepositoryInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomtrep__ArrayOfRepositoryInfo(struct soap*, mtrep__ArrayOfRepositoryInfo *const*, const char*, const char*);
SOAP_FMAC3 mtrep__ArrayOfRepositoryInfo ** SOAP_FMAC4 soap_get_PointerTomtrep__ArrayOfRepositoryInfo(struct soap*, mtrep__ArrayOfRepositoryInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTomtrep__RepositoryInfo_DEFINED
#define SOAP_TYPE_PointerTomtrep__RepositoryInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomtrep__RepositoryInfo(struct soap*, mtrep__RepositoryInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomtrep__RepositoryInfo(struct soap*, const char *, int, mtrep__RepositoryInfo *const*, const char *);
SOAP_FMAC3 mtrep__RepositoryInfo ** SOAP_FMAC4 soap_in_PointerTomtrep__RepositoryInfo(struct soap*, const char*, mtrep__RepositoryInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomtrep__RepositoryInfo(struct soap*, mtrep__RepositoryInfo *const*, const char*, const char*);
SOAP_FMAC3 mtrep__RepositoryInfo ** SOAP_FMAC4 soap_get_PointerTomtrep__RepositoryInfo(struct soap*, mtrep__RepositoryInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTostd__string_DEFINED
#define SOAP_TYPE_PointerTostd__string_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE__XML_DEFINED
#define SOAP_TYPE__XML_DEFINED
#endif

#ifndef SOAP_TYPE__QName_DEFINED
#define SOAP_TYPE__QName_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__QName(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

inline int soap_write__QName(struct soap *soap, char *const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put__QName(soap, p, "QName", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

inline int soap_read__QName(struct soap *soap, char **p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get__QName(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_string_DEFINED
#define SOAP_TYPE_string_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

inline int soap_write_string(struct soap *soap, char *const *p)
{	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_string(soap, p, "string", NULL) || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

inline int soap_read_string(struct soap *soap, char **p)
{	if (p)
	{	if (soap_begin_recv(soap) || soap_get_string(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTomtrep6__RepositoryInfo3_DEFINED
#define SOAP_TYPE_std__vectorTemplateOfPointerTomtrep6__RepositoryInfo3_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTomtrep6__RepositoryInfo3(struct soap*, std::vector<mtrep6__RepositoryInfo3 *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTomtrep6__RepositoryInfo3(struct soap*, const std::vector<mtrep6__RepositoryInfo3 *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTomtrep6__RepositoryInfo3(struct soap*, const char*, int, const std::vector<mtrep6__RepositoryInfo3 *> *, const char*);
SOAP_FMAC3 std::vector<mtrep6__RepositoryInfo3 *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTomtrep6__RepositoryInfo3(struct soap*, const char*, std::vector<mtrep6__RepositoryInfo3 *> *, const char*);
SOAP_FMAC1 std::vector<mtrep6__RepositoryInfo3 *>  * SOAP_FMAC2 repository_instantiate_std__vectorTemplateOfPointerTomtrep6__RepositoryInfo3(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<mtrep6__RepositoryInfo3 *>  * soap_new_std__vectorTemplateOfPointerTomtrep6__RepositoryInfo3(struct soap *soap, int n = -1)
{	return repository_instantiate_std__vectorTemplateOfPointerTomtrep6__RepositoryInfo3(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTomtrep5__RepositoryInfo2_DEFINED
#define SOAP_TYPE_std__vectorTemplateOfPointerTomtrep5__RepositoryInfo2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTomtrep5__RepositoryInfo2(struct soap*, std::vector<mtrep5__RepositoryInfo2 *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTomtrep5__RepositoryInfo2(struct soap*, const std::vector<mtrep5__RepositoryInfo2 *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTomtrep5__RepositoryInfo2(struct soap*, const char*, int, const std::vector<mtrep5__RepositoryInfo2 *> *, const char*);
SOAP_FMAC3 std::vector<mtrep5__RepositoryInfo2 *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTomtrep5__RepositoryInfo2(struct soap*, const char*, std::vector<mtrep5__RepositoryInfo2 *> *, const char*);
SOAP_FMAC1 std::vector<mtrep5__RepositoryInfo2 *>  * SOAP_FMAC2 repository_instantiate_std__vectorTemplateOfPointerTomtrep5__RepositoryInfo2(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<mtrep5__RepositoryInfo2 *>  * soap_new_std__vectorTemplateOfPointerTomtrep5__RepositoryInfo2(struct soap *soap, int n = -1)
{	return repository_instantiate_std__vectorTemplateOfPointerTomtrep5__RepositoryInfo2(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTomtrep3__RepositoryInfo_DEFINED
#define SOAP_TYPE_std__vectorTemplateOfPointerTomtrep3__RepositoryInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTomtrep3__RepositoryInfo(struct soap*, std::vector<mtrep3__RepositoryInfo *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTomtrep3__RepositoryInfo(struct soap*, const std::vector<mtrep3__RepositoryInfo *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTomtrep3__RepositoryInfo(struct soap*, const char*, int, const std::vector<mtrep3__RepositoryInfo *> *, const char*);
SOAP_FMAC3 std::vector<mtrep3__RepositoryInfo *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTomtrep3__RepositoryInfo(struct soap*, const char*, std::vector<mtrep3__RepositoryInfo *> *, const char*);
SOAP_FMAC1 std::vector<mtrep3__RepositoryInfo *>  * SOAP_FMAC2 repository_instantiate_std__vectorTemplateOfPointerTomtrep3__RepositoryInfo(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<mtrep3__RepositoryInfo *>  * soap_new_std__vectorTemplateOfPointerTomtrep3__RepositoryInfo(struct soap *soap, int n = -1)
{	return repository_instantiate_std__vectorTemplateOfPointerTomtrep3__RepositoryInfo(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTomtrep__RepositoryInfo_DEFINED
#define SOAP_TYPE_std__vectorTemplateOfPointerTomtrep__RepositoryInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTomtrep__RepositoryInfo(struct soap*, std::vector<mtrep__RepositoryInfo *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTomtrep__RepositoryInfo(struct soap*, const std::vector<mtrep__RepositoryInfo *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTomtrep__RepositoryInfo(struct soap*, const char*, int, const std::vector<mtrep__RepositoryInfo *> *, const char*);
SOAP_FMAC3 std::vector<mtrep__RepositoryInfo *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTomtrep__RepositoryInfo(struct soap*, const char*, std::vector<mtrep__RepositoryInfo *> *, const char*);
SOAP_FMAC1 std::vector<mtrep__RepositoryInfo *>  * SOAP_FMAC2 repository_instantiate_std__vectorTemplateOfPointerTomtrep__RepositoryInfo(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<mtrep__RepositoryInfo *>  * soap_new_std__vectorTemplateOfPointerTomtrep__RepositoryInfo(struct soap *soap, int n = -1)
{	return repository_instantiate_std__vectorTemplateOfPointerTomtrep__RepositoryInfo(soap, n, NULL, NULL, NULL);
}
#endif

#endif

/* End of repositoryH.h */
