//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nequeo.DataAccess.NequeoSearch.Data
{
    using System;
    using System.Linq;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Drawing;
    using System.Drawing.Design;
    using Nequeo.Data.DataType;
    using Nequeo.Data;
    using Nequeo.Data.Linq;
    using Nequeo.Data.Control;
    using Nequeo.Data.Custom;
    using Nequeo.Data.LinqToSql;
    using Nequeo.Data.DataSet;
    using Nequeo.Data.Edm;
    using Nequeo.ComponentModel;
    
    
    #region DataStorePhrase Data Entity Type
    /// <summary>
    /// The datastorephrase data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStorePhrase", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStorePhrase")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStorePhrase : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStorePhrase()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorephrase data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStorePhrase entity.</returns>
        public static Data.DataStorePhrase CreateDataStorePhrase(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStorePhrase dataStorePhrase = new Data.DataStorePhrase();
            dataStorePhrase.DataStoreID = dataStoreID;
            dataStorePhrase.TableID = tableID;
            dataStorePhrase.TableRowID = tableRowID;
            return dataStorePhrase;
        }
    }
    #endregion
    
    #region DataStoreSpecial Data Entity Type
    /// <summary>
    /// The datastorespecial data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreSpecial", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreSpecial")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreSpecial : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreSpecial()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorespecial data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreSpecial entity.</returns>
        public static Data.DataStoreSpecial CreateDataStoreSpecial(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreSpecial dataStoreSpecial = new Data.DataStoreSpecial();
            dataStoreSpecial.DataStoreID = dataStoreID;
            dataStoreSpecial.TableID = tableID;
            dataStoreSpecial.TableRowID = tableRowID;
            return dataStoreSpecial;
        }
    }
    #endregion
    
    #region DataStoreA Data Entity Type
    /// <summary>
    /// The datastorea data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreA", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreA")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreA : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreA()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorea data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreA entity.</returns>
        public static Data.DataStoreA CreateDataStoreA(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreA dataStoreA = new Data.DataStoreA();
            dataStoreA.DataStoreID = dataStoreID;
            dataStoreA.TableID = tableID;
            dataStoreA.TableRowID = tableRowID;
            return dataStoreA;
        }
    }
    #endregion
    
    #region DataStoreB Data Entity Type
    /// <summary>
    /// The datastoreb data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreB", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreB")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreB : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreB()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastoreb data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreB entity.</returns>
        public static Data.DataStoreB CreateDataStoreB(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreB dataStoreB = new Data.DataStoreB();
            dataStoreB.DataStoreID = dataStoreID;
            dataStoreB.TableID = tableID;
            dataStoreB.TableRowID = tableRowID;
            return dataStoreB;
        }
    }
    #endregion
    
    #region DataStoreC Data Entity Type
    /// <summary>
    /// The datastorec data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreC", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreC")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreC : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreC()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorec data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreC entity.</returns>
        public static Data.DataStoreC CreateDataStoreC(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreC dataStoreC = new Data.DataStoreC();
            dataStoreC.DataStoreID = dataStoreID;
            dataStoreC.TableID = tableID;
            dataStoreC.TableRowID = tableRowID;
            return dataStoreC;
        }
    }
    #endregion
    
    #region DataStoreD Data Entity Type
    /// <summary>
    /// The datastored data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreD", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreD")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreD : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreD()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastored data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreD entity.</returns>
        public static Data.DataStoreD CreateDataStoreD(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreD dataStoreD = new Data.DataStoreD();
            dataStoreD.DataStoreID = dataStoreID;
            dataStoreD.TableID = tableID;
            dataStoreD.TableRowID = tableRowID;
            return dataStoreD;
        }
    }
    #endregion
    
    #region DataStoreE Data Entity Type
    /// <summary>
    /// The datastoree data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreE", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreE")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreE : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreE()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastoree data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreE entity.</returns>
        public static Data.DataStoreE CreateDataStoreE(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreE dataStoreE = new Data.DataStoreE();
            dataStoreE.DataStoreID = dataStoreID;
            dataStoreE.TableID = tableID;
            dataStoreE.TableRowID = tableRowID;
            return dataStoreE;
        }
    }
    #endregion
    
    #region DataStoreF Data Entity Type
    /// <summary>
    /// The datastoref data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreF", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreF")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreF : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreF()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastoref data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreF entity.</returns>
        public static Data.DataStoreF CreateDataStoreF(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreF dataStoreF = new Data.DataStoreF();
            dataStoreF.DataStoreID = dataStoreID;
            dataStoreF.TableID = tableID;
            dataStoreF.TableRowID = tableRowID;
            return dataStoreF;
        }
    }
    #endregion
    
    #region DataStoreG Data Entity Type
    /// <summary>
    /// The datastoreg data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreG", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreG")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreG : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreG()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastoreg data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreG entity.</returns>
        public static Data.DataStoreG CreateDataStoreG(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreG dataStoreG = new Data.DataStoreG();
            dataStoreG.DataStoreID = dataStoreID;
            dataStoreG.TableID = tableID;
            dataStoreG.TableRowID = tableRowID;
            return dataStoreG;
        }
    }
    #endregion
    
    #region DataStoreH Data Entity Type
    /// <summary>
    /// The datastoreh data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreH", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreH")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreH : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreH()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastoreh data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreH entity.</returns>
        public static Data.DataStoreH CreateDataStoreH(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreH dataStoreH = new Data.DataStoreH();
            dataStoreH.DataStoreID = dataStoreID;
            dataStoreH.TableID = tableID;
            dataStoreH.TableRowID = tableRowID;
            return dataStoreH;
        }
    }
    #endregion
    
    #region DataStoreI Data Entity Type
    /// <summary>
    /// The datastorei data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreI", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreI")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreI : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreI()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorei data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreI entity.</returns>
        public static Data.DataStoreI CreateDataStoreI(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreI dataStoreI = new Data.DataStoreI();
            dataStoreI.DataStoreID = dataStoreID;
            dataStoreI.TableID = tableID;
            dataStoreI.TableRowID = tableRowID;
            return dataStoreI;
        }
    }
    #endregion
    
    #region DataStoreJ Data Entity Type
    /// <summary>
    /// The datastorej data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreJ", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreJ")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreJ : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreJ()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorej data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreJ entity.</returns>
        public static Data.DataStoreJ CreateDataStoreJ(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreJ dataStoreJ = new Data.DataStoreJ();
            dataStoreJ.DataStoreID = dataStoreID;
            dataStoreJ.TableID = tableID;
            dataStoreJ.TableRowID = tableRowID;
            return dataStoreJ;
        }
    }
    #endregion
    
    #region DataStoreK Data Entity Type
    /// <summary>
    /// The datastorek data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreK", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreK")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreK : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreK()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorek data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreK entity.</returns>
        public static Data.DataStoreK CreateDataStoreK(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreK dataStoreK = new Data.DataStoreK();
            dataStoreK.DataStoreID = dataStoreID;
            dataStoreK.TableID = tableID;
            dataStoreK.TableRowID = tableRowID;
            return dataStoreK;
        }
    }
    #endregion
    
    #region DataStoreL Data Entity Type
    /// <summary>
    /// The datastorel data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreL", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreL")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreL : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreL()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorel data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreL entity.</returns>
        public static Data.DataStoreL CreateDataStoreL(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreL dataStoreL = new Data.DataStoreL();
            dataStoreL.DataStoreID = dataStoreID;
            dataStoreL.TableID = tableID;
            dataStoreL.TableRowID = tableRowID;
            return dataStoreL;
        }
    }
    #endregion
    
    #region DataStoreM Data Entity Type
    /// <summary>
    /// The datastorem data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreM", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreM")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreM : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreM()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorem data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreM entity.</returns>
        public static Data.DataStoreM CreateDataStoreM(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreM dataStoreM = new Data.DataStoreM();
            dataStoreM.DataStoreID = dataStoreID;
            dataStoreM.TableID = tableID;
            dataStoreM.TableRowID = tableRowID;
            return dataStoreM;
        }
    }
    #endregion
    
    #region DataStoreN Data Entity Type
    /// <summary>
    /// The datastoren data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreN", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreN")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreN : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreN()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastoren data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreN entity.</returns>
        public static Data.DataStoreN CreateDataStoreN(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreN dataStoreN = new Data.DataStoreN();
            dataStoreN.DataStoreID = dataStoreID;
            dataStoreN.TableID = tableID;
            dataStoreN.TableRowID = tableRowID;
            return dataStoreN;
        }
    }
    #endregion
    
    #region DataStoreO Data Entity Type
    /// <summary>
    /// The datastoreo data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreO", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreO")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreO : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreO()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastoreo data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreO entity.</returns>
        public static Data.DataStoreO CreateDataStoreO(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreO dataStoreO = new Data.DataStoreO();
            dataStoreO.DataStoreID = dataStoreID;
            dataStoreO.TableID = tableID;
            dataStoreO.TableRowID = tableRowID;
            return dataStoreO;
        }
    }
    #endregion
    
    #region DataStoreP Data Entity Type
    /// <summary>
    /// The datastorep data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreP", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreP")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreP : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreP()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorep data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreP entity.</returns>
        public static Data.DataStoreP CreateDataStoreP(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreP dataStoreP = new Data.DataStoreP();
            dataStoreP.DataStoreID = dataStoreID;
            dataStoreP.TableID = tableID;
            dataStoreP.TableRowID = tableRowID;
            return dataStoreP;
        }
    }
    #endregion
    
    #region DataStoreQ Data Entity Type
    /// <summary>
    /// The datastoreq data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreQ", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreQ")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreQ : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreQ()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastoreq data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreQ entity.</returns>
        public static Data.DataStoreQ CreateDataStoreQ(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreQ dataStoreQ = new Data.DataStoreQ();
            dataStoreQ.DataStoreID = dataStoreID;
            dataStoreQ.TableID = tableID;
            dataStoreQ.TableRowID = tableRowID;
            return dataStoreQ;
        }
    }
    #endregion
    
    #region DataStoreR Data Entity Type
    /// <summary>
    /// The datastorer data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreR", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreR")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreR : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreR()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorer data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreR entity.</returns>
        public static Data.DataStoreR CreateDataStoreR(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreR dataStoreR = new Data.DataStoreR();
            dataStoreR.DataStoreID = dataStoreID;
            dataStoreR.TableID = tableID;
            dataStoreR.TableRowID = tableRowID;
            return dataStoreR;
        }
    }
    #endregion
    
    #region DataStoreS Data Entity Type
    /// <summary>
    /// The datastores data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreS", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreS")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreS : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreS()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastores data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreS entity.</returns>
        public static Data.DataStoreS CreateDataStoreS(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreS dataStoreS = new Data.DataStoreS();
            dataStoreS.DataStoreID = dataStoreID;
            dataStoreS.TableID = tableID;
            dataStoreS.TableRowID = tableRowID;
            return dataStoreS;
        }
    }
    #endregion
    
    #region DataStoreT Data Entity Type
    /// <summary>
    /// The datastoret data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreT", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreT")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreT : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreT()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastoret data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreT entity.</returns>
        public static Data.DataStoreT CreateDataStoreT(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreT dataStoreT = new Data.DataStoreT();
            dataStoreT.DataStoreID = dataStoreID;
            dataStoreT.TableID = tableID;
            dataStoreT.TableRowID = tableRowID;
            return dataStoreT;
        }
    }
    #endregion
    
    #region DataStoreU Data Entity Type
    /// <summary>
    /// The datastoreu data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreU", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreU")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreU : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreU()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastoreu data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreU entity.</returns>
        public static Data.DataStoreU CreateDataStoreU(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreU dataStoreU = new Data.DataStoreU();
            dataStoreU.DataStoreID = dataStoreID;
            dataStoreU.TableID = tableID;
            dataStoreU.TableRowID = tableRowID;
            return dataStoreU;
        }
    }
    #endregion
    
    #region DataStoreV Data Entity Type
    /// <summary>
    /// The datastorev data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreV", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreV")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreV : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreV()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorev data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreV entity.</returns>
        public static Data.DataStoreV CreateDataStoreV(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreV dataStoreV = new Data.DataStoreV();
            dataStoreV.DataStoreID = dataStoreID;
            dataStoreV.TableID = tableID;
            dataStoreV.TableRowID = tableRowID;
            return dataStoreV;
        }
    }
    #endregion
    
    #region DataStoreW Data Entity Type
    /// <summary>
    /// The datastorew data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreW", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreW")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreW : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreW()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorew data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreW entity.</returns>
        public static Data.DataStoreW CreateDataStoreW(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreW dataStoreW = new Data.DataStoreW();
            dataStoreW.DataStoreID = dataStoreID;
            dataStoreW.TableID = tableID;
            dataStoreW.TableRowID = tableRowID;
            return dataStoreW;
        }
    }
    #endregion
    
    #region DataStoreX Data Entity Type
    /// <summary>
    /// The datastorex data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreX", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreX")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreX : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreX()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorex data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreX entity.</returns>
        public static Data.DataStoreX CreateDataStoreX(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreX dataStoreX = new Data.DataStoreX();
            dataStoreX.DataStoreID = dataStoreID;
            dataStoreX.TableID = tableID;
            dataStoreX.TableRowID = tableRowID;
            return dataStoreX;
        }
    }
    #endregion
    
    #region DataStoreY Data Entity Type
    /// <summary>
    /// The datastorey data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreY", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreY")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreY : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreY()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorey data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreY entity.</returns>
        public static Data.DataStoreY CreateDataStoreY(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreY dataStoreY = new Data.DataStoreY();
            dataStoreY.DataStoreID = dataStoreID;
            dataStoreY.TableID = tableID;
            dataStoreY.TableRowID = tableRowID;
            return dataStoreY;
        }
    }
    #endregion
    
    #region DataStoreZ Data Entity Type
    /// <summary>
    /// The datastorez data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreZ", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreZ")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreZ : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreZ()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorez data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreZ entity.</returns>
        public static Data.DataStoreZ CreateDataStoreZ(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreZ dataStoreZ = new Data.DataStoreZ();
            dataStoreZ.DataStoreID = dataStoreID;
            dataStoreZ.TableID = tableID;
            dataStoreZ.TableRowID = tableRowID;
            return dataStoreZ;
        }
    }
    #endregion
    
    #region DBTable Data Entity Type
    /// <summary>
    /// The dbtable data object class.
    /// </summary>
    [DataContractAttribute(Name = "DBTable", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DBTable")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DBTable : DataBase
    {
        
        private long _TableID;
        
        private string _TableName;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableName column data entity changed.
        /// </summary>
		partial void OnTableNameChanged();

        /// <summary>
        /// On TableName column data entity changing.
        /// </summary>
		partial void OnTableNameChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DBTable()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablename property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableName")]
        [XmlElementAttribute(ElementName = "TableName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableName", DbType = "varchar", Length = 500, IsNullable = false)]
        public string TableName
        {
            get
            {
                return this._TableName;
            }
            set
            {
                if ((this._TableName != value))
                {
                    this.OnTableNameChanging();
                    this.SendPropertyChanging("TableName");
                    this._TableName = value;
                    this.SendPropertyChanged("TableName");
                    this.OnTableNameChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new dbtable data entity.
        /// </summary>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableName">Initial value of TableName.</param>
        /// <returns>The Data.DBTable entity.</returns>
        public static Data.DBTable CreateDBTable(long tableID, string tableName)
        {
            Data.DBTable dBTable = new Data.DBTable();
            dBTable.TableID = tableID;
            dBTable.TableName = tableName;
            return dBTable;
        }
    }
    #endregion
    
    #region DataStoreNumber Data Entity Type
    /// <summary>
    /// The datastorenumber data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataStoreNumber", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataStoreNumber")]
    [DatabaseAttribute("NequeoSearch")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataStoreNumber : DataBase
    {
        
        private long _DataStoreID;
        
        private long _TableID;
        
        private string _TableRowID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataStoreID column data entity changed.
        /// </summary>
		partial void OnDataStoreIDChanged();

        /// <summary>
        /// On DataStoreID column data entity changing.
        /// </summary>
		partial void OnDataStoreIDChanging();

        /// <summary>
        /// On TableID column data entity changed.
        /// </summary>
		partial void OnTableIDChanged();

        /// <summary>
        /// On TableID column data entity changing.
        /// </summary>
		partial void OnTableIDChanging();

        /// <summary>
        /// On TableRowID column data entity changed.
        /// </summary>
		partial void OnTableRowIDChanged();

        /// <summary>
        /// On TableRowID column data entity changing.
        /// </summary>
		partial void OnTableRowIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataStoreNumber()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datastoreid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataStoreID")]
        [XmlElementAttribute(ElementName = "DataStoreID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataStoreID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DataStoreID
        {
            get
            {
                return this._DataStoreID;
            }
            set
            {
                if ((this._DataStoreID != value))
                {
                    this.OnDataStoreIDChanging();
                    this.SendPropertyChanging("DataStoreID");
                    this._DataStoreID = value;
                    this.SendPropertyChanged("DataStoreID");
                    this.OnDataStoreIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableID")]
        [XmlElementAttribute(ElementName = "TableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long TableID
        {
            get
            {
                return this._TableID;
            }
            set
            {
                if ((this._TableID != value))
                {
                    this.OnTableIDChanging();
                    this.SendPropertyChanging("TableID");
                    this._TableID = value;
                    this.SendPropertyChanged("TableID");
                    this.OnTableIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablerowid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableRowID")]
        [XmlElementAttribute(ElementName = "TableRowID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableRowID", DbType = "nvarchar", Length = -1, IsNullable = false)]
        public string TableRowID
        {
            get
            {
                return this._TableRowID;
            }
            set
            {
                if ((this._TableRowID != value))
                {
                    this.OnTableRowIDChanging();
                    this.SendPropertyChanging("TableRowID");
                    this._TableRowID = value;
                    this.SendPropertyChanged("TableRowID");
                    this.OnTableRowIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datastorenumber data entity.
        /// </summary>
        /// <param name="dataStoreID">Initial value of DataStoreID.</param>
        /// <param name="tableID">Initial value of TableID.</param>
        /// <param name="tableRowID">Initial value of TableRowID.</param>
        /// <returns>The Data.DataStoreNumber entity.</returns>
        public static Data.DataStoreNumber CreateDataStoreNumber(long dataStoreID, long tableID, string tableRowID)
        {
            Data.DataStoreNumber dataStoreNumber = new Data.DataStoreNumber();
            dataStoreNumber.DataStoreID = dataStoreID;
            dataStoreNumber.TableID = tableID;
            dataStoreNumber.TableRowID = tableRowID;
            return dataStoreNumber;
        }
    }
    #endregion
}
