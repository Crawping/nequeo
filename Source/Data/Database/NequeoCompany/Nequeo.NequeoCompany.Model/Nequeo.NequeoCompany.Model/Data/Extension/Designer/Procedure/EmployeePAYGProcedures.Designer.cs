// Warning 169 (Disables the 'Never used' warning)
#pragma warning disable 169
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nequeo.DataAccess.NequeoCompany.Data.Extension
{
    using System;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Data.Linq;
    using System.Data.Linq.SqlClient;
    using System.Data.Linq.Mapping;
    using Nequeo.Data.DataType;
    using Nequeo.Data;
    using Nequeo.Data.Linq;
    using Nequeo.Data.Control;
    using Nequeo.Data.Custom;
    using Nequeo.Data.LinqToSql;
    using Nequeo.Data.DataSet;
    using Nequeo.Data.Edm;
    using Nequeo.ComponentModel;
    
    
    /// <summary>
    /// The employeepayg object class.
    /// </summary>
    public partial class EmployeePAYG
    {
        
        #region Public Function Methods
        /// <summary>
        /// Execute the getemployeepaygbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetEmployeePAYGBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetEmployeePAYGBetweenDateResult> GetEmployeePAYGBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetEmployeePAYGBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getselectedemployeepaygbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetSelectedEmployeePAYGBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetSelectedEmployeePAYGBetweenDateResult> GetSelectedEmployeePAYGBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, employeeID);
            return ((List<Data.Extended.GetSelectedEmployeePAYGBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getselectedemployeepaygpaymentslipbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetSelectedEmployeePAYGPaymentSlipBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenDateResult> GetSelectedEmployeePAYGPaymentSlipBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID, [FunctionParameterAttribute("@CompanyID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> companyID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, employeeID, companyID);
            return ((List<Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getselectedemployeepaygpaymentslipbetweendateall routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetSelectedEmployeePAYGPaymentSlipBetweenDateALL", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenDateALLResult> GetSelectedEmployeePAYGPaymentSlipBetweenDateALL([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID, [FunctionParameterAttribute("@CompanyID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> companyID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, employeeID, companyID);
            return ((List<Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenDateALLResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getselectedemployeepaygpaymentslipbetweenyear routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetSelectedEmployeePAYGPaymentSlipBetweenYear", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenYearResult> GetSelectedEmployeePAYGPaymentSlipBetweenYear([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID, [FunctionParameterAttribute("@CompanyID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> companyID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, employeeID, companyID);
            return ((List<Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenYearResult>)(result.ReturnValue));
        }
        #endregion
    }
}
namespace Nequeo.DataAccess.NequeoCompany.Data.Extended
{
    using System;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Data.Linq;
    using System.Data.Linq.SqlClient;
    using System.Data.Linq.Mapping;
    using Nequeo.Data.DataType;
    using Nequeo.Data;
    using Nequeo.Data.Linq;
    using Nequeo.Data.Control;
    using Nequeo.Data.Custom;
    using Nequeo.Data.LinqToSql;
    using Nequeo.Data.DataSet;
    using Nequeo.Data.Edm;
    using Nequeo.ComponentModel;
    
    
    #region GetEmployeePAYGBetweenDateResult Data Entity Type
    /// <summary>
    /// The getemployeepaygbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetEmployeePAYGBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetEmployeePAYGBetweenDateResult : DataBase
    {
        
        private int _PAYGID;
        
        private int _EmployeeID;
        
        private System.DateTime _PaymentDate;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetEmployeePAYGBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the paygid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paygid property for the object.")]
        [DataMemberAttribute(Name = "PAYGID")]
        [XmlElementAttribute(ElementName = "PAYGID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int PAYGID
        {
            get
            {
                return this._PAYGID;
            }
            set
            {
                if ((this._PAYGID != value))
                {
                    this._PAYGID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this._EmployeeID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amount property for the object.")]
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this._Amount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getemployeepaygbetweendateresult data entity.
        /// </summary>
        /// <param name="pAYGID">Initial value of PAYGID.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.Extended.GetEmployeePAYGBetweenDateResult entity.</returns>
        public static Data.Extended.GetEmployeePAYGBetweenDateResult CreateGetEmployeePAYGBetweenDateResult(int pAYGID, int employeeID, System.DateTime paymentDate, decimal amount)
        {
            Data.Extended.GetEmployeePAYGBetweenDateResult getEmployeePAYGBetweenDateResult = new Data.Extended.GetEmployeePAYGBetweenDateResult();
            getEmployeePAYGBetweenDateResult.PAYGID = pAYGID;
            getEmployeePAYGBetweenDateResult.EmployeeID = employeeID;
            getEmployeePAYGBetweenDateResult.PaymentDate = paymentDate;
            getEmployeePAYGBetweenDateResult.Amount = amount;
            return getEmployeePAYGBetweenDateResult;
        }
    }
    #endregion
    
    #region GetSelectedEmployeePAYGBetweenDateResult Data Entity Type
    /// <summary>
    /// The getselectedemployeepaygbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetSelectedEmployeePAYGBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetSelectedEmployeePAYGBetweenDateResult : DataBase
    {
        
        private int _EmployeeID;
        
        private string _Firstname;
        
        private string _Surname;
        
        private string _DOB;
        
        private string _Address;
        
        private string _Suburb;
        
        private string _State;
        
        private string _Postcode;
        
        private string _HomeNumber;
        
        private string _FaxNumber;
        
        private string _MobileNumber;
        
        private string _EmailAddress;
        
        private string _Comments;
        
        private string _TFN;
        
        private decimal _AnnualWage;
        
        private double _SuperRate;
        
        private double _TaxRate;
        
        private double _BaseHours;
        
        private double _WageInclude;
        
        private double _BCoefficient;
        
        private string _PayInterval;
        
        private int _PAYGID;
        
        private int _EmployeeID1;
        
        private System.DateTime _PaymentDate;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _Comments1;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetSelectedEmployeePAYGBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this._EmployeeID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the firstname property for the object.")]
        [DataMemberAttribute(Name = "Firstname")]
        [XmlElementAttribute(ElementName = "Firstname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Firstname
        {
            get
            {
                return this._Firstname;
            }
            set
            {
                if ((this._Firstname != value))
                {
                    this._Firstname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the surname property for the object.")]
        [DataMemberAttribute(Name = "Surname")]
        [XmlElementAttribute(ElementName = "Surname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if ((this._Surname != value))
                {
                    this._Surname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the dob property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the dob property for the object.")]
        [DataMemberAttribute(Name = "DOB")]
        [XmlElementAttribute(ElementName = "DOB", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string DOB
        {
            get
            {
                return this._DOB;
            }
            set
            {
                if ((this._DOB != value))
                {
                    this._DOB = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the address property for the object.")]
        [DataMemberAttribute(Name = "Address")]
        [XmlElementAttribute(ElementName = "Address", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this._Address = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suburb property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the suburb property for the object.")]
        [DataMemberAttribute(Name = "Suburb")]
        [XmlElementAttribute(ElementName = "Suburb", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Suburb
        {
            get
            {
                return this._Suburb;
            }
            set
            {
                if ((this._Suburb != value))
                {
                    this._Suburb = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the state property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the state property for the object.")]
        [DataMemberAttribute(Name = "State")]
        [XmlElementAttribute(ElementName = "State", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                if ((this._State != value))
                {
                    this._State = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postcode property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postcode property for the object.")]
        [DataMemberAttribute(Name = "Postcode")]
        [XmlElementAttribute(ElementName = "Postcode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Postcode
        {
            get
            {
                return this._Postcode;
            }
            set
            {
                if ((this._Postcode != value))
                {
                    this._Postcode = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the homenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the homenumber property for the object.")]
        [DataMemberAttribute(Name = "HomeNumber")]
        [XmlElementAttribute(ElementName = "HomeNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string HomeNumber
        {
            get
            {
                return this._HomeNumber;
            }
            set
            {
                if ((this._HomeNumber != value))
                {
                    this._HomeNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the faxnumber property for the object.")]
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this._FaxNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the mobilenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the mobilenumber property for the object.")]
        [DataMemberAttribute(Name = "MobileNumber")]
        [XmlElementAttribute(ElementName = "MobileNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this._MobileNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the emailaddress property for the object.")]
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this._EmailAddress = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tfn property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the tfn property for the object.")]
        [DataMemberAttribute(Name = "TFN")]
        [XmlElementAttribute(ElementName = "TFN", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string TFN
        {
            get
            {
                return this._TFN;
            }
            set
            {
                if ((this._TFN != value))
                {
                    this._TFN = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the annualwage property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the annualwage property for the object.")]
        [DataMemberAttribute(Name = "AnnualWage")]
        [XmlElementAttribute(ElementName = "AnnualWage", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal AnnualWage
        {
            get
            {
                return this._AnnualWage;
            }
            set
            {
                if ((this._AnnualWage != value))
                {
                    this._AnnualWage = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the superrate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the superrate property for the object.")]
        [DataMemberAttribute(Name = "SuperRate")]
        [XmlElementAttribute(ElementName = "SuperRate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double SuperRate
        {
            get
            {
                return this._SuperRate;
            }
            set
            {
                if ((this._SuperRate != value))
                {
                    this._SuperRate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the taxrate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the taxrate property for the object.")]
        [DataMemberAttribute(Name = "TaxRate")]
        [XmlElementAttribute(ElementName = "TaxRate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double TaxRate
        {
            get
            {
                return this._TaxRate;
            }
            set
            {
                if ((this._TaxRate != value))
                {
                    this._TaxRate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the basehours property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the basehours property for the object.")]
        [DataMemberAttribute(Name = "BaseHours")]
        [XmlElementAttribute(ElementName = "BaseHours", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double BaseHours
        {
            get
            {
                return this._BaseHours;
            }
            set
            {
                if ((this._BaseHours != value))
                {
                    this._BaseHours = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the wageinclude property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the wageinclude property for the object.")]
        [DataMemberAttribute(Name = "WageInclude")]
        [XmlElementAttribute(ElementName = "WageInclude", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double WageInclude
        {
            get
            {
                return this._WageInclude;
            }
            set
            {
                if ((this._WageInclude != value))
                {
                    this._WageInclude = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bcoefficient property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bcoefficient property for the object.")]
        [DataMemberAttribute(Name = "BCoefficient")]
        [XmlElementAttribute(ElementName = "BCoefficient", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double BCoefficient
        {
            get
            {
                return this._BCoefficient;
            }
            set
            {
                if ((this._BCoefficient != value))
                {
                    this._BCoefficient = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the payinterval property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the payinterval property for the object.")]
        [DataMemberAttribute(Name = "PayInterval")]
        [XmlElementAttribute(ElementName = "PayInterval", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string PayInterval
        {
            get
            {
                return this._PayInterval;
            }
            set
            {
                if ((this._PayInterval != value))
                {
                    this._PayInterval = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paygid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paygid property for the object.")]
        [DataMemberAttribute(Name = "PAYGID")]
        [XmlElementAttribute(ElementName = "PAYGID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int PAYGID
        {
            get
            {
                return this._PAYGID;
            }
            set
            {
                if ((this._PAYGID != value))
                {
                    this._PAYGID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid1 property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID1")]
        [XmlElementAttribute(ElementName = "EmployeeID1", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID1
        {
            get
            {
                return this._EmployeeID1;
            }
            set
            {
                if ((this._EmployeeID1 != value))
                {
                    this._EmployeeID1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amount property for the object.")]
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this._Amount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments1 property for the object.")]
        [DataMemberAttribute(Name = "Comments1")]
        [XmlElementAttribute(ElementName = "Comments1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments1
        {
            get
            {
                return this._Comments1;
            }
            set
            {
                if ((this._Comments1 != value))
                {
                    this._Comments1 = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getselectedemployeepaygbetweendateresult data entity.
        /// </summary>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="annualWage">Initial value of AnnualWage.</param>
        /// <param name="superRate">Initial value of SuperRate.</param>
        /// <param name="taxRate">Initial value of TaxRate.</param>
        /// <param name="baseHours">Initial value of BaseHours.</param>
        /// <param name="wageInclude">Initial value of WageInclude.</param>
        /// <param name="bCoefficient">Initial value of BCoefficient.</param>
        /// <param name="payInterval">Initial value of PayInterval.</param>
        /// <param name="pAYGID">Initial value of PAYGID.</param>
        /// <param name="employeeID1">Initial value of EmployeeID1.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.Extended.GetSelectedEmployeePAYGBetweenDateResult entity.</returns>
        public static Data.Extended.GetSelectedEmployeePAYGBetweenDateResult CreateGetSelectedEmployeePAYGBetweenDateResult(int employeeID, decimal annualWage, double superRate, double taxRate, double baseHours, double wageInclude, double bCoefficient, string payInterval, int pAYGID, int employeeID1, System.DateTime paymentDate, decimal amount)
        {
            Data.Extended.GetSelectedEmployeePAYGBetweenDateResult getSelectedEmployeePAYGBetweenDateResult = new Data.Extended.GetSelectedEmployeePAYGBetweenDateResult();
            getSelectedEmployeePAYGBetweenDateResult.EmployeeID = employeeID;
            getSelectedEmployeePAYGBetweenDateResult.AnnualWage = annualWage;
            getSelectedEmployeePAYGBetweenDateResult.SuperRate = superRate;
            getSelectedEmployeePAYGBetweenDateResult.TaxRate = taxRate;
            getSelectedEmployeePAYGBetweenDateResult.BaseHours = baseHours;
            getSelectedEmployeePAYGBetweenDateResult.WageInclude = wageInclude;
            getSelectedEmployeePAYGBetweenDateResult.BCoefficient = bCoefficient;
            getSelectedEmployeePAYGBetweenDateResult.PayInterval = payInterval;
            getSelectedEmployeePAYGBetweenDateResult.PAYGID = pAYGID;
            getSelectedEmployeePAYGBetweenDateResult.EmployeeID1 = employeeID1;
            getSelectedEmployeePAYGBetweenDateResult.PaymentDate = paymentDate;
            getSelectedEmployeePAYGBetweenDateResult.Amount = amount;
            return getSelectedEmployeePAYGBetweenDateResult;
        }
    }
    #endregion
    
    #region GetSelectedEmployeePAYGPaymentSlipBetweenDateResult Data Entity Type
    /// <summary>
    /// The getselectedemployeepaygpaymentslipbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetSelectedEmployeePAYGPaymentSlipBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetSelectedEmployeePAYGPaymentSlipBetweenDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _AmountTotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetSelectedEmployeePAYGPaymentSlipBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the amounttotal property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amounttotal property for the object.")]
        [DataMemberAttribute(Name = "AmountTotal")]
        [XmlElementAttribute(ElementName = "AmountTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> AmountTotal
        {
            get
            {
                return this._AmountTotal;
            }
            set
            {
                if ((this._AmountTotal != value))
                {
                    this._AmountTotal = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getselectedemployeepaygpaymentslipbetweendateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenDateResult entity.</returns>
        public static Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenDateResult CreateGetSelectedEmployeePAYGPaymentSlipBetweenDateResult()
        {
            Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenDateResult getSelectedEmployeePAYGPaymentSlipBetweenDateResult = new Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenDateResult();
            return getSelectedEmployeePAYGPaymentSlipBetweenDateResult;
        }
    }
    #endregion
    
    #region GetSelectedEmployeePAYGPaymentSlipBetweenDateALLResult Data Entity Type
    /// <summary>
    /// The getselectedemployeepaygpaymentslipbetweendateallresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetSelectedEmployeePAYGPaymentSlipBetweenDateALLResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetSelectedEmployeePAYGPaymentSlipBetweenDateALLResult : DataBase
    {
        
        private int _PAYGID;
        
        private int _EmployeeID;
        
        private System.DateTime _PaymentDate;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetSelectedEmployeePAYGPaymentSlipBetweenDateALLResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the paygid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paygid property for the object.")]
        [DataMemberAttribute(Name = "PAYGID")]
        [XmlElementAttribute(ElementName = "PAYGID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int PAYGID
        {
            get
            {
                return this._PAYGID;
            }
            set
            {
                if ((this._PAYGID != value))
                {
                    this._PAYGID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this._EmployeeID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amount property for the object.")]
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this._Amount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getselectedemployeepaygpaymentslipbetweendateallresult data entity.
        /// </summary>
        /// <param name="pAYGID">Initial value of PAYGID.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenDateALLResult entity.</returns>
        public static Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenDateALLResult CreateGetSelectedEmployeePAYGPaymentSlipBetweenDateALLResult(int pAYGID, int employeeID, System.DateTime paymentDate, decimal amount)
        {
            Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenDateALLResult getSelectedEmployeePAYGPaymentSlipBetweenDateALLResult = new Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenDateALLResult();
            getSelectedEmployeePAYGPaymentSlipBetweenDateALLResult.PAYGID = pAYGID;
            getSelectedEmployeePAYGPaymentSlipBetweenDateALLResult.EmployeeID = employeeID;
            getSelectedEmployeePAYGPaymentSlipBetweenDateALLResult.PaymentDate = paymentDate;
            getSelectedEmployeePAYGPaymentSlipBetweenDateALLResult.Amount = amount;
            return getSelectedEmployeePAYGPaymentSlipBetweenDateALLResult;
        }
    }
    #endregion
    
    #region GetSelectedEmployeePAYGPaymentSlipBetweenYearResult Data Entity Type
    /// <summary>
    /// The getselectedemployeepaygpaymentslipbetweenyearresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetSelectedEmployeePAYGPaymentSlipBetweenYearResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetSelectedEmployeePAYGPaymentSlipBetweenYearResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _AmounTotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetSelectedEmployeePAYGPaymentSlipBetweenYearResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the amountotal property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amountotal property for the object.")]
        [DataMemberAttribute(Name = "AmounTotal")]
        [XmlElementAttribute(ElementName = "AmounTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> AmounTotal
        {
            get
            {
                return this._AmounTotal;
            }
            set
            {
                if ((this._AmounTotal != value))
                {
                    this._AmounTotal = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getselectedemployeepaygpaymentslipbetweenyearresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenYearResult entity.</returns>
        public static Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenYearResult CreateGetSelectedEmployeePAYGPaymentSlipBetweenYearResult()
        {
            Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenYearResult getSelectedEmployeePAYGPaymentSlipBetweenYearResult = new Data.Extended.GetSelectedEmployeePAYGPaymentSlipBetweenYearResult();
            return getSelectedEmployeePAYGPaymentSlipBetweenYearResult;
        }
    }
    #endregion
}

#pragma warning restore 169
