//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nequeo.DataAccess.NequeoCompany.Data
{
    using System;
    using System.Linq;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Drawing;
    using System.Drawing.Design;
    using Nequeo.Data.DataType;
    using Nequeo.Data;
    using Nequeo.Data.Linq;
    using Nequeo.Data.Control;
    using Nequeo.Data.Custom;
    using Nequeo.Data.LinqToSql;
    using Nequeo.Data.DataSet;
    using Nequeo.Data.Edm;
    using Nequeo.ComponentModel;
    
    
    #region PurchaseType Data Entity Type
    /// <summary>
    /// The purchasetype data object class.
    /// </summary>
    [DataContractAttribute(Name = "PurchaseType", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.PurchaseType")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class PurchaseType : DataBase
    {
        
        private int _PurchaseTypeID;
        
        private string _Name;
        
        private string _Description;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On PurchaseTypeID column data entity changed.
        /// </summary>
		partial void OnPurchaseTypeIDChanged();

        /// <summary>
        /// On PurchaseTypeID column data entity changing.
        /// </summary>
		partial void OnPurchaseTypeIDChanging();

        /// <summary>
        /// On Name column data entity changed.
        /// </summary>
		partial void OnNameChanged();

        /// <summary>
        /// On Name column data entity changing.
        /// </summary>
		partial void OnNameChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public PurchaseType()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the purchasetypeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PurchaseTypeID")]
        [XmlElementAttribute(ElementName = "PurchaseTypeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("PurchaseTypeID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int PurchaseTypeID
        {
            get
            {
                return this._PurchaseTypeID;
            }
            set
            {
                if ((this._PurchaseTypeID != value))
                {
                    this.OnPurchaseTypeIDChanging();
                    this.SendPropertyChanging("PurchaseTypeID");
                    this._PurchaseTypeID = value;
                    this.SendPropertyChanged("PurchaseTypeID");
                    this.OnPurchaseTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the name property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Name")]
        [XmlElementAttribute(ElementName = "Name", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Name", DbType = "varchar", Length = 50, IsNullable = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging();
                    this.SendPropertyChanging("Name");
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 50, IsNullable = false)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new purchasetype data entity.
        /// </summary>
        /// <param name="purchaseTypeID">Initial value of PurchaseTypeID.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <returns>The Data.PurchaseType entity.</returns>
        public static Data.PurchaseType CreatePurchaseType(int purchaseTypeID, string name, string description)
        {
            Data.PurchaseType purchaseType = new Data.PurchaseType();
            purchaseType.PurchaseTypeID = purchaseTypeID;
            purchaseType.Name = name;
            purchaseType.Description = description;
            return purchaseType;
        }
    }
    #endregion
    
    #region PayIntervalType Data Entity Type
    /// <summary>
    /// The payintervaltype data object class.
    /// </summary>
    [DataContractAttribute(Name = "PayIntervalType", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.PayIntervalType")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class PayIntervalType : DataBase
    {
        
        private int _PayIntervalTypeID;
        
        private string _Name;
        
        private string _Description;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On PayIntervalTypeID column data entity changed.
        /// </summary>
		partial void OnPayIntervalTypeIDChanged();

        /// <summary>
        /// On PayIntervalTypeID column data entity changing.
        /// </summary>
		partial void OnPayIntervalTypeIDChanging();

        /// <summary>
        /// On Name column data entity changed.
        /// </summary>
		partial void OnNameChanged();

        /// <summary>
        /// On Name column data entity changing.
        /// </summary>
		partial void OnNameChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public PayIntervalType()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the payintervaltypeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PayIntervalTypeID")]
        [XmlElementAttribute(ElementName = "PayIntervalTypeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("PayIntervalTypeID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int PayIntervalTypeID
        {
            get
            {
                return this._PayIntervalTypeID;
            }
            set
            {
                if ((this._PayIntervalTypeID != value))
                {
                    this.OnPayIntervalTypeIDChanging();
                    this.SendPropertyChanging("PayIntervalTypeID");
                    this._PayIntervalTypeID = value;
                    this.SendPropertyChanged("PayIntervalTypeID");
                    this.OnPayIntervalTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the name property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Name")]
        [XmlElementAttribute(ElementName = "Name", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Name", DbType = "varchar", Length = 50, IsNullable = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging();
                    this.SendPropertyChanging("Name");
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 500, IsNullable = false)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new payintervaltype data entity.
        /// </summary>
        /// <param name="payIntervalTypeID">Initial value of PayIntervalTypeID.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <returns>The Data.PayIntervalType entity.</returns>
        public static Data.PayIntervalType CreatePayIntervalType(int payIntervalTypeID, string name, string description)
        {
            Data.PayIntervalType payIntervalType = new Data.PayIntervalType();
            payIntervalType.PayIntervalTypeID = payIntervalTypeID;
            payIntervalType.Name = name;
            payIntervalType.Description = description;
            return payIntervalType;
        }
    }
    #endregion
    
    #region AccountType Data Entity Type
    /// <summary>
    /// The accounttype data object class.
    /// </summary>
    [DataContractAttribute(Name = "AccountType", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.AccountType")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class AccountType : DataBase
    {
        
        private int _AccountTypeID;
        
        private string _Name;
        
        private string _Description;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On AccountTypeID column data entity changed.
        /// </summary>
		partial void OnAccountTypeIDChanged();

        /// <summary>
        /// On AccountTypeID column data entity changing.
        /// </summary>
		partial void OnAccountTypeIDChanging();

        /// <summary>
        /// On Name column data entity changed.
        /// </summary>
		partial void OnNameChanged();

        /// <summary>
        /// On Name column data entity changing.
        /// </summary>
		partial void OnNameChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public AccountType()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the accounttypeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AccountTypeID")]
        [XmlElementAttribute(ElementName = "AccountTypeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("AccountTypeID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int AccountTypeID
        {
            get
            {
                return this._AccountTypeID;
            }
            set
            {
                if ((this._AccountTypeID != value))
                {
                    this.OnAccountTypeIDChanging();
                    this.SendPropertyChanging("AccountTypeID");
                    this._AccountTypeID = value;
                    this.SendPropertyChanged("AccountTypeID");
                    this.OnAccountTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the name property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Name")]
        [XmlElementAttribute(ElementName = "Name", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Name", DbType = "varchar", Length = 50, IsNullable = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging();
                    this.SendPropertyChanging("Name");
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 500, IsNullable = false)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new accounttype data entity.
        /// </summary>
        /// <param name="accountTypeID">Initial value of AccountTypeID.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <returns>The Data.AccountType entity.</returns>
        public static Data.AccountType CreateAccountType(int accountTypeID, string name, string description)
        {
            Data.AccountType accountType = new Data.AccountType();
            accountType.AccountTypeID = accountTypeID;
            accountType.Name = name;
            accountType.Description = description;
            return accountType;
        }
    }
    #endregion
    
    #region AccountTransactions Data Entity Type
    /// <summary>
    /// The accounttransactions data object class.
    /// </summary>
    [DataContractAttribute(Name = "AccountTransactions", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.AccountTransactions")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class AccountTransactions : DataBase
    {
        
        private int _AccountTransactionID;
        
        private int _AccountID;
        
        private System.Nullable<System.Int32> _DataMember;
        
        private System.DateTime _PaymentDate;
        
        private string _TransactionType;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _ReferenceNumber;
        
        private string _PaidToFrom;
        
        private System.Nullable<System.Int32> _PaidToFromID;
        
        private System.Nullable<System.Int32> _PaidToFromRefID;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On AccountTransactionID column data entity changed.
        /// </summary>
		partial void OnAccountTransactionIDChanged();

        /// <summary>
        /// On AccountTransactionID column data entity changing.
        /// </summary>
		partial void OnAccountTransactionIDChanging();

        /// <summary>
        /// On AccountID column data entity changed.
        /// </summary>
		partial void OnAccountIDChanged();

        /// <summary>
        /// On AccountID column data entity changing.
        /// </summary>
		partial void OnAccountIDChanging();

        /// <summary>
        /// On DataMember column data entity changed.
        /// </summary>
		partial void OnDataMemberChanged();

        /// <summary>
        /// On DataMember column data entity changing.
        /// </summary>
		partial void OnDataMemberChanging();

        /// <summary>
        /// On PaymentDate column data entity changed.
        /// </summary>
		partial void OnPaymentDateChanged();

        /// <summary>
        /// On PaymentDate column data entity changing.
        /// </summary>
		partial void OnPaymentDateChanging();

        /// <summary>
        /// On TransactionType column data entity changed.
        /// </summary>
		partial void OnTransactionTypeChanged();

        /// <summary>
        /// On TransactionType column data entity changing.
        /// </summary>
		partial void OnTransactionTypeChanging();

        /// <summary>
        /// On Amount column data entity changed.
        /// </summary>
		partial void OnAmountChanged();

        /// <summary>
        /// On Amount column data entity changing.
        /// </summary>
		partial void OnAmountChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

        /// <summary>
        /// On ReferenceNumber column data entity changed.
        /// </summary>
		partial void OnReferenceNumberChanged();

        /// <summary>
        /// On ReferenceNumber column data entity changing.
        /// </summary>
		partial void OnReferenceNumberChanging();

        /// <summary>
        /// On PaidToFrom column data entity changed.
        /// </summary>
		partial void OnPaidToFromChanged();

        /// <summary>
        /// On PaidToFrom column data entity changing.
        /// </summary>
		partial void OnPaidToFromChanging();

        /// <summary>
        /// On PaidToFromID column data entity changed.
        /// </summary>
		partial void OnPaidToFromIDChanged();

        /// <summary>
        /// On PaidToFromID column data entity changing.
        /// </summary>
		partial void OnPaidToFromIDChanging();

        /// <summary>
        /// On PaidToFromRefID column data entity changed.
        /// </summary>
		partial void OnPaidToFromRefIDChanged();

        /// <summary>
        /// On PaidToFromRefID column data entity changing.
        /// </summary>
		partial void OnPaidToFromRefIDChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public AccountTransactions()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the accounttransactionid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AccountTransactionID")]
        [XmlElementAttribute(ElementName = "AccountTransactionID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("AccountTransactionID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int AccountTransactionID
        {
            get
            {
                return this._AccountTransactionID;
            }
            set
            {
                if ((this._AccountTransactionID != value))
                {
                    this.OnAccountTransactionIDChanging();
                    this.SendPropertyChanging("AccountTransactionID");
                    this._AccountTransactionID = value;
                    this.SendPropertyChanged("AccountTransactionID");
                    this.OnAccountTransactionIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("AccountID", DbType = "int", Length = 4, IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this.OnAccountIDChanging();
                    this.SendPropertyChanging("AccountID");
                    this._AccountID = value;
                    this.SendPropertyChanged("AccountID");
                    this.OnAccountIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the datamember property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataMember")]
        [XmlElementAttribute(ElementName = "DataMember", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("DataMember", DbType = "int", Length = 4, IsNullable = true)]
        public System.Nullable<System.Int32> DataMember
        {
            get
            {
                return this._DataMember;
            }
            set
            {
                if ((this._DataMember != value))
                {
                    this.OnDataMemberChanging();
                    this.SendPropertyChanging("DataMember");
                    this._DataMember = value;
                    this.SendPropertyChanged("DataMember");
                    this.OnDataMemberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("PaymentDate", DbType = "datetime", Length = 8, IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this.OnPaymentDateChanging();
                    this.SendPropertyChanging("PaymentDate");
                    this._PaymentDate = value;
                    this.SendPropertyChanged("PaymentDate");
                    this.OnPaymentDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the transactiontype property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TransactionType")]
        [XmlElementAttribute(ElementName = "TransactionType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TransactionType", DbType = "varchar", Length = 50, IsNullable = false)]
        public string TransactionType
        {
            get
            {
                return this._TransactionType;
            }
            set
            {
                if ((this._TransactionType != value))
                {
                    this.OnTransactionTypeChanging();
                    this.SendPropertyChanging("TransactionType");
                    this._TransactionType = value;
                    this.SendPropertyChanged("TransactionType");
                    this.OnTransactionTypeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Amount", DbType = "money", Length = 8, IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this.OnAmountChanging();
                    this.SendPropertyChanging("Amount");
                    this._Amount = value;
                    this.SendPropertyChanged("Amount");
                    this.OnAmountChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 100, IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the referencenumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ReferenceNumber")]
        [XmlElementAttribute(ElementName = "ReferenceNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("ReferenceNumber", DbType = "varchar", Length = 50, IsNullable = true)]
        public string ReferenceNumber
        {
            get
            {
                return this._ReferenceNumber;
            }
            set
            {
                if ((this._ReferenceNumber != value))
                {
                    this.OnReferenceNumberChanging();
                    this.SendPropertyChanging("ReferenceNumber");
                    this._ReferenceNumber = value;
                    this.SendPropertyChanged("ReferenceNumber");
                    this.OnReferenceNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofrom property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PaidToFrom")]
        [XmlElementAttribute(ElementName = "PaidToFrom", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PaidToFrom", DbType = "varchar", Length = 50, IsNullable = true)]
        public string PaidToFrom
        {
            get
            {
                return this._PaidToFrom;
            }
            set
            {
                if ((this._PaidToFrom != value))
                {
                    this.OnPaidToFromChanging();
                    this.SendPropertyChanging("PaidToFrom");
                    this._PaidToFrom = value;
                    this.SendPropertyChanged("PaidToFrom");
                    this.OnPaidToFromChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofromid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PaidToFromID")]
        [XmlElementAttribute(ElementName = "PaidToFromID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PaidToFromID", DbType = "int", Length = 4, IsNullable = true)]
        public System.Nullable<System.Int32> PaidToFromID
        {
            get
            {
                return this._PaidToFromID;
            }
            set
            {
                if ((this._PaidToFromID != value))
                {
                    this.OnPaidToFromIDChanging();
                    this.SendPropertyChanging("PaidToFromID");
                    this._PaidToFromID = value;
                    this.SendPropertyChanged("PaidToFromID");
                    this.OnPaidToFromIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofromrefid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PaidToFromRefID")]
        [XmlElementAttribute(ElementName = "PaidToFromRefID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PaidToFromRefID", DbType = "int", Length = 4, IsNullable = true)]
        public System.Nullable<System.Int32> PaidToFromRefID
        {
            get
            {
                return this._PaidToFromRefID;
            }
            set
            {
                if ((this._PaidToFromRefID != value))
                {
                    this.OnPaidToFromRefIDChanging();
                    this.SendPropertyChanging("PaidToFromRefID");
                    this._PaidToFromRefID = value;
                    this.SendPropertyChanged("PaidToFromRefID");
                    this.OnPaidToFromRefIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 300, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new accounttransactions data entity.
        /// </summary>
        /// <param name="accountTransactionID">Initial value of AccountTransactionID.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="transactionType">Initial value of TransactionType.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.AccountTransactions entity.</returns>
        public static Data.AccountTransactions CreateAccountTransactions(int accountTransactionID, int accountID, System.DateTime paymentDate, string transactionType, decimal amount)
        {
            Data.AccountTransactions accountTransactions = new Data.AccountTransactions();
            accountTransactions.AccountTransactionID = accountTransactionID;
            accountTransactions.AccountID = accountID;
            accountTransactions.PaymentDate = paymentDate;
            accountTransactions.TransactionType = transactionType;
            accountTransactions.Amount = amount;
            return accountTransactions;
        }
    }
    #endregion
    
    #region EmployeePAYG Data Entity Type
    /// <summary>
    /// The employeepayg data object class.
    /// </summary>
    [DataContractAttribute(Name = "EmployeePAYG", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.EmployeePAYG")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class EmployeePAYG : DataBase
    {
        
        private int _PAYGID;
        
        private int _EmployeeID;
        
        private System.DateTime _PaymentDate;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On PAYGID column data entity changed.
        /// </summary>
		partial void OnPAYGIDChanged();

        /// <summary>
        /// On PAYGID column data entity changing.
        /// </summary>
		partial void OnPAYGIDChanging();

        /// <summary>
        /// On EmployeeID column data entity changed.
        /// </summary>
		partial void OnEmployeeIDChanged();

        /// <summary>
        /// On EmployeeID column data entity changing.
        /// </summary>
		partial void OnEmployeeIDChanging();

        /// <summary>
        /// On PaymentDate column data entity changed.
        /// </summary>
		partial void OnPaymentDateChanged();

        /// <summary>
        /// On PaymentDate column data entity changing.
        /// </summary>
		partial void OnPaymentDateChanging();

        /// <summary>
        /// On Amount column data entity changed.
        /// </summary>
		partial void OnAmountChanged();

        /// <summary>
        /// On Amount column data entity changing.
        /// </summary>
		partial void OnAmountChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public EmployeePAYG()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the paygid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PAYGID")]
        [XmlElementAttribute(ElementName = "PAYGID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("PAYGID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int PAYGID
        {
            get
            {
                return this._PAYGID;
            }
            set
            {
                if ((this._PAYGID != value))
                {
                    this.OnPAYGIDChanging();
                    this.SendPropertyChanging("PAYGID");
                    this._PAYGID = value;
                    this.SendPropertyChanged("PAYGID");
                    this.OnPAYGIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("EmployeeID", DbType = "int", Length = 4, IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this.OnEmployeeIDChanging();
                    this.SendPropertyChanging("EmployeeID");
                    this._EmployeeID = value;
                    this.SendPropertyChanged("EmployeeID");
                    this.OnEmployeeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("PaymentDate", DbType = "datetime", Length = 8, IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this.OnPaymentDateChanging();
                    this.SendPropertyChanging("PaymentDate");
                    this._PaymentDate = value;
                    this.SendPropertyChanged("PaymentDate");
                    this.OnPaymentDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Amount", DbType = "money", Length = 8, IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this.OnAmountChanging();
                    this.SendPropertyChanging("Amount");
                    this._Amount = value;
                    this.SendPropertyChanged("Amount");
                    this.OnAmountChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 100, IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 300, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new employeepayg data entity.
        /// </summary>
        /// <param name="pAYGID">Initial value of PAYGID.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.EmployeePAYG entity.</returns>
        public static Data.EmployeePAYG CreateEmployeePAYG(int pAYGID, int employeeID, System.DateTime paymentDate, decimal amount)
        {
            Data.EmployeePAYG employeePAYG = new Data.EmployeePAYG();
            employeePAYG.PAYGID = pAYGID;
            employeePAYG.EmployeeID = employeeID;
            employeePAYG.PaymentDate = paymentDate;
            employeePAYG.Amount = amount;
            return employeePAYG;
        }
    }
    #endregion
    
    #region TransactionType Data Entity Type
    /// <summary>
    /// The transactiontype data object class.
    /// </summary>
    [DataContractAttribute(Name = "TransactionType", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.TransactionType")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class TransactionType : DataBase
    {
        
        private int _TransactionTypeID;
        
        private string _Name;
        
        private string _Description;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On TransactionTypeID column data entity changed.
        /// </summary>
		partial void OnTransactionTypeIDChanged();

        /// <summary>
        /// On TransactionTypeID column data entity changing.
        /// </summary>
		partial void OnTransactionTypeIDChanging();

        /// <summary>
        /// On Name column data entity changed.
        /// </summary>
		partial void OnNameChanged();

        /// <summary>
        /// On Name column data entity changing.
        /// </summary>
		partial void OnNameChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public TransactionType()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the transactiontypeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TransactionTypeID")]
        [XmlElementAttribute(ElementName = "TransactionTypeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TransactionTypeID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int TransactionTypeID
        {
            get
            {
                return this._TransactionTypeID;
            }
            set
            {
                if ((this._TransactionTypeID != value))
                {
                    this.OnTransactionTypeIDChanging();
                    this.SendPropertyChanging("TransactionTypeID");
                    this._TransactionTypeID = value;
                    this.SendPropertyChanged("TransactionTypeID");
                    this.OnTransactionTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the name property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Name")]
        [XmlElementAttribute(ElementName = "Name", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Name", DbType = "varchar", Length = 50, IsNullable = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging();
                    this.SendPropertyChanging("Name");
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 500, IsNullable = false)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new transactiontype data entity.
        /// </summary>
        /// <param name="transactionTypeID">Initial value of TransactionTypeID.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <returns>The Data.TransactionType entity.</returns>
        public static Data.TransactionType CreateTransactionType(int transactionTypeID, string name, string description)
        {
            Data.TransactionType transactionType = new Data.TransactionType();
            transactionType.TransactionTypeID = transactionTypeID;
            transactionType.Name = name;
            transactionType.Description = description;
            return transactionType;
        }
    }
    #endregion
    
    #region PaymentType Data Entity Type
    /// <summary>
    /// The paymenttype data object class.
    /// </summary>
    [DataContractAttribute(Name = "PaymentType", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.PaymentType")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class PaymentType : DataBase
    {
        
        private int _PaymentTypeID;
        
        private string _Name;
        
        private string _Description;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On PaymentTypeID column data entity changed.
        /// </summary>
		partial void OnPaymentTypeIDChanged();

        /// <summary>
        /// On PaymentTypeID column data entity changing.
        /// </summary>
		partial void OnPaymentTypeIDChanging();

        /// <summary>
        /// On Name column data entity changed.
        /// </summary>
		partial void OnNameChanged();

        /// <summary>
        /// On Name column data entity changing.
        /// </summary>
		partial void OnNameChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public PaymentType()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the paymenttypeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PaymentTypeID")]
        [XmlElementAttribute(ElementName = "PaymentTypeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("PaymentTypeID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int PaymentTypeID
        {
            get
            {
                return this._PaymentTypeID;
            }
            set
            {
                if ((this._PaymentTypeID != value))
                {
                    this.OnPaymentTypeIDChanging();
                    this.SendPropertyChanging("PaymentTypeID");
                    this._PaymentTypeID = value;
                    this.SendPropertyChanged("PaymentTypeID");
                    this.OnPaymentTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the name property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Name")]
        [XmlElementAttribute(ElementName = "Name", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Name", DbType = "varchar", Length = 50, IsNullable = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging();
                    this.SendPropertyChanging("Name");
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 500, IsNullable = false)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new paymenttype data entity.
        /// </summary>
        /// <param name="paymentTypeID">Initial value of PaymentTypeID.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <returns>The Data.PaymentType entity.</returns>
        public static Data.PaymentType CreatePaymentType(int paymentTypeID, string name, string description)
        {
            Data.PaymentType paymentType = new Data.PaymentType();
            paymentType.PaymentTypeID = paymentTypeID;
            paymentType.Name = name;
            paymentType.Description = description;
            return paymentType;
        }
    }
    #endregion
    
    #region VendorDetails Data Entity Type
    /// <summary>
    /// The vendordetails data object class.
    /// </summary>
    [DataContractAttribute(Name = "VendorDetails", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.VendorDetails")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class VendorDetails : DataBase
    {
        
        private int _VendorDetailsID;
        
        private int _VendorID;
        
        private System.Nullable<System.DateTime> _PaymentDate;
        
        private string _InvoiceNumber;
        
        private string _OrderNumber;
        
        private string _Reference;
        
        private decimal _Amount;
        
        private decimal _GST;
        
        private string _Description;
        
        private string _Comments;
        
        private string _PurchaseType;
        
        private string _ExpenseType;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On VendorDetailsID column data entity changed.
        /// </summary>
		partial void OnVendorDetailsIDChanged();

        /// <summary>
        /// On VendorDetailsID column data entity changing.
        /// </summary>
		partial void OnVendorDetailsIDChanging();

        /// <summary>
        /// On VendorID column data entity changed.
        /// </summary>
		partial void OnVendorIDChanged();

        /// <summary>
        /// On VendorID column data entity changing.
        /// </summary>
		partial void OnVendorIDChanging();

        /// <summary>
        /// On PaymentDate column data entity changed.
        /// </summary>
		partial void OnPaymentDateChanged();

        /// <summary>
        /// On PaymentDate column data entity changing.
        /// </summary>
		partial void OnPaymentDateChanging();

        /// <summary>
        /// On InvoiceNumber column data entity changed.
        /// </summary>
		partial void OnInvoiceNumberChanged();

        /// <summary>
        /// On InvoiceNumber column data entity changing.
        /// </summary>
		partial void OnInvoiceNumberChanging();

        /// <summary>
        /// On OrderNumber column data entity changed.
        /// </summary>
		partial void OnOrderNumberChanged();

        /// <summary>
        /// On OrderNumber column data entity changing.
        /// </summary>
		partial void OnOrderNumberChanging();

        /// <summary>
        /// On Reference column data entity changed.
        /// </summary>
		partial void OnReferenceChanged();

        /// <summary>
        /// On Reference column data entity changing.
        /// </summary>
		partial void OnReferenceChanging();

        /// <summary>
        /// On Amount column data entity changed.
        /// </summary>
		partial void OnAmountChanged();

        /// <summary>
        /// On Amount column data entity changing.
        /// </summary>
		partial void OnAmountChanging();

        /// <summary>
        /// On GST column data entity changed.
        /// </summary>
		partial void OnGSTChanged();

        /// <summary>
        /// On GST column data entity changing.
        /// </summary>
		partial void OnGSTChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

        /// <summary>
        /// On PurchaseType column data entity changed.
        /// </summary>
		partial void OnPurchaseTypeChanged();

        /// <summary>
        /// On PurchaseType column data entity changing.
        /// </summary>
		partial void OnPurchaseTypeChanging();

        /// <summary>
        /// On ExpenseType column data entity changed.
        /// </summary>
		partial void OnExpenseTypeChanged();

        /// <summary>
        /// On ExpenseType column data entity changing.
        /// </summary>
		partial void OnExpenseTypeChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public VendorDetails()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the vendordetailsid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "VendorDetailsID")]
        [XmlElementAttribute(ElementName = "VendorDetailsID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("VendorDetailsID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int VendorDetailsID
        {
            get
            {
                return this._VendorDetailsID;
            }
            set
            {
                if ((this._VendorDetailsID != value))
                {
                    this.OnVendorDetailsIDChanging();
                    this.SendPropertyChanging("VendorDetailsID");
                    this._VendorDetailsID = value;
                    this.SendPropertyChanged("VendorDetailsID");
                    this.OnVendorDetailsIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the vendorid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "VendorID")]
        [XmlElementAttribute(ElementName = "VendorID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("VendorID", DbType = "int", Length = 4, IsNullable = false)]
        public int VendorID
        {
            get
            {
                return this._VendorID;
            }
            set
            {
                if ((this._VendorID != value))
                {
                    this.OnVendorIDChanging();
                    this.SendPropertyChanging("VendorID");
                    this._VendorID = value;
                    this.SendPropertyChanged("VendorID");
                    this.OnVendorIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PaymentDate", DbType = "datetime", Length = 8, IsNullable = true)]
        public System.Nullable<System.DateTime> PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this.OnPaymentDateChanging();
                    this.SendPropertyChanging("PaymentDate");
                    this._PaymentDate = value;
                    this.SendPropertyChanged("PaymentDate");
                    this.OnPaymentDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the invoicenumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "InvoiceNumber")]
        [XmlElementAttribute(ElementName = "InvoiceNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("InvoiceNumber", DbType = "varchar", Length = 50, IsNullable = true)]
        public string InvoiceNumber
        {
            get
            {
                return this._InvoiceNumber;
            }
            set
            {
                if ((this._InvoiceNumber != value))
                {
                    this.OnInvoiceNumberChanging();
                    this.SendPropertyChanging("InvoiceNumber");
                    this._InvoiceNumber = value;
                    this.SendPropertyChanged("InvoiceNumber");
                    this.OnInvoiceNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the ordernumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "OrderNumber")]
        [XmlElementAttribute(ElementName = "OrderNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("OrderNumber", DbType = "varchar", Length = 50, IsNullable = true)]
        public string OrderNumber
        {
            get
            {
                return this._OrderNumber;
            }
            set
            {
                if ((this._OrderNumber != value))
                {
                    this.OnOrderNumberChanging();
                    this.SendPropertyChanging("OrderNumber");
                    this._OrderNumber = value;
                    this.SendPropertyChanged("OrderNumber");
                    this.OnOrderNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the reference property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Reference")]
        [XmlElementAttribute(ElementName = "Reference", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Reference", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Reference
        {
            get
            {
                return this._Reference;
            }
            set
            {
                if ((this._Reference != value))
                {
                    this.OnReferenceChanging();
                    this.SendPropertyChanging("Reference");
                    this._Reference = value;
                    this.SendPropertyChanged("Reference");
                    this.OnReferenceChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Amount", DbType = "money", Length = 8, IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this.OnAmountChanging();
                    this.SendPropertyChanging("Amount");
                    this._Amount = value;
                    this.SendPropertyChanged("Amount");
                    this.OnAmountChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gst property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GST")]
        [XmlElementAttribute(ElementName = "GST", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("GST", DbType = "money", Length = 8, IsNullable = false)]
        public decimal GST
        {
            get
            {
                return this._GST;
            }
            set
            {
                if ((this._GST != value))
                {
                    this.OnGSTChanging();
                    this.SendPropertyChanging("GST");
                    this._GST = value;
                    this.SendPropertyChanged("GST");
                    this.OnGSTChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 100, IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 300, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the purchasetype property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PurchaseType")]
        [XmlElementAttribute(ElementName = "PurchaseType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("PurchaseType", DbType = "varchar", Length = 30, IsNullable = false)]
        public string PurchaseType
        {
            get
            {
                return this._PurchaseType;
            }
            set
            {
                if ((this._PurchaseType != value))
                {
                    this.OnPurchaseTypeChanging();
                    this.SendPropertyChanging("PurchaseType");
                    this._PurchaseType = value;
                    this.SendPropertyChanged("PurchaseType");
                    this.OnPurchaseTypeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the expensetype property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ExpenseType")]
        [XmlElementAttribute(ElementName = "ExpenseType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("ExpenseType", DbType = "varchar", Length = 100, IsNullable = false)]
        public string ExpenseType
        {
            get
            {
                return this._ExpenseType;
            }
            set
            {
                if ((this._ExpenseType != value))
                {
                    this.OnExpenseTypeChanging();
                    this.SendPropertyChanging("ExpenseType");
                    this._ExpenseType = value;
                    this.SendPropertyChanged("ExpenseType");
                    this.OnExpenseTypeChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new vendordetails data entity.
        /// </summary>
        /// <param name="vendorDetailsID">Initial value of VendorDetailsID.</param>
        /// <param name="vendorID">Initial value of VendorID.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <param name="gST">Initial value of GST.</param>
        /// <param name="purchaseType">Initial value of PurchaseType.</param>
        /// <param name="expenseType">Initial value of ExpenseType.</param>
        /// <returns>The Data.VendorDetails entity.</returns>
        public static Data.VendorDetails CreateVendorDetails(int vendorDetailsID, int vendorID, decimal amount, decimal gST, string purchaseType, string expenseType)
        {
            Data.VendorDetails vendorDetails = new Data.VendorDetails();
            vendorDetails.VendorDetailsID = vendorDetailsID;
            vendorDetails.VendorID = vendorID;
            vendorDetails.Amount = amount;
            vendorDetails.GST = gST;
            vendorDetails.PurchaseType = purchaseType;
            vendorDetails.ExpenseType = expenseType;
            return vendorDetails;
        }
    }
    #endregion
    
    #region DataMember Data Entity Type
    /// <summary>
    /// The datamember data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataMember", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataMember")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataMember : DataBase
    {
        
        private int _DataMemberID;
        
        private string _Name;
        
        private string _Description;
        
        private int _DataMemberTableID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataMemberID column data entity changed.
        /// </summary>
		partial void OnDataMemberIDChanged();

        /// <summary>
        /// On DataMemberID column data entity changing.
        /// </summary>
		partial void OnDataMemberIDChanging();

        /// <summary>
        /// On Name column data entity changed.
        /// </summary>
		partial void OnNameChanged();

        /// <summary>
        /// On Name column data entity changing.
        /// </summary>
		partial void OnNameChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

        /// <summary>
        /// On DataMemberTableID column data entity changed.
        /// </summary>
		partial void OnDataMemberTableIDChanged();

        /// <summary>
        /// On DataMemberTableID column data entity changing.
        /// </summary>
		partial void OnDataMemberTableIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataMember()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datamemberid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataMemberID")]
        [XmlElementAttribute(ElementName = "DataMemberID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataMemberID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int DataMemberID
        {
            get
            {
                return this._DataMemberID;
            }
            set
            {
                if ((this._DataMemberID != value))
                {
                    this.OnDataMemberIDChanging();
                    this.SendPropertyChanging("DataMemberID");
                    this._DataMemberID = value;
                    this.SendPropertyChanged("DataMemberID");
                    this.OnDataMemberIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the name property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Name")]
        [XmlElementAttribute(ElementName = "Name", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Name", DbType = "varchar", Length = 50, IsNullable = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging();
                    this.SendPropertyChanging("Name");
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 500, IsNullable = false)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the datamembertableid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataMemberTableID")]
        [XmlElementAttribute(ElementName = "DataMemberTableID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataMemberTableID", DbType = "int", Length = 4, IsNullable = false)]
        public int DataMemberTableID
        {
            get
            {
                return this._DataMemberTableID;
            }
            set
            {
                if ((this._DataMemberTableID != value))
                {
                    this.OnDataMemberTableIDChanging();
                    this.SendPropertyChanging("DataMemberTableID");
                    this._DataMemberTableID = value;
                    this.SendPropertyChanged("DataMemberTableID");
                    this.OnDataMemberTableIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datamember data entity.
        /// </summary>
        /// <param name="dataMemberID">Initial value of DataMemberID.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="dataMemberTableID">Initial value of DataMemberTableID.</param>
        /// <returns>The Data.DataMember entity.</returns>
        public static Data.DataMember CreateDataMember(int dataMemberID, string name, string description, int dataMemberTableID)
        {
            Data.DataMember dataMember = new Data.DataMember();
            dataMember.DataMemberID = dataMemberID;
            dataMember.Name = name;
            dataMember.Description = description;
            dataMember.DataMemberTableID = dataMemberTableID;
            return dataMember;
        }
    }
    #endregion
    
    #region Companies Data Entity Type
    /// <summary>
    /// The companies data object class.
    /// </summary>
    [DataContractAttribute(Name = "Companies", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Companies")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Companies : DataBase
    {
        
        private int _CompanyID;
        
        private string _CompanyName;
        
        private string _Firstname;
        
        private string _Surname;
        
        private string _Address;
        
        private string _Suburb;
        
        private string _State;
        
        private string _Postcode;
        
        private string _PhoneNumber;
        
        private string _FaxNumber;
        
        private string _MobileNumber;
        
        private string _EmailAddress;
        
        private string _WebSite;
        
        private string _ABN;
        
        private string _TFN;
        
        private string _PostalAddress;
        
        private string _PostalSuburb;
        
        private string _PostalState;
        
        private string _PostalPostcode;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On CompanyID column data entity changed.
        /// </summary>
		partial void OnCompanyIDChanged();

        /// <summary>
        /// On CompanyID column data entity changing.
        /// </summary>
		partial void OnCompanyIDChanging();

        /// <summary>
        /// On CompanyName column data entity changed.
        /// </summary>
		partial void OnCompanyNameChanged();

        /// <summary>
        /// On CompanyName column data entity changing.
        /// </summary>
		partial void OnCompanyNameChanging();

        /// <summary>
        /// On Firstname column data entity changed.
        /// </summary>
		partial void OnFirstnameChanged();

        /// <summary>
        /// On Firstname column data entity changing.
        /// </summary>
		partial void OnFirstnameChanging();

        /// <summary>
        /// On Surname column data entity changed.
        /// </summary>
		partial void OnSurnameChanged();

        /// <summary>
        /// On Surname column data entity changing.
        /// </summary>
		partial void OnSurnameChanging();

        /// <summary>
        /// On Address column data entity changed.
        /// </summary>
		partial void OnAddressChanged();

        /// <summary>
        /// On Address column data entity changing.
        /// </summary>
		partial void OnAddressChanging();

        /// <summary>
        /// On Suburb column data entity changed.
        /// </summary>
		partial void OnSuburbChanged();

        /// <summary>
        /// On Suburb column data entity changing.
        /// </summary>
		partial void OnSuburbChanging();

        /// <summary>
        /// On State column data entity changed.
        /// </summary>
		partial void OnStateChanged();

        /// <summary>
        /// On State column data entity changing.
        /// </summary>
		partial void OnStateChanging();

        /// <summary>
        /// On Postcode column data entity changed.
        /// </summary>
		partial void OnPostcodeChanged();

        /// <summary>
        /// On Postcode column data entity changing.
        /// </summary>
		partial void OnPostcodeChanging();

        /// <summary>
        /// On PhoneNumber column data entity changed.
        /// </summary>
		partial void OnPhoneNumberChanged();

        /// <summary>
        /// On PhoneNumber column data entity changing.
        /// </summary>
		partial void OnPhoneNumberChanging();

        /// <summary>
        /// On FaxNumber column data entity changed.
        /// </summary>
		partial void OnFaxNumberChanged();

        /// <summary>
        /// On FaxNumber column data entity changing.
        /// </summary>
		partial void OnFaxNumberChanging();

        /// <summary>
        /// On MobileNumber column data entity changed.
        /// </summary>
		partial void OnMobileNumberChanged();

        /// <summary>
        /// On MobileNumber column data entity changing.
        /// </summary>
		partial void OnMobileNumberChanging();

        /// <summary>
        /// On EmailAddress column data entity changed.
        /// </summary>
		partial void OnEmailAddressChanged();

        /// <summary>
        /// On EmailAddress column data entity changing.
        /// </summary>
		partial void OnEmailAddressChanging();

        /// <summary>
        /// On WebSite column data entity changed.
        /// </summary>
		partial void OnWebSiteChanged();

        /// <summary>
        /// On WebSite column data entity changing.
        /// </summary>
		partial void OnWebSiteChanging();

        /// <summary>
        /// On ABN column data entity changed.
        /// </summary>
		partial void OnABNChanged();

        /// <summary>
        /// On ABN column data entity changing.
        /// </summary>
		partial void OnABNChanging();

        /// <summary>
        /// On TFN column data entity changed.
        /// </summary>
		partial void OnTFNChanged();

        /// <summary>
        /// On TFN column data entity changing.
        /// </summary>
		partial void OnTFNChanging();

        /// <summary>
        /// On PostalAddress column data entity changed.
        /// </summary>
		partial void OnPostalAddressChanged();

        /// <summary>
        /// On PostalAddress column data entity changing.
        /// </summary>
		partial void OnPostalAddressChanging();

        /// <summary>
        /// On PostalSuburb column data entity changed.
        /// </summary>
		partial void OnPostalSuburbChanged();

        /// <summary>
        /// On PostalSuburb column data entity changing.
        /// </summary>
		partial void OnPostalSuburbChanging();

        /// <summary>
        /// On PostalState column data entity changed.
        /// </summary>
		partial void OnPostalStateChanged();

        /// <summary>
        /// On PostalState column data entity changing.
        /// </summary>
		partial void OnPostalStateChanging();

        /// <summary>
        /// On PostalPostcode column data entity changed.
        /// </summary>
		partial void OnPostalPostcodeChanged();

        /// <summary>
        /// On PostalPostcode column data entity changing.
        /// </summary>
		partial void OnPostalPostcodeChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Companies()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the companyid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CompanyID")]
        [XmlElementAttribute(ElementName = "CompanyID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CompanyID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int CompanyID
        {
            get
            {
                return this._CompanyID;
            }
            set
            {
                if ((this._CompanyID != value))
                {
                    this.OnCompanyIDChanging();
                    this.SendPropertyChanging("CompanyID");
                    this._CompanyID = value;
                    this.SendPropertyChanged("CompanyID");
                    this.OnCompanyIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companyname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CompanyName")]
        [XmlElementAttribute(ElementName = "CompanyName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CompanyName", DbType = "varchar", Length = 200, IsNullable = false)]
        public string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                if ((this._CompanyName != value))
                {
                    this.OnCompanyNameChanging();
                    this.SendPropertyChanging("CompanyName");
                    this._CompanyName = value;
                    this.SendPropertyChanged("CompanyName");
                    this.OnCompanyNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Firstname")]
        [XmlElementAttribute(ElementName = "Firstname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Firstname", DbType = "varchar", Length = 40, IsNullable = true)]
        public string Firstname
        {
            get
            {
                return this._Firstname;
            }
            set
            {
                if ((this._Firstname != value))
                {
                    this.OnFirstnameChanging();
                    this.SendPropertyChanging("Firstname");
                    this._Firstname = value;
                    this.SendPropertyChanged("Firstname");
                    this.OnFirstnameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Surname")]
        [XmlElementAttribute(ElementName = "Surname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Surname", DbType = "varchar", Length = 40, IsNullable = true)]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if ((this._Surname != value))
                {
                    this.OnSurnameChanging();
                    this.SendPropertyChanging("Surname");
                    this._Surname = value;
                    this.SendPropertyChanged("Surname");
                    this.OnSurnameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Address")]
        [XmlElementAttribute(ElementName = "Address", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Address", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this.OnAddressChanging();
                    this.SendPropertyChanging("Address");
                    this._Address = value;
                    this.SendPropertyChanged("Address");
                    this.OnAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suburb property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Suburb")]
        [XmlElementAttribute(ElementName = "Suburb", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Suburb", DbType = "varchar", Length = 30, IsNullable = true)]
        public string Suburb
        {
            get
            {
                return this._Suburb;
            }
            set
            {
                if ((this._Suburb != value))
                {
                    this.OnSuburbChanging();
                    this.SendPropertyChanging("Suburb");
                    this._Suburb = value;
                    this.SendPropertyChanged("Suburb");
                    this.OnSuburbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the state property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "State")]
        [XmlElementAttribute(ElementName = "State", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("State", DbType = "varchar", Length = 5, IsNullable = true)]
        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                if ((this._State != value))
                {
                    this.OnStateChanging();
                    this.SendPropertyChanging("State");
                    this._State = value;
                    this.SendPropertyChanged("State");
                    this.OnStateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postcode property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Postcode")]
        [XmlElementAttribute(ElementName = "Postcode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Postcode", DbType = "varchar", Length = 5, IsNullable = true)]
        public string Postcode
        {
            get
            {
                return this._Postcode;
            }
            set
            {
                if ((this._Postcode != value))
                {
                    this.OnPostcodeChanging();
                    this.SendPropertyChanging("Postcode");
                    this._Postcode = value;
                    this.SendPropertyChanged("Postcode");
                    this.OnPostcodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PhoneNumber", DbType = "varchar", Length = 14, IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this.OnPhoneNumberChanging();
                    this.SendPropertyChanging("PhoneNumber");
                    this._PhoneNumber = value;
                    this.SendPropertyChanged("PhoneNumber");
                    this.OnPhoneNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("FaxNumber", DbType = "varchar", Length = 14, IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this.OnFaxNumberChanging();
                    this.SendPropertyChanging("FaxNumber");
                    this._FaxNumber = value;
                    this.SendPropertyChanged("FaxNumber");
                    this.OnFaxNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the mobilenumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "MobileNumber")]
        [XmlElementAttribute(ElementName = "MobileNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("MobileNumber", DbType = "varchar", Length = 12, IsNullable = true)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging();
                    this.SendPropertyChanging("MobileNumber");
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("EmailAddress", DbType = "varchar", Length = 100, IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this.OnEmailAddressChanging();
                    this.SendPropertyChanging("EmailAddress");
                    this._EmailAddress = value;
                    this.SendPropertyChanged("EmailAddress");
                    this.OnEmailAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("WebSite", DbType = "varchar", Length = 100, IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this.OnWebSiteChanging();
                    this.SendPropertyChanging("WebSite");
                    this._WebSite = value;
                    this.SendPropertyChanged("WebSite");
                    this.OnWebSiteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the abn property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ABN")]
        [XmlElementAttribute(ElementName = "ABN", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("ABN", DbType = "varchar", Length = 15, IsNullable = true)]
        public string ABN
        {
            get
            {
                return this._ABN;
            }
            set
            {
                if ((this._ABN != value))
                {
                    this.OnABNChanging();
                    this.SendPropertyChanging("ABN");
                    this._ABN = value;
                    this.SendPropertyChanged("ABN");
                    this.OnABNChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tfn property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TFN")]
        [XmlElementAttribute(ElementName = "TFN", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("TFN", DbType = "varchar", Length = 16, IsNullable = true)]
        public string TFN
        {
            get
            {
                return this._TFN;
            }
            set
            {
                if ((this._TFN != value))
                {
                    this.OnTFNChanging();
                    this.SendPropertyChanging("TFN");
                    this._TFN = value;
                    this.SendPropertyChanged("TFN");
                    this.OnTFNChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postaladdress property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostalAddress")]
        [XmlElementAttribute(ElementName = "PostalAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostalAddress", DbType = "varchar", Length = 50, IsNullable = true)]
        public string PostalAddress
        {
            get
            {
                return this._PostalAddress;
            }
            set
            {
                if ((this._PostalAddress != value))
                {
                    this.OnPostalAddressChanging();
                    this.SendPropertyChanging("PostalAddress");
                    this._PostalAddress = value;
                    this.SendPropertyChanged("PostalAddress");
                    this.OnPostalAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalsuburb property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostalSuburb")]
        [XmlElementAttribute(ElementName = "PostalSuburb", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostalSuburb", DbType = "varchar", Length = 30, IsNullable = true)]
        public string PostalSuburb
        {
            get
            {
                return this._PostalSuburb;
            }
            set
            {
                if ((this._PostalSuburb != value))
                {
                    this.OnPostalSuburbChanging();
                    this.SendPropertyChanging("PostalSuburb");
                    this._PostalSuburb = value;
                    this.SendPropertyChanged("PostalSuburb");
                    this.OnPostalSuburbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalstate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostalState")]
        [XmlElementAttribute(ElementName = "PostalState", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostalState", DbType = "varchar", Length = 5, IsNullable = true)]
        public string PostalState
        {
            get
            {
                return this._PostalState;
            }
            set
            {
                if ((this._PostalState != value))
                {
                    this.OnPostalStateChanging();
                    this.SendPropertyChanging("PostalState");
                    this._PostalState = value;
                    this.SendPropertyChanged("PostalState");
                    this.OnPostalStateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalpostcode property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostalPostcode")]
        [XmlElementAttribute(ElementName = "PostalPostcode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostalPostcode", DbType = "varchar", Length = 5, IsNullable = true)]
        public string PostalPostcode
        {
            get
            {
                return this._PostalPostcode;
            }
            set
            {
                if ((this._PostalPostcode != value))
                {
                    this.OnPostalPostcodeChanging();
                    this.SendPropertyChanging("PostalPostcode");
                    this._PostalPostcode = value;
                    this.SendPropertyChanged("PostalPostcode");
                    this.OnPostalPostcodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new companies data entity.
        /// </summary>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="companyName">Initial value of CompanyName.</param>
        /// <returns>The Data.Companies entity.</returns>
        public static Data.Companies CreateCompanies(int companyID, string companyName)
        {
            Data.Companies companies = new Data.Companies();
            companies.CompanyID = companyID;
            companies.CompanyName = companyName;
            return companies;
        }
    }
    #endregion
    
    #region Customers Data Entity Type
    /// <summary>
    /// The customers data object class.
    /// </summary>
    [DataContractAttribute(Name = "Customers", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Customers")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Customers : DataBase
    {
        
        private int _CustomerID;
        
        private string _CompanyName;
        
        private string _Firstname;
        
        private string _Surname;
        
        private string _Address;
        
        private string _Suburb;
        
        private string _State;
        
        private string _PostCode;
        
        private string _PhoneNumber;
        
        private string _FaxNumber;
        
        private string _MobileNumber;
        
        private string _EmailAddress;
        
        private string _WebSite;
        
        private string _ABN;
        
        private string _PostalAddress;
        
        private string _PostalSuburb;
        
        private string _PostalState;
        
        private string _PostalPostCode;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On CustomerID column data entity changed.
        /// </summary>
		partial void OnCustomerIDChanged();

        /// <summary>
        /// On CustomerID column data entity changing.
        /// </summary>
		partial void OnCustomerIDChanging();

        /// <summary>
        /// On CompanyName column data entity changed.
        /// </summary>
		partial void OnCompanyNameChanged();

        /// <summary>
        /// On CompanyName column data entity changing.
        /// </summary>
		partial void OnCompanyNameChanging();

        /// <summary>
        /// On Firstname column data entity changed.
        /// </summary>
		partial void OnFirstnameChanged();

        /// <summary>
        /// On Firstname column data entity changing.
        /// </summary>
		partial void OnFirstnameChanging();

        /// <summary>
        /// On Surname column data entity changed.
        /// </summary>
		partial void OnSurnameChanged();

        /// <summary>
        /// On Surname column data entity changing.
        /// </summary>
		partial void OnSurnameChanging();

        /// <summary>
        /// On Address column data entity changed.
        /// </summary>
		partial void OnAddressChanged();

        /// <summary>
        /// On Address column data entity changing.
        /// </summary>
		partial void OnAddressChanging();

        /// <summary>
        /// On Suburb column data entity changed.
        /// </summary>
		partial void OnSuburbChanged();

        /// <summary>
        /// On Suburb column data entity changing.
        /// </summary>
		partial void OnSuburbChanging();

        /// <summary>
        /// On State column data entity changed.
        /// </summary>
		partial void OnStateChanged();

        /// <summary>
        /// On State column data entity changing.
        /// </summary>
		partial void OnStateChanging();

        /// <summary>
        /// On PostCode column data entity changed.
        /// </summary>
		partial void OnPostCodeChanged();

        /// <summary>
        /// On PostCode column data entity changing.
        /// </summary>
		partial void OnPostCodeChanging();

        /// <summary>
        /// On PhoneNumber column data entity changed.
        /// </summary>
		partial void OnPhoneNumberChanged();

        /// <summary>
        /// On PhoneNumber column data entity changing.
        /// </summary>
		partial void OnPhoneNumberChanging();

        /// <summary>
        /// On FaxNumber column data entity changed.
        /// </summary>
		partial void OnFaxNumberChanged();

        /// <summary>
        /// On FaxNumber column data entity changing.
        /// </summary>
		partial void OnFaxNumberChanging();

        /// <summary>
        /// On MobileNumber column data entity changed.
        /// </summary>
		partial void OnMobileNumberChanged();

        /// <summary>
        /// On MobileNumber column data entity changing.
        /// </summary>
		partial void OnMobileNumberChanging();

        /// <summary>
        /// On EmailAddress column data entity changed.
        /// </summary>
		partial void OnEmailAddressChanged();

        /// <summary>
        /// On EmailAddress column data entity changing.
        /// </summary>
		partial void OnEmailAddressChanging();

        /// <summary>
        /// On WebSite column data entity changed.
        /// </summary>
		partial void OnWebSiteChanged();

        /// <summary>
        /// On WebSite column data entity changing.
        /// </summary>
		partial void OnWebSiteChanging();

        /// <summary>
        /// On ABN column data entity changed.
        /// </summary>
		partial void OnABNChanged();

        /// <summary>
        /// On ABN column data entity changing.
        /// </summary>
		partial void OnABNChanging();

        /// <summary>
        /// On PostalAddress column data entity changed.
        /// </summary>
		partial void OnPostalAddressChanged();

        /// <summary>
        /// On PostalAddress column data entity changing.
        /// </summary>
		partial void OnPostalAddressChanging();

        /// <summary>
        /// On PostalSuburb column data entity changed.
        /// </summary>
		partial void OnPostalSuburbChanged();

        /// <summary>
        /// On PostalSuburb column data entity changing.
        /// </summary>
		partial void OnPostalSuburbChanging();

        /// <summary>
        /// On PostalState column data entity changed.
        /// </summary>
		partial void OnPostalStateChanged();

        /// <summary>
        /// On PostalState column data entity changing.
        /// </summary>
		partial void OnPostalStateChanging();

        /// <summary>
        /// On PostalPostCode column data entity changed.
        /// </summary>
		partial void OnPostalPostCodeChanged();

        /// <summary>
        /// On PostalPostCode column data entity changing.
        /// </summary>
		partial void OnPostalPostCodeChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Customers()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the customerid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CustomerID")]
        [XmlElementAttribute(ElementName = "CustomerID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CustomerID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                if ((this._CustomerID != value))
                {
                    this.OnCustomerIDChanging();
                    this.SendPropertyChanging("CustomerID");
                    this._CustomerID = value;
                    this.SendPropertyChanged("CustomerID");
                    this.OnCustomerIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companyname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CompanyName")]
        [XmlElementAttribute(ElementName = "CompanyName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CompanyName", DbType = "varchar", Length = 200, IsNullable = false)]
        public string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                if ((this._CompanyName != value))
                {
                    this.OnCompanyNameChanging();
                    this.SendPropertyChanging("CompanyName");
                    this._CompanyName = value;
                    this.SendPropertyChanged("CompanyName");
                    this.OnCompanyNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Firstname")]
        [XmlElementAttribute(ElementName = "Firstname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Firstname", DbType = "varchar", Length = 40, IsNullable = true)]
        public string Firstname
        {
            get
            {
                return this._Firstname;
            }
            set
            {
                if ((this._Firstname != value))
                {
                    this.OnFirstnameChanging();
                    this.SendPropertyChanging("Firstname");
                    this._Firstname = value;
                    this.SendPropertyChanged("Firstname");
                    this.OnFirstnameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Surname")]
        [XmlElementAttribute(ElementName = "Surname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Surname", DbType = "varchar", Length = 40, IsNullable = true)]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if ((this._Surname != value))
                {
                    this.OnSurnameChanging();
                    this.SendPropertyChanging("Surname");
                    this._Surname = value;
                    this.SendPropertyChanged("Surname");
                    this.OnSurnameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Address")]
        [XmlElementAttribute(ElementName = "Address", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Address", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this.OnAddressChanging();
                    this.SendPropertyChanging("Address");
                    this._Address = value;
                    this.SendPropertyChanged("Address");
                    this.OnAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suburb property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Suburb")]
        [XmlElementAttribute(ElementName = "Suburb", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Suburb", DbType = "varchar", Length = 30, IsNullable = true)]
        public string Suburb
        {
            get
            {
                return this._Suburb;
            }
            set
            {
                if ((this._Suburb != value))
                {
                    this.OnSuburbChanging();
                    this.SendPropertyChanging("Suburb");
                    this._Suburb = value;
                    this.SendPropertyChanged("Suburb");
                    this.OnSuburbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the state property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "State")]
        [XmlElementAttribute(ElementName = "State", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("State", DbType = "varchar", Length = 5, IsNullable = true)]
        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                if ((this._State != value))
                {
                    this.OnStateChanging();
                    this.SendPropertyChanging("State");
                    this._State = value;
                    this.SendPropertyChanged("State");
                    this.OnStateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postcode property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostCode")]
        [XmlElementAttribute(ElementName = "PostCode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostCode", DbType = "varchar", Length = 5, IsNullable = true)]
        public string PostCode
        {
            get
            {
                return this._PostCode;
            }
            set
            {
                if ((this._PostCode != value))
                {
                    this.OnPostCodeChanging();
                    this.SendPropertyChanging("PostCode");
                    this._PostCode = value;
                    this.SendPropertyChanged("PostCode");
                    this.OnPostCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PhoneNumber", DbType = "varchar", Length = 14, IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this.OnPhoneNumberChanging();
                    this.SendPropertyChanging("PhoneNumber");
                    this._PhoneNumber = value;
                    this.SendPropertyChanged("PhoneNumber");
                    this.OnPhoneNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("FaxNumber", DbType = "varchar", Length = 14, IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this.OnFaxNumberChanging();
                    this.SendPropertyChanging("FaxNumber");
                    this._FaxNumber = value;
                    this.SendPropertyChanged("FaxNumber");
                    this.OnFaxNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the mobilenumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "MobileNumber")]
        [XmlElementAttribute(ElementName = "MobileNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("MobileNumber", DbType = "varchar", Length = 12, IsNullable = true)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging();
                    this.SendPropertyChanging("MobileNumber");
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("EmailAddress", DbType = "varchar", Length = 100, IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this.OnEmailAddressChanging();
                    this.SendPropertyChanging("EmailAddress");
                    this._EmailAddress = value;
                    this.SendPropertyChanged("EmailAddress");
                    this.OnEmailAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("WebSite", DbType = "varchar", Length = 100, IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this.OnWebSiteChanging();
                    this.SendPropertyChanging("WebSite");
                    this._WebSite = value;
                    this.SendPropertyChanged("WebSite");
                    this.OnWebSiteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the abn property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ABN")]
        [XmlElementAttribute(ElementName = "ABN", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("ABN", DbType = "varchar", Length = 15, IsNullable = true)]
        public string ABN
        {
            get
            {
                return this._ABN;
            }
            set
            {
                if ((this._ABN != value))
                {
                    this.OnABNChanging();
                    this.SendPropertyChanging("ABN");
                    this._ABN = value;
                    this.SendPropertyChanged("ABN");
                    this.OnABNChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postaladdress property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostalAddress")]
        [XmlElementAttribute(ElementName = "PostalAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostalAddress", DbType = "varchar", Length = 50, IsNullable = true)]
        public string PostalAddress
        {
            get
            {
                return this._PostalAddress;
            }
            set
            {
                if ((this._PostalAddress != value))
                {
                    this.OnPostalAddressChanging();
                    this.SendPropertyChanging("PostalAddress");
                    this._PostalAddress = value;
                    this.SendPropertyChanged("PostalAddress");
                    this.OnPostalAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalsuburb property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostalSuburb")]
        [XmlElementAttribute(ElementName = "PostalSuburb", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostalSuburb", DbType = "varchar", Length = 30, IsNullable = true)]
        public string PostalSuburb
        {
            get
            {
                return this._PostalSuburb;
            }
            set
            {
                if ((this._PostalSuburb != value))
                {
                    this.OnPostalSuburbChanging();
                    this.SendPropertyChanging("PostalSuburb");
                    this._PostalSuburb = value;
                    this.SendPropertyChanged("PostalSuburb");
                    this.OnPostalSuburbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalstate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostalState")]
        [XmlElementAttribute(ElementName = "PostalState", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostalState", DbType = "varchar", Length = 5, IsNullable = true)]
        public string PostalState
        {
            get
            {
                return this._PostalState;
            }
            set
            {
                if ((this._PostalState != value))
                {
                    this.OnPostalStateChanging();
                    this.SendPropertyChanging("PostalState");
                    this._PostalState = value;
                    this.SendPropertyChanged("PostalState");
                    this.OnPostalStateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalpostcode property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostalPostCode")]
        [XmlElementAttribute(ElementName = "PostalPostCode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostalPostCode", DbType = "varchar", Length = 5, IsNullable = true)]
        public string PostalPostCode
        {
            get
            {
                return this._PostalPostCode;
            }
            set
            {
                if ((this._PostalPostCode != value))
                {
                    this.OnPostalPostCodeChanging();
                    this.SendPropertyChanging("PostalPostCode");
                    this._PostalPostCode = value;
                    this.SendPropertyChanged("PostalPostCode");
                    this.OnPostalPostCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new customers data entity.
        /// </summary>
        /// <param name="customerID">Initial value of CustomerID.</param>
        /// <param name="companyName">Initial value of CompanyName.</param>
        /// <returns>The Data.Customers entity.</returns>
        public static Data.Customers CreateCustomers(int customerID, string companyName)
        {
            Data.Customers customers = new Data.Customers();
            customers.CustomerID = customerID;
            customers.CompanyName = companyName;
            return customers;
        }
    }
    #endregion
    
    #region UserType Data Entity Type
    /// <summary>
    /// The usertype data object class.
    /// </summary>
    [DataContractAttribute(Name = "UserType", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.UserType")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class UserType : DataBase
    {
        
        private long _UserTypeID;
        
        private string _Name;
        
        private string _Description;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On UserTypeID column data entity changed.
        /// </summary>
		partial void OnUserTypeIDChanged();

        /// <summary>
        /// On UserTypeID column data entity changing.
        /// </summary>
		partial void OnUserTypeIDChanging();

        /// <summary>
        /// On Name column data entity changed.
        /// </summary>
		partial void OnNameChanged();

        /// <summary>
        /// On Name column data entity changing.
        /// </summary>
		partial void OnNameChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public UserType()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the usertypeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "UserTypeID")]
        [XmlElementAttribute(ElementName = "UserTypeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("UserTypeID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long UserTypeID
        {
            get
            {
                return this._UserTypeID;
            }
            set
            {
                if ((this._UserTypeID != value))
                {
                    this.OnUserTypeIDChanging();
                    this.SendPropertyChanging("UserTypeID");
                    this._UserTypeID = value;
                    this.SendPropertyChanged("UserTypeID");
                    this.OnUserTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the name property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Name")]
        [XmlElementAttribute(ElementName = "Name", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Name", DbType = "varchar", Length = 50, IsNullable = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging();
                    this.SendPropertyChanging("Name");
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = -1, IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new usertype data entity.
        /// </summary>
        /// <param name="userTypeID">Initial value of UserTypeID.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <returns>The Data.UserType entity.</returns>
        public static Data.UserType CreateUserType(long userTypeID, string name)
        {
            Data.UserType userType = new Data.UserType();
            userType.UserTypeID = userTypeID;
            userType.Name = name;
            return userType;
        }
    }
    #endregion
    
    #region Employees Data Entity Type
    /// <summary>
    /// The employees data object class.
    /// </summary>
    [DataContractAttribute(Name = "Employees", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Employees")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Employees : DataBase
    {
        
        private int _EmployeeID;
        
        private string _Firstname;
        
        private string _Surname;
        
        private string _DOB;
        
        private string _Address;
        
        private string _Suburb;
        
        private string _State;
        
        private string _Postcode;
        
        private string _HomeNumber;
        
        private string _FaxNumber;
        
        private string _MobileNumber;
        
        private string _EmailAddress;
        
        private string _Comments;
        
        private string _TFN;
        
        private decimal _AnnualWage;
        
        private double _SuperRate;
        
        private double _TaxRate;
        
        private double _BaseHours;
        
        private double _WageInclude;
        
        private double _BCoefficient;
        
        private string _PayInterval;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On EmployeeID column data entity changed.
        /// </summary>
		partial void OnEmployeeIDChanged();

        /// <summary>
        /// On EmployeeID column data entity changing.
        /// </summary>
		partial void OnEmployeeIDChanging();

        /// <summary>
        /// On Firstname column data entity changed.
        /// </summary>
		partial void OnFirstnameChanged();

        /// <summary>
        /// On Firstname column data entity changing.
        /// </summary>
		partial void OnFirstnameChanging();

        /// <summary>
        /// On Surname column data entity changed.
        /// </summary>
		partial void OnSurnameChanged();

        /// <summary>
        /// On Surname column data entity changing.
        /// </summary>
		partial void OnSurnameChanging();

        /// <summary>
        /// On DOB column data entity changed.
        /// </summary>
		partial void OnDOBChanged();

        /// <summary>
        /// On DOB column data entity changing.
        /// </summary>
		partial void OnDOBChanging();

        /// <summary>
        /// On Address column data entity changed.
        /// </summary>
		partial void OnAddressChanged();

        /// <summary>
        /// On Address column data entity changing.
        /// </summary>
		partial void OnAddressChanging();

        /// <summary>
        /// On Suburb column data entity changed.
        /// </summary>
		partial void OnSuburbChanged();

        /// <summary>
        /// On Suburb column data entity changing.
        /// </summary>
		partial void OnSuburbChanging();

        /// <summary>
        /// On State column data entity changed.
        /// </summary>
		partial void OnStateChanged();

        /// <summary>
        /// On State column data entity changing.
        /// </summary>
		partial void OnStateChanging();

        /// <summary>
        /// On Postcode column data entity changed.
        /// </summary>
		partial void OnPostcodeChanged();

        /// <summary>
        /// On Postcode column data entity changing.
        /// </summary>
		partial void OnPostcodeChanging();

        /// <summary>
        /// On HomeNumber column data entity changed.
        /// </summary>
		partial void OnHomeNumberChanged();

        /// <summary>
        /// On HomeNumber column data entity changing.
        /// </summary>
		partial void OnHomeNumberChanging();

        /// <summary>
        /// On FaxNumber column data entity changed.
        /// </summary>
		partial void OnFaxNumberChanged();

        /// <summary>
        /// On FaxNumber column data entity changing.
        /// </summary>
		partial void OnFaxNumberChanging();

        /// <summary>
        /// On MobileNumber column data entity changed.
        /// </summary>
		partial void OnMobileNumberChanged();

        /// <summary>
        /// On MobileNumber column data entity changing.
        /// </summary>
		partial void OnMobileNumberChanging();

        /// <summary>
        /// On EmailAddress column data entity changed.
        /// </summary>
		partial void OnEmailAddressChanged();

        /// <summary>
        /// On EmailAddress column data entity changing.
        /// </summary>
		partial void OnEmailAddressChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

        /// <summary>
        /// On TFN column data entity changed.
        /// </summary>
		partial void OnTFNChanged();

        /// <summary>
        /// On TFN column data entity changing.
        /// </summary>
		partial void OnTFNChanging();

        /// <summary>
        /// On AnnualWage column data entity changed.
        /// </summary>
		partial void OnAnnualWageChanged();

        /// <summary>
        /// On AnnualWage column data entity changing.
        /// </summary>
		partial void OnAnnualWageChanging();

        /// <summary>
        /// On SuperRate column data entity changed.
        /// </summary>
		partial void OnSuperRateChanged();

        /// <summary>
        /// On SuperRate column data entity changing.
        /// </summary>
		partial void OnSuperRateChanging();

        /// <summary>
        /// On TaxRate column data entity changed.
        /// </summary>
		partial void OnTaxRateChanged();

        /// <summary>
        /// On TaxRate column data entity changing.
        /// </summary>
		partial void OnTaxRateChanging();

        /// <summary>
        /// On BaseHours column data entity changed.
        /// </summary>
		partial void OnBaseHoursChanged();

        /// <summary>
        /// On BaseHours column data entity changing.
        /// </summary>
		partial void OnBaseHoursChanging();

        /// <summary>
        /// On WageInclude column data entity changed.
        /// </summary>
		partial void OnWageIncludeChanged();

        /// <summary>
        /// On WageInclude column data entity changing.
        /// </summary>
		partial void OnWageIncludeChanging();

        /// <summary>
        /// On BCoefficient column data entity changed.
        /// </summary>
		partial void OnBCoefficientChanged();

        /// <summary>
        /// On BCoefficient column data entity changing.
        /// </summary>
		partial void OnBCoefficientChanging();

        /// <summary>
        /// On PayInterval column data entity changed.
        /// </summary>
		partial void OnPayIntervalChanged();

        /// <summary>
        /// On PayInterval column data entity changing.
        /// </summary>
		partial void OnPayIntervalChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Employees()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("EmployeeID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this.OnEmployeeIDChanging();
                    this.SendPropertyChanging("EmployeeID");
                    this._EmployeeID = value;
                    this.SendPropertyChanged("EmployeeID");
                    this.OnEmployeeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Firstname")]
        [XmlElementAttribute(ElementName = "Firstname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Firstname", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Firstname
        {
            get
            {
                return this._Firstname;
            }
            set
            {
                if ((this._Firstname != value))
                {
                    this.OnFirstnameChanging();
                    this.SendPropertyChanging("Firstname");
                    this._Firstname = value;
                    this.SendPropertyChanged("Firstname");
                    this.OnFirstnameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Surname")]
        [XmlElementAttribute(ElementName = "Surname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Surname", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if ((this._Surname != value))
                {
                    this.OnSurnameChanging();
                    this.SendPropertyChanging("Surname");
                    this._Surname = value;
                    this.SendPropertyChanged("Surname");
                    this.OnSurnameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the dob property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DOB")]
        [XmlElementAttribute(ElementName = "DOB", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("DOB", DbType = "varchar", Length = 20, IsNullable = true)]
        public string DOB
        {
            get
            {
                return this._DOB;
            }
            set
            {
                if ((this._DOB != value))
                {
                    this.OnDOBChanging();
                    this.SendPropertyChanging("DOB");
                    this._DOB = value;
                    this.SendPropertyChanged("DOB");
                    this.OnDOBChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Address")]
        [XmlElementAttribute(ElementName = "Address", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Address", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this.OnAddressChanging();
                    this.SendPropertyChanging("Address");
                    this._Address = value;
                    this.SendPropertyChanged("Address");
                    this.OnAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suburb property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Suburb")]
        [XmlElementAttribute(ElementName = "Suburb", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Suburb", DbType = "varchar", Length = 30, IsNullable = true)]
        public string Suburb
        {
            get
            {
                return this._Suburb;
            }
            set
            {
                if ((this._Suburb != value))
                {
                    this.OnSuburbChanging();
                    this.SendPropertyChanging("Suburb");
                    this._Suburb = value;
                    this.SendPropertyChanged("Suburb");
                    this.OnSuburbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the state property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "State")]
        [XmlElementAttribute(ElementName = "State", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("State", DbType = "varchar", Length = 5, IsNullable = true)]
        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                if ((this._State != value))
                {
                    this.OnStateChanging();
                    this.SendPropertyChanging("State");
                    this._State = value;
                    this.SendPropertyChanged("State");
                    this.OnStateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postcode property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Postcode")]
        [XmlElementAttribute(ElementName = "Postcode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Postcode", DbType = "varchar", Length = 5, IsNullable = true)]
        public string Postcode
        {
            get
            {
                return this._Postcode;
            }
            set
            {
                if ((this._Postcode != value))
                {
                    this.OnPostcodeChanging();
                    this.SendPropertyChanging("Postcode");
                    this._Postcode = value;
                    this.SendPropertyChanged("Postcode");
                    this.OnPostcodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the homenumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "HomeNumber")]
        [XmlElementAttribute(ElementName = "HomeNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("HomeNumber", DbType = "varchar", Length = 14, IsNullable = true)]
        public string HomeNumber
        {
            get
            {
                return this._HomeNumber;
            }
            set
            {
                if ((this._HomeNumber != value))
                {
                    this.OnHomeNumberChanging();
                    this.SendPropertyChanging("HomeNumber");
                    this._HomeNumber = value;
                    this.SendPropertyChanged("HomeNumber");
                    this.OnHomeNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("FaxNumber", DbType = "varchar", Length = 14, IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this.OnFaxNumberChanging();
                    this.SendPropertyChanging("FaxNumber");
                    this._FaxNumber = value;
                    this.SendPropertyChanged("FaxNumber");
                    this.OnFaxNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the mobilenumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "MobileNumber")]
        [XmlElementAttribute(ElementName = "MobileNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("MobileNumber", DbType = "varchar", Length = 12, IsNullable = true)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging();
                    this.SendPropertyChanging("MobileNumber");
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("EmailAddress", DbType = "varchar", Length = 100, IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this.OnEmailAddressChanging();
                    this.SendPropertyChanging("EmailAddress");
                    this._EmailAddress = value;
                    this.SendPropertyChanged("EmailAddress");
                    this.OnEmailAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 300, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tfn property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TFN")]
        [XmlElementAttribute(ElementName = "TFN", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("TFN", DbType = "varchar", Length = 14, IsNullable = true)]
        public string TFN
        {
            get
            {
                return this._TFN;
            }
            set
            {
                if ((this._TFN != value))
                {
                    this.OnTFNChanging();
                    this.SendPropertyChanging("TFN");
                    this._TFN = value;
                    this.SendPropertyChanged("TFN");
                    this.OnTFNChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the annualwage property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AnnualWage")]
        [XmlElementAttribute(ElementName = "AnnualWage", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("AnnualWage", DbType = "money", Length = 8, IsNullable = false)]
        public decimal AnnualWage
        {
            get
            {
                return this._AnnualWage;
            }
            set
            {
                if ((this._AnnualWage != value))
                {
                    this.OnAnnualWageChanging();
                    this.SendPropertyChanging("AnnualWage");
                    this._AnnualWage = value;
                    this.SendPropertyChanged("AnnualWage");
                    this.OnAnnualWageChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the superrate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "SuperRate")]
        [XmlElementAttribute(ElementName = "SuperRate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("SuperRate", DbType = "float", Length = 8, IsNullable = false)]
        public double SuperRate
        {
            get
            {
                return this._SuperRate;
            }
            set
            {
                if ((this._SuperRate != value))
                {
                    this.OnSuperRateChanging();
                    this.SendPropertyChanging("SuperRate");
                    this._SuperRate = value;
                    this.SendPropertyChanged("SuperRate");
                    this.OnSuperRateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the taxrate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TaxRate")]
        [XmlElementAttribute(ElementName = "TaxRate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TaxRate", DbType = "float", Length = 8, IsNullable = false)]
        public double TaxRate
        {
            get
            {
                return this._TaxRate;
            }
            set
            {
                if ((this._TaxRate != value))
                {
                    this.OnTaxRateChanging();
                    this.SendPropertyChanging("TaxRate");
                    this._TaxRate = value;
                    this.SendPropertyChanged("TaxRate");
                    this.OnTaxRateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the basehours property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "BaseHours")]
        [XmlElementAttribute(ElementName = "BaseHours", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("BaseHours", DbType = "float", Length = 8, IsNullable = false)]
        public double BaseHours
        {
            get
            {
                return this._BaseHours;
            }
            set
            {
                if ((this._BaseHours != value))
                {
                    this.OnBaseHoursChanging();
                    this.SendPropertyChanging("BaseHours");
                    this._BaseHours = value;
                    this.SendPropertyChanged("BaseHours");
                    this.OnBaseHoursChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the wageinclude property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "WageInclude")]
        [XmlElementAttribute(ElementName = "WageInclude", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("WageInclude", DbType = "float", Length = 8, IsNullable = false)]
        public double WageInclude
        {
            get
            {
                return this._WageInclude;
            }
            set
            {
                if ((this._WageInclude != value))
                {
                    this.OnWageIncludeChanging();
                    this.SendPropertyChanging("WageInclude");
                    this._WageInclude = value;
                    this.SendPropertyChanged("WageInclude");
                    this.OnWageIncludeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bcoefficient property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "BCoefficient")]
        [XmlElementAttribute(ElementName = "BCoefficient", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("BCoefficient", DbType = "float", Length = 8, IsNullable = false)]
        public double BCoefficient
        {
            get
            {
                return this._BCoefficient;
            }
            set
            {
                if ((this._BCoefficient != value))
                {
                    this.OnBCoefficientChanging();
                    this.SendPropertyChanging("BCoefficient");
                    this._BCoefficient = value;
                    this.SendPropertyChanged("BCoefficient");
                    this.OnBCoefficientChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the payinterval property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PayInterval")]
        [XmlElementAttribute(ElementName = "PayInterval", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("PayInterval", DbType = "varchar", Length = 12, IsNullable = false)]
        public string PayInterval
        {
            get
            {
                return this._PayInterval;
            }
            set
            {
                if ((this._PayInterval != value))
                {
                    this.OnPayIntervalChanging();
                    this.SendPropertyChanging("PayInterval");
                    this._PayInterval = value;
                    this.SendPropertyChanged("PayInterval");
                    this.OnPayIntervalChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new employees data entity.
        /// </summary>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="annualWage">Initial value of AnnualWage.</param>
        /// <param name="superRate">Initial value of SuperRate.</param>
        /// <param name="taxRate">Initial value of TaxRate.</param>
        /// <param name="baseHours">Initial value of BaseHours.</param>
        /// <param name="wageInclude">Initial value of WageInclude.</param>
        /// <param name="bCoefficient">Initial value of BCoefficient.</param>
        /// <param name="payInterval">Initial value of PayInterval.</param>
        /// <returns>The Data.Employees entity.</returns>
        public static Data.Employees CreateEmployees(int employeeID, decimal annualWage, double superRate, double taxRate, double baseHours, double wageInclude, double bCoefficient, string payInterval)
        {
            Data.Employees employees = new Data.Employees();
            employees.EmployeeID = employeeID;
            employees.AnnualWage = annualWage;
            employees.SuperRate = superRate;
            employees.TaxRate = taxRate;
            employees.BaseHours = baseHours;
            employees.WageInclude = wageInclude;
            employees.BCoefficient = bCoefficient;
            employees.PayInterval = payInterval;
            return employees;
        }
    }
    #endregion
    
    #region User Data Entity Type
    /// <summary>
    /// The user data object class.
    /// </summary>
    [DataContractAttribute(Name = "User", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.User")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class User : DataBase
    {
        
        private int _UserID;
        
        private string _FirstName;
        
        private string _LastName;
        
        private bool _Suspended;
        
        private string _LoginUserName;
        
        private string _LoginPassword;
        
        private string _UserType;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On UserID column data entity changed.
        /// </summary>
		partial void OnUserIDChanged();

        /// <summary>
        /// On UserID column data entity changing.
        /// </summary>
		partial void OnUserIDChanging();

        /// <summary>
        /// On FirstName column data entity changed.
        /// </summary>
		partial void OnFirstNameChanged();

        /// <summary>
        /// On FirstName column data entity changing.
        /// </summary>
		partial void OnFirstNameChanging();

        /// <summary>
        /// On LastName column data entity changed.
        /// </summary>
		partial void OnLastNameChanged();

        /// <summary>
        /// On LastName column data entity changing.
        /// </summary>
		partial void OnLastNameChanging();

        /// <summary>
        /// On Suspended column data entity changed.
        /// </summary>
		partial void OnSuspendedChanged();

        /// <summary>
        /// On Suspended column data entity changing.
        /// </summary>
		partial void OnSuspendedChanging();

        /// <summary>
        /// On LoginUserName column data entity changed.
        /// </summary>
		partial void OnLoginUserNameChanged();

        /// <summary>
        /// On LoginUserName column data entity changing.
        /// </summary>
		partial void OnLoginUserNameChanging();

        /// <summary>
        /// On LoginPassword column data entity changed.
        /// </summary>
		partial void OnLoginPasswordChanged();

        /// <summary>
        /// On LoginPassword column data entity changing.
        /// </summary>
		partial void OnLoginPasswordChanging();

        /// <summary>
        /// On UserType column data entity changed.
        /// </summary>
		partial void OnUserTypeChanged();

        /// <summary>
        /// On UserType column data entity changing.
        /// </summary>
		partial void OnUserTypeChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public User()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the userid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "UserID")]
        [XmlElementAttribute(ElementName = "UserID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("UserID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int UserID
        {
            get
            {
                return this._UserID;
            }
            set
            {
                if ((this._UserID != value))
                {
                    this.OnUserIDChanging();
                    this.SendPropertyChanging("UserID");
                    this._UserID = value;
                    this.SendPropertyChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "FirstName")]
        [XmlElementAttribute(ElementName = "FirstName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("FirstName", DbType = "varchar", Length = 500, IsNullable = false)]
        public string FirstName
        {
            get
            {
                return this._FirstName;
            }
            set
            {
                if ((this._FirstName != value))
                {
                    this.OnFirstNameChanging();
                    this.SendPropertyChanging("FirstName");
                    this._FirstName = value;
                    this.SendPropertyChanged("FirstName");
                    this.OnFirstNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the lastname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "LastName")]
        [XmlElementAttribute(ElementName = "LastName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("LastName", DbType = "varchar", Length = -1, IsNullable = false)]
        public string LastName
        {
            get
            {
                return this._LastName;
            }
            set
            {
                if ((this._LastName != value))
                {
                    this.OnLastNameChanging();
                    this.SendPropertyChanging("LastName");
                    this._LastName = value;
                    this.SendPropertyChanged("LastName");
                    this.OnLastNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suspended property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Suspended")]
        [XmlElementAttribute(ElementName = "Suspended", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Suspended", DbType = "bit", Length = 1, IsNullable = false)]
        public bool Suspended
        {
            get
            {
                return this._Suspended;
            }
            set
            {
                if ((this._Suspended != value))
                {
                    this.OnSuspendedChanging();
                    this.SendPropertyChanging("Suspended");
                    this._Suspended = value;
                    this.SendPropertyChanged("Suspended");
                    this.OnSuspendedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the loginusername property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "LoginUserName")]
        [XmlElementAttribute(ElementName = "LoginUserName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("LoginUserName", DbType = "varchar", Length = 50, IsNullable = false)]
        public string LoginUserName
        {
            get
            {
                return this._LoginUserName;
            }
            set
            {
                if ((this._LoginUserName != value))
                {
                    this.OnLoginUserNameChanging();
                    this.SendPropertyChanging("LoginUserName");
                    this._LoginUserName = value;
                    this.SendPropertyChanged("LoginUserName");
                    this.OnLoginUserNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the loginpassword property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "LoginPassword")]
        [XmlElementAttribute(ElementName = "LoginPassword", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("LoginPassword", DbType = "varchar", Length = 500, IsNullable = false)]
        public string LoginPassword
        {
            get
            {
                return this._LoginPassword;
            }
            set
            {
                if ((this._LoginPassword != value))
                {
                    this.OnLoginPasswordChanging();
                    this.SendPropertyChanging("LoginPassword");
                    this._LoginPassword = value;
                    this.SendPropertyChanged("LoginPassword");
                    this.OnLoginPasswordChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the usertype property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "UserType")]
        [XmlElementAttribute(ElementName = "UserType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("UserType", DbType = "varchar", Length = -1, IsNullable = false)]
        public string UserType
        {
            get
            {
                return this._UserType;
            }
            set
            {
                if ((this._UserType != value))
                {
                    this.OnUserTypeChanging();
                    this.SendPropertyChanging("UserType");
                    this._UserType = value;
                    this.SendPropertyChanged("UserType");
                    this.OnUserTypeChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new user data entity.
        /// </summary>
        /// <param name="userID">Initial value of UserID.</param>
        /// <param name="firstName">Initial value of FirstName.</param>
        /// <param name="lastName">Initial value of LastName.</param>
        /// <param name="suspended">Initial value of Suspended.</param>
        /// <param name="loginUserName">Initial value of LoginUserName.</param>
        /// <param name="loginPassword">Initial value of LoginPassword.</param>
        /// <param name="userType">Initial value of UserType.</param>
        /// <returns>The Data.User entity.</returns>
        public static Data.User CreateUser(int userID, string firstName, string lastName, bool suspended, string loginUserName, string loginPassword, string userType)
        {
            Data.User user = new Data.User();
            user.UserID = userID;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.Suspended = suspended;
            user.LoginUserName = loginUserName;
            user.LoginPassword = loginPassword;
            user.UserType = userType;
            return user;
        }
    }
    #endregion
    
    #region Assets Data Entity Type
    /// <summary>
    /// The assets data object class.
    /// </summary>
    [DataContractAttribute(Name = "Assets", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Assets")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Assets : DataBase
    {
        
        private int _AssetID;
        
        private System.Nullable<System.Int32> _VendorID;
        
        private System.Nullable<System.Int32> _VendorDetailsID;
        
        private string _Location;
        
        private string _Model;
        
        private string _SerialNumber;
        
        private string _Manufacturer;
        
        private string _ManufacturerWebSite;
        
        private string _Category;
        
        private System.Nullable<System.Int32> _Units;
        
        private string _Status;
        
        private string _Description;
        
        private string _Details;
        
        private string _Comments;
        
        private System.Nullable<System.Decimal> _Amount;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On AssetID column data entity changed.
        /// </summary>
		partial void OnAssetIDChanged();

        /// <summary>
        /// On AssetID column data entity changing.
        /// </summary>
		partial void OnAssetIDChanging();

        /// <summary>
        /// On VendorID column data entity changed.
        /// </summary>
		partial void OnVendorIDChanged();

        /// <summary>
        /// On VendorID column data entity changing.
        /// </summary>
		partial void OnVendorIDChanging();

        /// <summary>
        /// On VendorDetailsID column data entity changed.
        /// </summary>
		partial void OnVendorDetailsIDChanged();

        /// <summary>
        /// On VendorDetailsID column data entity changing.
        /// </summary>
		partial void OnVendorDetailsIDChanging();

        /// <summary>
        /// On Location column data entity changed.
        /// </summary>
		partial void OnLocationChanged();

        /// <summary>
        /// On Location column data entity changing.
        /// </summary>
		partial void OnLocationChanging();

        /// <summary>
        /// On Model column data entity changed.
        /// </summary>
		partial void OnModelChanged();

        /// <summary>
        /// On Model column data entity changing.
        /// </summary>
		partial void OnModelChanging();

        /// <summary>
        /// On SerialNumber column data entity changed.
        /// </summary>
		partial void OnSerialNumberChanged();

        /// <summary>
        /// On SerialNumber column data entity changing.
        /// </summary>
		partial void OnSerialNumberChanging();

        /// <summary>
        /// On Manufacturer column data entity changed.
        /// </summary>
		partial void OnManufacturerChanged();

        /// <summary>
        /// On Manufacturer column data entity changing.
        /// </summary>
		partial void OnManufacturerChanging();

        /// <summary>
        /// On ManufacturerWebSite column data entity changed.
        /// </summary>
		partial void OnManufacturerWebSiteChanged();

        /// <summary>
        /// On ManufacturerWebSite column data entity changing.
        /// </summary>
		partial void OnManufacturerWebSiteChanging();

        /// <summary>
        /// On Category column data entity changed.
        /// </summary>
		partial void OnCategoryChanged();

        /// <summary>
        /// On Category column data entity changing.
        /// </summary>
		partial void OnCategoryChanging();

        /// <summary>
        /// On Units column data entity changed.
        /// </summary>
		partial void OnUnitsChanged();

        /// <summary>
        /// On Units column data entity changing.
        /// </summary>
		partial void OnUnitsChanging();

        /// <summary>
        /// On Status column data entity changed.
        /// </summary>
		partial void OnStatusChanged();

        /// <summary>
        /// On Status column data entity changing.
        /// </summary>
		partial void OnStatusChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

        /// <summary>
        /// On Details column data entity changed.
        /// </summary>
		partial void OnDetailsChanged();

        /// <summary>
        /// On Details column data entity changing.
        /// </summary>
		partial void OnDetailsChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

        /// <summary>
        /// On Amount column data entity changed.
        /// </summary>
		partial void OnAmountChanged();

        /// <summary>
        /// On Amount column data entity changing.
        /// </summary>
		partial void OnAmountChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Assets()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the assetid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AssetID")]
        [XmlElementAttribute(ElementName = "AssetID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("AssetID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int AssetID
        {
            get
            {
                return this._AssetID;
            }
            set
            {
                if ((this._AssetID != value))
                {
                    this.OnAssetIDChanging();
                    this.SendPropertyChanging("AssetID");
                    this._AssetID = value;
                    this.SendPropertyChanged("AssetID");
                    this.OnAssetIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the vendorid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "VendorID")]
        [XmlElementAttribute(ElementName = "VendorID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("VendorID", DbType = "int", Length = 4, IsNullable = true)]
        public System.Nullable<System.Int32> VendorID
        {
            get
            {
                return this._VendorID;
            }
            set
            {
                if ((this._VendorID != value))
                {
                    this.OnVendorIDChanging();
                    this.SendPropertyChanging("VendorID");
                    this._VendorID = value;
                    this.SendPropertyChanged("VendorID");
                    this.OnVendorIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the vendordetailsid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "VendorDetailsID")]
        [XmlElementAttribute(ElementName = "VendorDetailsID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("VendorDetailsID", DbType = "int", Length = 4, IsNullable = true)]
        public System.Nullable<System.Int32> VendorDetailsID
        {
            get
            {
                return this._VendorDetailsID;
            }
            set
            {
                if ((this._VendorDetailsID != value))
                {
                    this.OnVendorDetailsIDChanging();
                    this.SendPropertyChanging("VendorDetailsID");
                    this._VendorDetailsID = value;
                    this.SendPropertyChanged("VendorDetailsID");
                    this.OnVendorDetailsIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the location property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Location")]
        [XmlElementAttribute(ElementName = "Location", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Location", DbType = "varchar", Length = 150, IsNullable = true)]
        public string Location
        {
            get
            {
                return this._Location;
            }
            set
            {
                if ((this._Location != value))
                {
                    this.OnLocationChanging();
                    this.SendPropertyChanging("Location");
                    this._Location = value;
                    this.SendPropertyChanged("Location");
                    this.OnLocationChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the model property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Model")]
        [XmlElementAttribute(ElementName = "Model", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Model", DbType = "varchar", Length = 200, IsNullable = true)]
        public string Model
        {
            get
            {
                return this._Model;
            }
            set
            {
                if ((this._Model != value))
                {
                    this.OnModelChanging();
                    this.SendPropertyChanging("Model");
                    this._Model = value;
                    this.SendPropertyChanged("Model");
                    this.OnModelChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the serialnumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "SerialNumber")]
        [XmlElementAttribute(ElementName = "SerialNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("SerialNumber", DbType = "varchar", Length = 50, IsNullable = true)]
        public string SerialNumber
        {
            get
            {
                return this._SerialNumber;
            }
            set
            {
                if ((this._SerialNumber != value))
                {
                    this.OnSerialNumberChanging();
                    this.SendPropertyChanging("SerialNumber");
                    this._SerialNumber = value;
                    this.SendPropertyChanged("SerialNumber");
                    this.OnSerialNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the manufacturer property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Manufacturer")]
        [XmlElementAttribute(ElementName = "Manufacturer", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Manufacturer", DbType = "varchar", Length = 150, IsNullable = true)]
        public string Manufacturer
        {
            get
            {
                return this._Manufacturer;
            }
            set
            {
                if ((this._Manufacturer != value))
                {
                    this.OnManufacturerChanging();
                    this.SendPropertyChanging("Manufacturer");
                    this._Manufacturer = value;
                    this.SendPropertyChanged("Manufacturer");
                    this.OnManufacturerChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the manufacturerwebsite property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ManufacturerWebSite")]
        [XmlElementAttribute(ElementName = "ManufacturerWebSite", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("ManufacturerWebSite", DbType = "varchar", Length = 200, IsNullable = true)]
        public string ManufacturerWebSite
        {
            get
            {
                return this._ManufacturerWebSite;
            }
            set
            {
                if ((this._ManufacturerWebSite != value))
                {
                    this.OnManufacturerWebSiteChanging();
                    this.SendPropertyChanging("ManufacturerWebSite");
                    this._ManufacturerWebSite = value;
                    this.SendPropertyChanged("ManufacturerWebSite");
                    this.OnManufacturerWebSiteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the category property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Category")]
        [XmlElementAttribute(ElementName = "Category", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Category", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Category
        {
            get
            {
                return this._Category;
            }
            set
            {
                if ((this._Category != value))
                {
                    this.OnCategoryChanging();
                    this.SendPropertyChanging("Category");
                    this._Category = value;
                    this.SendPropertyChanged("Category");
                    this.OnCategoryChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the units property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Units")]
        [XmlElementAttribute(ElementName = "Units", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Units", DbType = "int", Length = 4, IsNullable = true)]
        public System.Nullable<System.Int32> Units
        {
            get
            {
                return this._Units;
            }
            set
            {
                if ((this._Units != value))
                {
                    this.OnUnitsChanging();
                    this.SendPropertyChanging("Units");
                    this._Units = value;
                    this.SendPropertyChanged("Units");
                    this.OnUnitsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the status property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Status")]
        [XmlElementAttribute(ElementName = "Status", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Status", DbType = "varchar", Length = 20, IsNullable = true)]
        public string Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging();
                    this.SendPropertyChanging("Status");
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 300, IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the details property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Details")]
        [XmlElementAttribute(ElementName = "Details", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Details", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Details
        {
            get
            {
                return this._Details;
            }
            set
            {
                if ((this._Details != value))
                {
                    this.OnDetailsChanging();
                    this.SendPropertyChanging("Details");
                    this._Details = value;
                    this.SendPropertyChanged("Details");
                    this.OnDetailsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Amount", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this.OnAmountChanging();
                    this.SendPropertyChanging("Amount");
                    this._Amount = value;
                    this.SendPropertyChanged("Amount");
                    this.OnAmountChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new assets data entity.
        /// </summary>
        /// <param name="assetID">Initial value of AssetID.</param>
        /// <returns>The Data.Assets entity.</returns>
        public static Data.Assets CreateAssets(int assetID)
        {
            Data.Assets assets = new Data.Assets();
            assets.AssetID = assetID;
            return assets;
        }
    }
    #endregion
    
    #region Vendors Data Entity Type
    /// <summary>
    /// The vendors data object class.
    /// </summary>
    [DataContractAttribute(Name = "Vendors", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Vendors")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Vendors : DataBase
    {
        
        private int _VendorID;
        
        private string _CompanyName;
        
        private string _Firstname;
        
        private string _Surname;
        
        private string _Address;
        
        private string _Suburb;
        
        private string _State;
        
        private string _Postcode;
        
        private string _PhoneNumber;
        
        private string _FaxNumber;
        
        private string _MobileNumber;
        
        private string _EmailAddress;
        
        private string _WebSite;
        
        private string _ABN;
        
        private string _PostalAddress;
        
        private string _PostalSuburb;
        
        private string _PostalState;
        
        private string _PostalPostcode;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On VendorID column data entity changed.
        /// </summary>
		partial void OnVendorIDChanged();

        /// <summary>
        /// On VendorID column data entity changing.
        /// </summary>
		partial void OnVendorIDChanging();

        /// <summary>
        /// On CompanyName column data entity changed.
        /// </summary>
		partial void OnCompanyNameChanged();

        /// <summary>
        /// On CompanyName column data entity changing.
        /// </summary>
		partial void OnCompanyNameChanging();

        /// <summary>
        /// On Firstname column data entity changed.
        /// </summary>
		partial void OnFirstnameChanged();

        /// <summary>
        /// On Firstname column data entity changing.
        /// </summary>
		partial void OnFirstnameChanging();

        /// <summary>
        /// On Surname column data entity changed.
        /// </summary>
		partial void OnSurnameChanged();

        /// <summary>
        /// On Surname column data entity changing.
        /// </summary>
		partial void OnSurnameChanging();

        /// <summary>
        /// On Address column data entity changed.
        /// </summary>
		partial void OnAddressChanged();

        /// <summary>
        /// On Address column data entity changing.
        /// </summary>
		partial void OnAddressChanging();

        /// <summary>
        /// On Suburb column data entity changed.
        /// </summary>
		partial void OnSuburbChanged();

        /// <summary>
        /// On Suburb column data entity changing.
        /// </summary>
		partial void OnSuburbChanging();

        /// <summary>
        /// On State column data entity changed.
        /// </summary>
		partial void OnStateChanged();

        /// <summary>
        /// On State column data entity changing.
        /// </summary>
		partial void OnStateChanging();

        /// <summary>
        /// On Postcode column data entity changed.
        /// </summary>
		partial void OnPostcodeChanged();

        /// <summary>
        /// On Postcode column data entity changing.
        /// </summary>
		partial void OnPostcodeChanging();

        /// <summary>
        /// On PhoneNumber column data entity changed.
        /// </summary>
		partial void OnPhoneNumberChanged();

        /// <summary>
        /// On PhoneNumber column data entity changing.
        /// </summary>
		partial void OnPhoneNumberChanging();

        /// <summary>
        /// On FaxNumber column data entity changed.
        /// </summary>
		partial void OnFaxNumberChanged();

        /// <summary>
        /// On FaxNumber column data entity changing.
        /// </summary>
		partial void OnFaxNumberChanging();

        /// <summary>
        /// On MobileNumber column data entity changed.
        /// </summary>
		partial void OnMobileNumberChanged();

        /// <summary>
        /// On MobileNumber column data entity changing.
        /// </summary>
		partial void OnMobileNumberChanging();

        /// <summary>
        /// On EmailAddress column data entity changed.
        /// </summary>
		partial void OnEmailAddressChanged();

        /// <summary>
        /// On EmailAddress column data entity changing.
        /// </summary>
		partial void OnEmailAddressChanging();

        /// <summary>
        /// On WebSite column data entity changed.
        /// </summary>
		partial void OnWebSiteChanged();

        /// <summary>
        /// On WebSite column data entity changing.
        /// </summary>
		partial void OnWebSiteChanging();

        /// <summary>
        /// On ABN column data entity changed.
        /// </summary>
		partial void OnABNChanged();

        /// <summary>
        /// On ABN column data entity changing.
        /// </summary>
		partial void OnABNChanging();

        /// <summary>
        /// On PostalAddress column data entity changed.
        /// </summary>
		partial void OnPostalAddressChanged();

        /// <summary>
        /// On PostalAddress column data entity changing.
        /// </summary>
		partial void OnPostalAddressChanging();

        /// <summary>
        /// On PostalSuburb column data entity changed.
        /// </summary>
		partial void OnPostalSuburbChanged();

        /// <summary>
        /// On PostalSuburb column data entity changing.
        /// </summary>
		partial void OnPostalSuburbChanging();

        /// <summary>
        /// On PostalState column data entity changed.
        /// </summary>
		partial void OnPostalStateChanged();

        /// <summary>
        /// On PostalState column data entity changing.
        /// </summary>
		partial void OnPostalStateChanging();

        /// <summary>
        /// On PostalPostcode column data entity changed.
        /// </summary>
		partial void OnPostalPostcodeChanged();

        /// <summary>
        /// On PostalPostcode column data entity changing.
        /// </summary>
		partial void OnPostalPostcodeChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Vendors()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the vendorid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "VendorID")]
        [XmlElementAttribute(ElementName = "VendorID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("VendorID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int VendorID
        {
            get
            {
                return this._VendorID;
            }
            set
            {
                if ((this._VendorID != value))
                {
                    this.OnVendorIDChanging();
                    this.SendPropertyChanging("VendorID");
                    this._VendorID = value;
                    this.SendPropertyChanged("VendorID");
                    this.OnVendorIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companyname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CompanyName")]
        [XmlElementAttribute(ElementName = "CompanyName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CompanyName", DbType = "varchar", Length = 200, IsNullable = false)]
        public string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                if ((this._CompanyName != value))
                {
                    this.OnCompanyNameChanging();
                    this.SendPropertyChanging("CompanyName");
                    this._CompanyName = value;
                    this.SendPropertyChanged("CompanyName");
                    this.OnCompanyNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Firstname")]
        [XmlElementAttribute(ElementName = "Firstname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Firstname", DbType = "varchar", Length = 40, IsNullable = true)]
        public string Firstname
        {
            get
            {
                return this._Firstname;
            }
            set
            {
                if ((this._Firstname != value))
                {
                    this.OnFirstnameChanging();
                    this.SendPropertyChanging("Firstname");
                    this._Firstname = value;
                    this.SendPropertyChanged("Firstname");
                    this.OnFirstnameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Surname")]
        [XmlElementAttribute(ElementName = "Surname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Surname", DbType = "varchar", Length = 40, IsNullable = true)]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if ((this._Surname != value))
                {
                    this.OnSurnameChanging();
                    this.SendPropertyChanging("Surname");
                    this._Surname = value;
                    this.SendPropertyChanged("Surname");
                    this.OnSurnameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Address")]
        [XmlElementAttribute(ElementName = "Address", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Address", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this.OnAddressChanging();
                    this.SendPropertyChanging("Address");
                    this._Address = value;
                    this.SendPropertyChanged("Address");
                    this.OnAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suburb property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Suburb")]
        [XmlElementAttribute(ElementName = "Suburb", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Suburb", DbType = "varchar", Length = 30, IsNullable = true)]
        public string Suburb
        {
            get
            {
                return this._Suburb;
            }
            set
            {
                if ((this._Suburb != value))
                {
                    this.OnSuburbChanging();
                    this.SendPropertyChanging("Suburb");
                    this._Suburb = value;
                    this.SendPropertyChanged("Suburb");
                    this.OnSuburbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the state property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "State")]
        [XmlElementAttribute(ElementName = "State", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("State", DbType = "varchar", Length = 5, IsNullable = true)]
        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                if ((this._State != value))
                {
                    this.OnStateChanging();
                    this.SendPropertyChanging("State");
                    this._State = value;
                    this.SendPropertyChanged("State");
                    this.OnStateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postcode property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Postcode")]
        [XmlElementAttribute(ElementName = "Postcode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Postcode", DbType = "varchar", Length = 5, IsNullable = true)]
        public string Postcode
        {
            get
            {
                return this._Postcode;
            }
            set
            {
                if ((this._Postcode != value))
                {
                    this.OnPostcodeChanging();
                    this.SendPropertyChanging("Postcode");
                    this._Postcode = value;
                    this.SendPropertyChanged("Postcode");
                    this.OnPostcodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PhoneNumber", DbType = "varchar", Length = 14, IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this.OnPhoneNumberChanging();
                    this.SendPropertyChanging("PhoneNumber");
                    this._PhoneNumber = value;
                    this.SendPropertyChanged("PhoneNumber");
                    this.OnPhoneNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("FaxNumber", DbType = "varchar", Length = 14, IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this.OnFaxNumberChanging();
                    this.SendPropertyChanging("FaxNumber");
                    this._FaxNumber = value;
                    this.SendPropertyChanged("FaxNumber");
                    this.OnFaxNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the mobilenumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "MobileNumber")]
        [XmlElementAttribute(ElementName = "MobileNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("MobileNumber", DbType = "varchar", Length = 12, IsNullable = true)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging();
                    this.SendPropertyChanging("MobileNumber");
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("EmailAddress", DbType = "varchar", Length = 100, IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this.OnEmailAddressChanging();
                    this.SendPropertyChanging("EmailAddress");
                    this._EmailAddress = value;
                    this.SendPropertyChanged("EmailAddress");
                    this.OnEmailAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("WebSite", DbType = "varchar", Length = 100, IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this.OnWebSiteChanging();
                    this.SendPropertyChanging("WebSite");
                    this._WebSite = value;
                    this.SendPropertyChanged("WebSite");
                    this.OnWebSiteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the abn property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ABN")]
        [XmlElementAttribute(ElementName = "ABN", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("ABN", DbType = "varchar", Length = 15, IsNullable = true)]
        public string ABN
        {
            get
            {
                return this._ABN;
            }
            set
            {
                if ((this._ABN != value))
                {
                    this.OnABNChanging();
                    this.SendPropertyChanging("ABN");
                    this._ABN = value;
                    this.SendPropertyChanged("ABN");
                    this.OnABNChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postaladdress property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostalAddress")]
        [XmlElementAttribute(ElementName = "PostalAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostalAddress", DbType = "varchar", Length = 50, IsNullable = true)]
        public string PostalAddress
        {
            get
            {
                return this._PostalAddress;
            }
            set
            {
                if ((this._PostalAddress != value))
                {
                    this.OnPostalAddressChanging();
                    this.SendPropertyChanging("PostalAddress");
                    this._PostalAddress = value;
                    this.SendPropertyChanged("PostalAddress");
                    this.OnPostalAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalsuburb property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostalSuburb")]
        [XmlElementAttribute(ElementName = "PostalSuburb", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostalSuburb", DbType = "varchar", Length = 30, IsNullable = true)]
        public string PostalSuburb
        {
            get
            {
                return this._PostalSuburb;
            }
            set
            {
                if ((this._PostalSuburb != value))
                {
                    this.OnPostalSuburbChanging();
                    this.SendPropertyChanging("PostalSuburb");
                    this._PostalSuburb = value;
                    this.SendPropertyChanged("PostalSuburb");
                    this.OnPostalSuburbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalstate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostalState")]
        [XmlElementAttribute(ElementName = "PostalState", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostalState", DbType = "varchar", Length = 5, IsNullable = true)]
        public string PostalState
        {
            get
            {
                return this._PostalState;
            }
            set
            {
                if ((this._PostalState != value))
                {
                    this.OnPostalStateChanging();
                    this.SendPropertyChanging("PostalState");
                    this._PostalState = value;
                    this.SendPropertyChanged("PostalState");
                    this.OnPostalStateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalpostcode property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostalPostcode")]
        [XmlElementAttribute(ElementName = "PostalPostcode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostalPostcode", DbType = "varchar", Length = 5, IsNullable = true)]
        public string PostalPostcode
        {
            get
            {
                return this._PostalPostcode;
            }
            set
            {
                if ((this._PostalPostcode != value))
                {
                    this.OnPostalPostcodeChanging();
                    this.SendPropertyChanging("PostalPostcode");
                    this._PostalPostcode = value;
                    this.SendPropertyChanged("PostalPostcode");
                    this.OnPostalPostcodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new vendors data entity.
        /// </summary>
        /// <param name="vendorID">Initial value of VendorID.</param>
        /// <param name="companyName">Initial value of CompanyName.</param>
        /// <returns>The Data.Vendors entity.</returns>
        public static Data.Vendors CreateVendors(int vendorID, string companyName)
        {
            Data.Vendors vendors = new Data.Vendors();
            vendors.VendorID = vendorID;
            vendors.CompanyName = companyName;
            return vendors;
        }
    }
    #endregion
    
    #region Invoices Data Entity Type
    /// <summary>
    /// The invoices data object class.
    /// </summary>
    [DataContractAttribute(Name = "Invoices", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Invoices")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Invoices : DataBase
    {
        
        private int _InvoiceID;
        
        private int _CustomerID;
        
        private System.DateTime _InvoiceDate;
        
        private System.Nullable<System.DateTime> _PaymentDate;
        
        private string _OrderID;
        
        private string _Developer;
        
        private string _GSTIncluded;
        
        private string _Comments;
        
        private string _IncomeType;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On InvoiceID column data entity changed.
        /// </summary>
		partial void OnInvoiceIDChanged();

        /// <summary>
        /// On InvoiceID column data entity changing.
        /// </summary>
		partial void OnInvoiceIDChanging();

        /// <summary>
        /// On CustomerID column data entity changed.
        /// </summary>
		partial void OnCustomerIDChanged();

        /// <summary>
        /// On CustomerID column data entity changing.
        /// </summary>
		partial void OnCustomerIDChanging();

        /// <summary>
        /// On InvoiceDate column data entity changed.
        /// </summary>
		partial void OnInvoiceDateChanged();

        /// <summary>
        /// On InvoiceDate column data entity changing.
        /// </summary>
		partial void OnInvoiceDateChanging();

        /// <summary>
        /// On PaymentDate column data entity changed.
        /// </summary>
		partial void OnPaymentDateChanged();

        /// <summary>
        /// On PaymentDate column data entity changing.
        /// </summary>
		partial void OnPaymentDateChanging();

        /// <summary>
        /// On OrderID column data entity changed.
        /// </summary>
		partial void OnOrderIDChanged();

        /// <summary>
        /// On OrderID column data entity changing.
        /// </summary>
		partial void OnOrderIDChanging();

        /// <summary>
        /// On Developer column data entity changed.
        /// </summary>
		partial void OnDeveloperChanged();

        /// <summary>
        /// On Developer column data entity changing.
        /// </summary>
		partial void OnDeveloperChanging();

        /// <summary>
        /// On GSTIncluded column data entity changed.
        /// </summary>
		partial void OnGSTIncludedChanged();

        /// <summary>
        /// On GSTIncluded column data entity changing.
        /// </summary>
		partial void OnGSTIncludedChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

        /// <summary>
        /// On IncomeType column data entity changed.
        /// </summary>
		partial void OnIncomeTypeChanged();

        /// <summary>
        /// On IncomeType column data entity changing.
        /// </summary>
		partial void OnIncomeTypeChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Invoices()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the invoiceid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "InvoiceID")]
        [XmlElementAttribute(ElementName = "InvoiceID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("InvoiceID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int InvoiceID
        {
            get
            {
                return this._InvoiceID;
            }
            set
            {
                if ((this._InvoiceID != value))
                {
                    this.OnInvoiceIDChanging();
                    this.SendPropertyChanging("InvoiceID");
                    this._InvoiceID = value;
                    this.SendPropertyChanged("InvoiceID");
                    this.OnInvoiceIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the customerid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CustomerID")]
        [XmlElementAttribute(ElementName = "CustomerID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CustomerID", DbType = "int", Length = 4, IsNullable = false)]
        public int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                if ((this._CustomerID != value))
                {
                    this.OnCustomerIDChanging();
                    this.SendPropertyChanging("CustomerID");
                    this._CustomerID = value;
                    this.SendPropertyChanged("CustomerID");
                    this.OnCustomerIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the invoicedate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "InvoiceDate")]
        [XmlElementAttribute(ElementName = "InvoiceDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("InvoiceDate", DbType = "datetime", Length = 8, IsNullable = false)]
        public System.DateTime InvoiceDate
        {
            get
            {
                return this._InvoiceDate;
            }
            set
            {
                if ((this._InvoiceDate != value))
                {
                    this.OnInvoiceDateChanging();
                    this.SendPropertyChanging("InvoiceDate");
                    this._InvoiceDate = value;
                    this.SendPropertyChanged("InvoiceDate");
                    this.OnInvoiceDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PaymentDate", DbType = "datetime", Length = 8, IsNullable = true)]
        public System.Nullable<System.DateTime> PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this.OnPaymentDateChanging();
                    this.SendPropertyChanging("PaymentDate");
                    this._PaymentDate = value;
                    this.SendPropertyChanged("PaymentDate");
                    this.OnPaymentDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the orderid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "OrderID")]
        [XmlElementAttribute(ElementName = "OrderID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("OrderID", DbType = "varchar", Length = 20, IsNullable = false)]
        public string OrderID
        {
            get
            {
                return this._OrderID;
            }
            set
            {
                if ((this._OrderID != value))
                {
                    this.OnOrderIDChanging();
                    this.SendPropertyChanging("OrderID");
                    this._OrderID = value;
                    this.SendPropertyChanged("OrderID");
                    this.OnOrderIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the developer property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Developer")]
        [XmlElementAttribute(ElementName = "Developer", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Developer", DbType = "varchar", Length = 40, IsNullable = true)]
        public string Developer
        {
            get
            {
                return this._Developer;
            }
            set
            {
                if ((this._Developer != value))
                {
                    this.OnDeveloperChanging();
                    this.SendPropertyChanging("Developer");
                    this._Developer = value;
                    this.SendPropertyChanged("Developer");
                    this.OnDeveloperChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gstincluded property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GSTIncluded")]
        [XmlElementAttribute(ElementName = "GSTIncluded", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("GSTIncluded", DbType = "varchar", Length = 10, IsNullable = true)]
        public string GSTIncluded
        {
            get
            {
                return this._GSTIncluded;
            }
            set
            {
                if ((this._GSTIncluded != value))
                {
                    this.OnGSTIncludedChanging();
                    this.SendPropertyChanging("GSTIncluded");
                    this._GSTIncluded = value;
                    this.SendPropertyChanged("GSTIncluded");
                    this.OnGSTIncludedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the incometype property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "IncomeType")]
        [XmlElementAttribute(ElementName = "IncomeType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("IncomeType", DbType = "varchar", Length = 100, IsNullable = false)]
        public string IncomeType
        {
            get
            {
                return this._IncomeType;
            }
            set
            {
                if ((this._IncomeType != value))
                {
                    this.OnIncomeTypeChanging();
                    this.SendPropertyChanging("IncomeType");
                    this._IncomeType = value;
                    this.SendPropertyChanged("IncomeType");
                    this.OnIncomeTypeChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new invoices data entity.
        /// </summary>
        /// <param name="invoiceID">Initial value of InvoiceID.</param>
        /// <param name="customerID">Initial value of CustomerID.</param>
        /// <param name="invoiceDate">Initial value of InvoiceDate.</param>
        /// <param name="orderID">Initial value of OrderID.</param>
        /// <param name="incomeType">Initial value of IncomeType.</param>
        /// <returns>The Data.Invoices entity.</returns>
        public static Data.Invoices CreateInvoices(int invoiceID, int customerID, System.DateTime invoiceDate, string orderID, string incomeType)
        {
            Data.Invoices invoices = new Data.Invoices();
            invoices.InvoiceID = invoiceID;
            invoices.CustomerID = customerID;
            invoices.InvoiceDate = invoiceDate;
            invoices.OrderID = orderID;
            invoices.IncomeType = incomeType;
            return invoices;
        }
    }
    #endregion
    
    #region Products Data Entity Type
    /// <summary>
    /// The products data object class.
    /// </summary>
    [DataContractAttribute(Name = "Products", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Products")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Products : DataBase
    {
        
        private int _ProductID;
        
        private string _ProductNumber;
        
        private string _ProductVersion;
        
        private string _Description;
        
        private System.Nullable<System.DateTime> _ProductionDate;
        
        private string _Model;
        
        private string _SerialNumber;
        
        private string _Category;
        
        private System.Nullable<System.Int32> _Units;
        
        private decimal _UnitPrice;
        
        private string _Status;
        
        private string _Comments;
        
        private string _SubCategory;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On ProductID column data entity changed.
        /// </summary>
		partial void OnProductIDChanged();

        /// <summary>
        /// On ProductID column data entity changing.
        /// </summary>
		partial void OnProductIDChanging();

        /// <summary>
        /// On ProductNumber column data entity changed.
        /// </summary>
		partial void OnProductNumberChanged();

        /// <summary>
        /// On ProductNumber column data entity changing.
        /// </summary>
		partial void OnProductNumberChanging();

        /// <summary>
        /// On ProductVersion column data entity changed.
        /// </summary>
		partial void OnProductVersionChanged();

        /// <summary>
        /// On ProductVersion column data entity changing.
        /// </summary>
		partial void OnProductVersionChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

        /// <summary>
        /// On ProductionDate column data entity changed.
        /// </summary>
		partial void OnProductionDateChanged();

        /// <summary>
        /// On ProductionDate column data entity changing.
        /// </summary>
		partial void OnProductionDateChanging();

        /// <summary>
        /// On Model column data entity changed.
        /// </summary>
		partial void OnModelChanged();

        /// <summary>
        /// On Model column data entity changing.
        /// </summary>
		partial void OnModelChanging();

        /// <summary>
        /// On SerialNumber column data entity changed.
        /// </summary>
		partial void OnSerialNumberChanged();

        /// <summary>
        /// On SerialNumber column data entity changing.
        /// </summary>
		partial void OnSerialNumberChanging();

        /// <summary>
        /// On Category column data entity changed.
        /// </summary>
		partial void OnCategoryChanged();

        /// <summary>
        /// On Category column data entity changing.
        /// </summary>
		partial void OnCategoryChanging();

        /// <summary>
        /// On Units column data entity changed.
        /// </summary>
		partial void OnUnitsChanged();

        /// <summary>
        /// On Units column data entity changing.
        /// </summary>
		partial void OnUnitsChanging();

        /// <summary>
        /// On UnitPrice column data entity changed.
        /// </summary>
		partial void OnUnitPriceChanged();

        /// <summary>
        /// On UnitPrice column data entity changing.
        /// </summary>
		partial void OnUnitPriceChanging();

        /// <summary>
        /// On Status column data entity changed.
        /// </summary>
		partial void OnStatusChanged();

        /// <summary>
        /// On Status column data entity changing.
        /// </summary>
		partial void OnStatusChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

        /// <summary>
        /// On SubCategory column data entity changed.
        /// </summary>
		partial void OnSubCategoryChanged();

        /// <summary>
        /// On SubCategory column data entity changing.
        /// </summary>
		partial void OnSubCategoryChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Products()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the productid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ProductID")]
        [XmlElementAttribute(ElementName = "ProductID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("ProductID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int ProductID
        {
            get
            {
                return this._ProductID;
            }
            set
            {
                if ((this._ProductID != value))
                {
                    this.OnProductIDChanging();
                    this.SendPropertyChanging("ProductID");
                    this._ProductID = value;
                    this.SendPropertyChanged("ProductID");
                    this.OnProductIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the productnumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ProductNumber")]
        [XmlElementAttribute(ElementName = "ProductNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("ProductNumber", DbType = "varchar", Length = 50, IsNullable = true)]
        public string ProductNumber
        {
            get
            {
                return this._ProductNumber;
            }
            set
            {
                if ((this._ProductNumber != value))
                {
                    this.OnProductNumberChanging();
                    this.SendPropertyChanging("ProductNumber");
                    this._ProductNumber = value;
                    this.SendPropertyChanged("ProductNumber");
                    this.OnProductNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the productversion property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ProductVersion")]
        [XmlElementAttribute(ElementName = "ProductVersion", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("ProductVersion", DbType = "varchar", Length = 50, IsNullable = true)]
        public string ProductVersion
        {
            get
            {
                return this._ProductVersion;
            }
            set
            {
                if ((this._ProductVersion != value))
                {
                    this.OnProductVersionChanging();
                    this.SendPropertyChanging("ProductVersion");
                    this._ProductVersion = value;
                    this.SendPropertyChanged("ProductVersion");
                    this.OnProductVersionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 200, IsNullable = false)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the productiondate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ProductionDate")]
        [XmlElementAttribute(ElementName = "ProductionDate", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("ProductionDate", DbType = "datetime", Length = 8, IsNullable = true)]
        public System.Nullable<System.DateTime> ProductionDate
        {
            get
            {
                return this._ProductionDate;
            }
            set
            {
                if ((this._ProductionDate != value))
                {
                    this.OnProductionDateChanging();
                    this.SendPropertyChanging("ProductionDate");
                    this._ProductionDate = value;
                    this.SendPropertyChanged("ProductionDate");
                    this.OnProductionDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the model property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Model")]
        [XmlElementAttribute(ElementName = "Model", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Model", DbType = "varchar", Length = 100, IsNullable = true)]
        public string Model
        {
            get
            {
                return this._Model;
            }
            set
            {
                if ((this._Model != value))
                {
                    this.OnModelChanging();
                    this.SendPropertyChanging("Model");
                    this._Model = value;
                    this.SendPropertyChanged("Model");
                    this.OnModelChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the serialnumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "SerialNumber")]
        [XmlElementAttribute(ElementName = "SerialNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("SerialNumber", DbType = "varchar", Length = 50, IsNullable = true)]
        public string SerialNumber
        {
            get
            {
                return this._SerialNumber;
            }
            set
            {
                if ((this._SerialNumber != value))
                {
                    this.OnSerialNumberChanging();
                    this.SendPropertyChanging("SerialNumber");
                    this._SerialNumber = value;
                    this.SendPropertyChanged("SerialNumber");
                    this.OnSerialNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the category property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Category")]
        [XmlElementAttribute(ElementName = "Category", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Category", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Category
        {
            get
            {
                return this._Category;
            }
            set
            {
                if ((this._Category != value))
                {
                    this.OnCategoryChanging();
                    this.SendPropertyChanging("Category");
                    this._Category = value;
                    this.SendPropertyChanged("Category");
                    this.OnCategoryChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the units property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Units")]
        [XmlElementAttribute(ElementName = "Units", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Units", DbType = "int", Length = 4, IsNullable = true)]
        public System.Nullable<System.Int32> Units
        {
            get
            {
                return this._Units;
            }
            set
            {
                if ((this._Units != value))
                {
                    this.OnUnitsChanging();
                    this.SendPropertyChanging("Units");
                    this._Units = value;
                    this.SendPropertyChanged("Units");
                    this.OnUnitsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the unitprice property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "UnitPrice")]
        [XmlElementAttribute(ElementName = "UnitPrice", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("UnitPrice", DbType = "money", Length = 8, IsNullable = false)]
        public decimal UnitPrice
        {
            get
            {
                return this._UnitPrice;
            }
            set
            {
                if ((this._UnitPrice != value))
                {
                    this.OnUnitPriceChanging();
                    this.SendPropertyChanging("UnitPrice");
                    this._UnitPrice = value;
                    this.SendPropertyChanged("UnitPrice");
                    this.OnUnitPriceChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the status property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Status")]
        [XmlElementAttribute(ElementName = "Status", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Status", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging();
                    this.SendPropertyChanging("Status");
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the subcategory property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "SubCategory")]
        [XmlElementAttribute(ElementName = "SubCategory", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("SubCategory", DbType = "varchar", Length = 50, IsNullable = true)]
        public string SubCategory
        {
            get
            {
                return this._SubCategory;
            }
            set
            {
                if ((this._SubCategory != value))
                {
                    this.OnSubCategoryChanging();
                    this.SendPropertyChanging("SubCategory");
                    this._SubCategory = value;
                    this.SendPropertyChanged("SubCategory");
                    this.OnSubCategoryChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new products data entity.
        /// </summary>
        /// <param name="productID">Initial value of ProductID.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="unitPrice">Initial value of UnitPrice.</param>
        /// <returns>The Data.Products entity.</returns>
        public static Data.Products CreateProducts(int productID, string description, decimal unitPrice)
        {
            Data.Products products = new Data.Products();
            products.ProductID = productID;
            products.Description = description;
            products.UnitPrice = unitPrice;
            return products;
        }
    }
    #endregion
    
    #region InvoiceProducts Data Entity Type
    /// <summary>
    /// The invoiceproducts data object class.
    /// </summary>
    [DataContractAttribute(Name = "InvoiceProducts", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.InvoiceProducts")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class InvoiceProducts : DataBase
    {
        
        private int _InvoiceProductID;
        
        private int _InvoiceID;
        
        private int _ProductID;
        
        private int _Units;
        
        private string _Description;
        
        private decimal _UnitPrice;
        
        private decimal _Total;
        
        private decimal _GST;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On InvoiceProductID column data entity changed.
        /// </summary>
		partial void OnInvoiceProductIDChanged();

        /// <summary>
        /// On InvoiceProductID column data entity changing.
        /// </summary>
		partial void OnInvoiceProductIDChanging();

        /// <summary>
        /// On InvoiceID column data entity changed.
        /// </summary>
		partial void OnInvoiceIDChanged();

        /// <summary>
        /// On InvoiceID column data entity changing.
        /// </summary>
		partial void OnInvoiceIDChanging();

        /// <summary>
        /// On ProductID column data entity changed.
        /// </summary>
		partial void OnProductIDChanged();

        /// <summary>
        /// On ProductID column data entity changing.
        /// </summary>
		partial void OnProductIDChanging();

        /// <summary>
        /// On Units column data entity changed.
        /// </summary>
		partial void OnUnitsChanged();

        /// <summary>
        /// On Units column data entity changing.
        /// </summary>
		partial void OnUnitsChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

        /// <summary>
        /// On UnitPrice column data entity changed.
        /// </summary>
		partial void OnUnitPriceChanged();

        /// <summary>
        /// On UnitPrice column data entity changing.
        /// </summary>
		partial void OnUnitPriceChanging();

        /// <summary>
        /// On Total column data entity changed.
        /// </summary>
		partial void OnTotalChanged();

        /// <summary>
        /// On Total column data entity changing.
        /// </summary>
		partial void OnTotalChanging();

        /// <summary>
        /// On GST column data entity changed.
        /// </summary>
		partial void OnGSTChanged();

        /// <summary>
        /// On GST column data entity changing.
        /// </summary>
		partial void OnGSTChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public InvoiceProducts()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the invoiceproductid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "InvoiceProductID")]
        [XmlElementAttribute(ElementName = "InvoiceProductID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("InvoiceProductID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int InvoiceProductID
        {
            get
            {
                return this._InvoiceProductID;
            }
            set
            {
                if ((this._InvoiceProductID != value))
                {
                    this.OnInvoiceProductIDChanging();
                    this.SendPropertyChanging("InvoiceProductID");
                    this._InvoiceProductID = value;
                    this.SendPropertyChanged("InvoiceProductID");
                    this.OnInvoiceProductIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the invoiceid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "InvoiceID")]
        [XmlElementAttribute(ElementName = "InvoiceID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("InvoiceID", DbType = "int", Length = 4, IsNullable = false)]
        public int InvoiceID
        {
            get
            {
                return this._InvoiceID;
            }
            set
            {
                if ((this._InvoiceID != value))
                {
                    this.OnInvoiceIDChanging();
                    this.SendPropertyChanging("InvoiceID");
                    this._InvoiceID = value;
                    this.SendPropertyChanged("InvoiceID");
                    this.OnInvoiceIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the productid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ProductID")]
        [XmlElementAttribute(ElementName = "ProductID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("ProductID", DbType = "int", Length = 4, IsNullable = false)]
        public int ProductID
        {
            get
            {
                return this._ProductID;
            }
            set
            {
                if ((this._ProductID != value))
                {
                    this.OnProductIDChanging();
                    this.SendPropertyChanging("ProductID");
                    this._ProductID = value;
                    this.SendPropertyChanged("ProductID");
                    this.OnProductIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the units property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Units")]
        [XmlElementAttribute(ElementName = "Units", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Units", DbType = "int", Length = 4, IsNullable = false)]
        public int Units
        {
            get
            {
                return this._Units;
            }
            set
            {
                if ((this._Units != value))
                {
                    this.OnUnitsChanging();
                    this.SendPropertyChanging("Units");
                    this._Units = value;
                    this.SendPropertyChanged("Units");
                    this.OnUnitsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 500, IsNullable = false)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the unitprice property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "UnitPrice")]
        [XmlElementAttribute(ElementName = "UnitPrice", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("UnitPrice", DbType = "money", Length = 8, IsNullable = false)]
        public decimal UnitPrice
        {
            get
            {
                return this._UnitPrice;
            }
            set
            {
                if ((this._UnitPrice != value))
                {
                    this.OnUnitPriceChanging();
                    this.SendPropertyChanging("UnitPrice");
                    this._UnitPrice = value;
                    this.SendPropertyChanged("UnitPrice");
                    this.OnUnitPriceChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the total property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Total")]
        [XmlElementAttribute(ElementName = "Total", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Total", DbType = "money", Length = 8, IsNullable = false)]
        public decimal Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                if ((this._Total != value))
                {
                    this.OnTotalChanging();
                    this.SendPropertyChanging("Total");
                    this._Total = value;
                    this.SendPropertyChanged("Total");
                    this.OnTotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gst property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GST")]
        [XmlElementAttribute(ElementName = "GST", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("GST", DbType = "money", Length = 8, IsNullable = false)]
        public decimal GST
        {
            get
            {
                return this._GST;
            }
            set
            {
                if ((this._GST != value))
                {
                    this.OnGSTChanging();
                    this.SendPropertyChanging("GST");
                    this._GST = value;
                    this.SendPropertyChanged("GST");
                    this.OnGSTChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new invoiceproducts data entity.
        /// </summary>
        /// <param name="invoiceProductID">Initial value of InvoiceProductID.</param>
        /// <param name="invoiceID">Initial value of InvoiceID.</param>
        /// <param name="productID">Initial value of ProductID.</param>
        /// <param name="units">Initial value of Units.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="unitPrice">Initial value of UnitPrice.</param>
        /// <param name="total">Initial value of Total.</param>
        /// <param name="gST">Initial value of GST.</param>
        /// <returns>The Data.InvoiceProducts entity.</returns>
        public static Data.InvoiceProducts CreateInvoiceProducts(int invoiceProductID, int invoiceID, int productID, int units, string description, decimal unitPrice, decimal total, decimal gST)
        {
            Data.InvoiceProducts invoiceProducts = new Data.InvoiceProducts();
            invoiceProducts.InvoiceProductID = invoiceProductID;
            invoiceProducts.InvoiceID = invoiceID;
            invoiceProducts.ProductID = productID;
            invoiceProducts.Units = units;
            invoiceProducts.Description = description;
            invoiceProducts.UnitPrice = unitPrice;
            invoiceProducts.Total = total;
            invoiceProducts.GST = gST;
            return invoiceProducts;
        }
    }
    #endregion
    
    #region TaxReturn Data Entity Type
    /// <summary>
    /// The taxreturn data object class.
    /// </summary>
    [DataContractAttribute(Name = "TaxReturn", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.TaxReturn")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class TaxReturn : DataBase
    {
        
        private int _TaxReturnID;
        
        private int _CompanyID;
        
        private System.DateTime _TaxReturnDate;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _Comments;
        
        private System.Nullable<System.DateTime> _PaymentDate;
        
        private string _EFTCodeCustomerReference;
        
        private string _ATOCode;
        
        private string _ATOFileNumber;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On TaxReturnID column data entity changed.
        /// </summary>
		partial void OnTaxReturnIDChanged();

        /// <summary>
        /// On TaxReturnID column data entity changing.
        /// </summary>
		partial void OnTaxReturnIDChanging();

        /// <summary>
        /// On CompanyID column data entity changed.
        /// </summary>
		partial void OnCompanyIDChanged();

        /// <summary>
        /// On CompanyID column data entity changing.
        /// </summary>
		partial void OnCompanyIDChanging();

        /// <summary>
        /// On TaxReturnDate column data entity changed.
        /// </summary>
		partial void OnTaxReturnDateChanged();

        /// <summary>
        /// On TaxReturnDate column data entity changing.
        /// </summary>
		partial void OnTaxReturnDateChanging();

        /// <summary>
        /// On Amount column data entity changed.
        /// </summary>
		partial void OnAmountChanged();

        /// <summary>
        /// On Amount column data entity changing.
        /// </summary>
		partial void OnAmountChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

        /// <summary>
        /// On PaymentDate column data entity changed.
        /// </summary>
		partial void OnPaymentDateChanged();

        /// <summary>
        /// On PaymentDate column data entity changing.
        /// </summary>
		partial void OnPaymentDateChanging();

        /// <summary>
        /// On EFTCodeCustomerReference column data entity changed.
        /// </summary>
		partial void OnEFTCodeCustomerReferenceChanged();

        /// <summary>
        /// On EFTCodeCustomerReference column data entity changing.
        /// </summary>
		partial void OnEFTCodeCustomerReferenceChanging();

        /// <summary>
        /// On ATOCode column data entity changed.
        /// </summary>
		partial void OnATOCodeChanged();

        /// <summary>
        /// On ATOCode column data entity changing.
        /// </summary>
		partial void OnATOCodeChanging();

        /// <summary>
        /// On ATOFileNumber column data entity changed.
        /// </summary>
		partial void OnATOFileNumberChanged();

        /// <summary>
        /// On ATOFileNumber column data entity changing.
        /// </summary>
		partial void OnATOFileNumberChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public TaxReturn()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the taxreturnid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TaxReturnID")]
        [XmlElementAttribute(ElementName = "TaxReturnID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TaxReturnID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int TaxReturnID
        {
            get
            {
                return this._TaxReturnID;
            }
            set
            {
                if ((this._TaxReturnID != value))
                {
                    this.OnTaxReturnIDChanging();
                    this.SendPropertyChanging("TaxReturnID");
                    this._TaxReturnID = value;
                    this.SendPropertyChanged("TaxReturnID");
                    this.OnTaxReturnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companyid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CompanyID")]
        [XmlElementAttribute(ElementName = "CompanyID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CompanyID", DbType = "int", Length = 4, IsNullable = false)]
        public int CompanyID
        {
            get
            {
                return this._CompanyID;
            }
            set
            {
                if ((this._CompanyID != value))
                {
                    this.OnCompanyIDChanging();
                    this.SendPropertyChanging("CompanyID");
                    this._CompanyID = value;
                    this.SendPropertyChanged("CompanyID");
                    this.OnCompanyIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the taxreturndate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TaxReturnDate")]
        [XmlElementAttribute(ElementName = "TaxReturnDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TaxReturnDate", DbType = "datetime", Length = 8, IsNullable = false)]
        public System.DateTime TaxReturnDate
        {
            get
            {
                return this._TaxReturnDate;
            }
            set
            {
                if ((this._TaxReturnDate != value))
                {
                    this.OnTaxReturnDateChanging();
                    this.SendPropertyChanging("TaxReturnDate");
                    this._TaxReturnDate = value;
                    this.SendPropertyChanged("TaxReturnDate");
                    this.OnTaxReturnDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Amount", DbType = "money", Length = 8, IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this.OnAmountChanging();
                    this.SendPropertyChanging("Amount");
                    this._Amount = value;
                    this.SendPropertyChanged("Amount");
                    this.OnAmountChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 150, IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 300, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PaymentDate", DbType = "datetime", Length = 8, IsNullable = true)]
        public System.Nullable<System.DateTime> PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this.OnPaymentDateChanging();
                    this.SendPropertyChanging("PaymentDate");
                    this._PaymentDate = value;
                    this.SendPropertyChanged("PaymentDate");
                    this.OnPaymentDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the eftcodecustomerreference property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EFTCodeCustomerReference")]
        [XmlElementAttribute(ElementName = "EFTCodeCustomerReference", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("EFTCodeCustomerReference", DbType = "varchar", Length = 50, IsNullable = true)]
        public string EFTCodeCustomerReference
        {
            get
            {
                return this._EFTCodeCustomerReference;
            }
            set
            {
                if ((this._EFTCodeCustomerReference != value))
                {
                    this.OnEFTCodeCustomerReferenceChanging();
                    this.SendPropertyChanging("EFTCodeCustomerReference");
                    this._EFTCodeCustomerReference = value;
                    this.SendPropertyChanged("EFTCodeCustomerReference");
                    this.OnEFTCodeCustomerReferenceChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the atocode property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ATOCode")]
        [XmlElementAttribute(ElementName = "ATOCode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("ATOCode", DbType = "varchar", Length = 50, IsNullable = true)]
        public string ATOCode
        {
            get
            {
                return this._ATOCode;
            }
            set
            {
                if ((this._ATOCode != value))
                {
                    this.OnATOCodeChanging();
                    this.SendPropertyChanging("ATOCode");
                    this._ATOCode = value;
                    this.SendPropertyChanged("ATOCode");
                    this.OnATOCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the atofilenumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ATOFileNumber")]
        [XmlElementAttribute(ElementName = "ATOFileNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("ATOFileNumber", DbType = "varchar", Length = 50, IsNullable = true)]
        public string ATOFileNumber
        {
            get
            {
                return this._ATOFileNumber;
            }
            set
            {
                if ((this._ATOFileNumber != value))
                {
                    this.OnATOFileNumberChanging();
                    this.SendPropertyChanging("ATOFileNumber");
                    this._ATOFileNumber = value;
                    this.SendPropertyChanged("ATOFileNumber");
                    this.OnATOFileNumberChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new taxreturn data entity.
        /// </summary>
        /// <param name="taxReturnID">Initial value of TaxReturnID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="taxReturnDate">Initial value of TaxReturnDate.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.TaxReturn entity.</returns>
        public static Data.TaxReturn CreateTaxReturn(int taxReturnID, int companyID, System.DateTime taxReturnDate, decimal amount)
        {
            Data.TaxReturn taxReturn = new Data.TaxReturn();
            taxReturn.TaxReturnID = taxReturnID;
            taxReturn.CompanyID = companyID;
            taxReturn.TaxReturnDate = taxReturnDate;
            taxReturn.Amount = amount;
            return taxReturn;
        }
    }
    #endregion
    
    #region CompanyPAYGInstalment Data Entity Type
    /// <summary>
    /// The companypayginstalment data object class.
    /// </summary>
    [DataContractAttribute(Name = "CompanyPAYGInstalment", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.CompanyPAYGInstalment")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class CompanyPAYGInstalment : DataBase
    {
        
        private int _PAYGInstID;
        
        private int _CompanyID;
        
        private string _AssessmentYear;
        
        private System.Nullable<System.Double> _InstalRate;
        
        private System.Nullable<System.Decimal> _TaxOnIncome;
        
        private System.Nullable<System.Decimal> _GDPTax;
        
        private System.Nullable<System.Decimal> _InstalCalTaxOffice;
        
        private System.Nullable<System.DateTime> _InstalmentDate;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On PAYGInstID column data entity changed.
        /// </summary>
		partial void OnPAYGInstIDChanged();

        /// <summary>
        /// On PAYGInstID column data entity changing.
        /// </summary>
		partial void OnPAYGInstIDChanging();

        /// <summary>
        /// On CompanyID column data entity changed.
        /// </summary>
		partial void OnCompanyIDChanged();

        /// <summary>
        /// On CompanyID column data entity changing.
        /// </summary>
		partial void OnCompanyIDChanging();

        /// <summary>
        /// On AssessmentYear column data entity changed.
        /// </summary>
		partial void OnAssessmentYearChanged();

        /// <summary>
        /// On AssessmentYear column data entity changing.
        /// </summary>
		partial void OnAssessmentYearChanging();

        /// <summary>
        /// On InstalRate column data entity changed.
        /// </summary>
		partial void OnInstalRateChanged();

        /// <summary>
        /// On InstalRate column data entity changing.
        /// </summary>
		partial void OnInstalRateChanging();

        /// <summary>
        /// On TaxOnIncome column data entity changed.
        /// </summary>
		partial void OnTaxOnIncomeChanged();

        /// <summary>
        /// On TaxOnIncome column data entity changing.
        /// </summary>
		partial void OnTaxOnIncomeChanging();

        /// <summary>
        /// On GDPTax column data entity changed.
        /// </summary>
		partial void OnGDPTaxChanged();

        /// <summary>
        /// On GDPTax column data entity changing.
        /// </summary>
		partial void OnGDPTaxChanging();

        /// <summary>
        /// On InstalCalTaxOffice column data entity changed.
        /// </summary>
		partial void OnInstalCalTaxOfficeChanged();

        /// <summary>
        /// On InstalCalTaxOffice column data entity changing.
        /// </summary>
		partial void OnInstalCalTaxOfficeChanging();

        /// <summary>
        /// On InstalmentDate column data entity changed.
        /// </summary>
		partial void OnInstalmentDateChanged();

        /// <summary>
        /// On InstalmentDate column data entity changing.
        /// </summary>
		partial void OnInstalmentDateChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public CompanyPAYGInstalment()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the payginstid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PAYGInstID")]
        [XmlElementAttribute(ElementName = "PAYGInstID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("PAYGInstID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int PAYGInstID
        {
            get
            {
                return this._PAYGInstID;
            }
            set
            {
                if ((this._PAYGInstID != value))
                {
                    this.OnPAYGInstIDChanging();
                    this.SendPropertyChanging("PAYGInstID");
                    this._PAYGInstID = value;
                    this.SendPropertyChanged("PAYGInstID");
                    this.OnPAYGInstIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companyid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CompanyID")]
        [XmlElementAttribute(ElementName = "CompanyID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CompanyID", DbType = "int", Length = 4, IsNullable = false)]
        public int CompanyID
        {
            get
            {
                return this._CompanyID;
            }
            set
            {
                if ((this._CompanyID != value))
                {
                    this.OnCompanyIDChanging();
                    this.SendPropertyChanging("CompanyID");
                    this._CompanyID = value;
                    this.SendPropertyChanged("CompanyID");
                    this.OnCompanyIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the assessmentyear property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AssessmentYear")]
        [XmlElementAttribute(ElementName = "AssessmentYear", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("AssessmentYear", DbType = "varchar", Length = 50, IsNullable = true)]
        public string AssessmentYear
        {
            get
            {
                return this._AssessmentYear;
            }
            set
            {
                if ((this._AssessmentYear != value))
                {
                    this.OnAssessmentYearChanging();
                    this.SendPropertyChanging("AssessmentYear");
                    this._AssessmentYear = value;
                    this.SendPropertyChanged("AssessmentYear");
                    this.OnAssessmentYearChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the instalrate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "InstalRate")]
        [XmlElementAttribute(ElementName = "InstalRate", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("InstalRate", DbType = "float", Length = 8, IsNullable = true)]
        public System.Nullable<System.Double> InstalRate
        {
            get
            {
                return this._InstalRate;
            }
            set
            {
                if ((this._InstalRate != value))
                {
                    this.OnInstalRateChanging();
                    this.SendPropertyChanging("InstalRate");
                    this._InstalRate = value;
                    this.SendPropertyChanged("InstalRate");
                    this.OnInstalRateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the taxonincome property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TaxOnIncome")]
        [XmlElementAttribute(ElementName = "TaxOnIncome", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("TaxOnIncome", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> TaxOnIncome
        {
            get
            {
                return this._TaxOnIncome;
            }
            set
            {
                if ((this._TaxOnIncome != value))
                {
                    this.OnTaxOnIncomeChanging();
                    this.SendPropertyChanging("TaxOnIncome");
                    this._TaxOnIncome = value;
                    this.SendPropertyChanged("TaxOnIncome");
                    this.OnTaxOnIncomeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gdptax property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GDPTax")]
        [XmlElementAttribute(ElementName = "GDPTax", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("GDPTax", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> GDPTax
        {
            get
            {
                return this._GDPTax;
            }
            set
            {
                if ((this._GDPTax != value))
                {
                    this.OnGDPTaxChanging();
                    this.SendPropertyChanging("GDPTax");
                    this._GDPTax = value;
                    this.SendPropertyChanged("GDPTax");
                    this.OnGDPTaxChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the instalcaltaxoffice property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "InstalCalTaxOffice")]
        [XmlElementAttribute(ElementName = "InstalCalTaxOffice", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("InstalCalTaxOffice", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> InstalCalTaxOffice
        {
            get
            {
                return this._InstalCalTaxOffice;
            }
            set
            {
                if ((this._InstalCalTaxOffice != value))
                {
                    this.OnInstalCalTaxOfficeChanging();
                    this.SendPropertyChanging("InstalCalTaxOffice");
                    this._InstalCalTaxOffice = value;
                    this.SendPropertyChanged("InstalCalTaxOffice");
                    this.OnInstalCalTaxOfficeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the instalmentdate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "InstalmentDate")]
        [XmlElementAttribute(ElementName = "InstalmentDate", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("InstalmentDate", DbType = "datetime", Length = 8, IsNullable = true)]
        public System.Nullable<System.DateTime> InstalmentDate
        {
            get
            {
                return this._InstalmentDate;
            }
            set
            {
                if ((this._InstalmentDate != value))
                {
                    this.OnInstalmentDateChanging();
                    this.SendPropertyChanging("InstalmentDate");
                    this._InstalmentDate = value;
                    this.SendPropertyChanged("InstalmentDate");
                    this.OnInstalmentDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new companypayginstalment data entity.
        /// </summary>
        /// <param name="pAYGInstID">Initial value of PAYGInstID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <returns>The Data.CompanyPAYGInstalment entity.</returns>
        public static Data.CompanyPAYGInstalment CreateCompanyPAYGInstalment(int pAYGInstID, int companyID)
        {
            Data.CompanyPAYGInstalment companyPAYGInstalment = new Data.CompanyPAYGInstalment();
            companyPAYGInstalment.PAYGInstID = pAYGInstID;
            companyPAYGInstalment.CompanyID = companyID;
            return companyPAYGInstalment;
        }
    }
    #endregion
    
    #region Wages Data Entity Type
    /// <summary>
    /// The wages data object class.
    /// </summary>
    [DataContractAttribute(Name = "Wages", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Wages")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Wages : DataBase
    {
        
        private int _WageID;
        
        private int _EmployeeID;
        
        private int _AccountID;
        
        private System.DateTime _PaymentDate;
        
        private double _Hours;
        
        private decimal _Rate;
        
        private decimal _Amount;
        
        private decimal _PAYG;
        
        private string _Description;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On WageID column data entity changed.
        /// </summary>
		partial void OnWageIDChanged();

        /// <summary>
        /// On WageID column data entity changing.
        /// </summary>
		partial void OnWageIDChanging();

        /// <summary>
        /// On EmployeeID column data entity changed.
        /// </summary>
		partial void OnEmployeeIDChanged();

        /// <summary>
        /// On EmployeeID column data entity changing.
        /// </summary>
		partial void OnEmployeeIDChanging();

        /// <summary>
        /// On AccountID column data entity changed.
        /// </summary>
		partial void OnAccountIDChanged();

        /// <summary>
        /// On AccountID column data entity changing.
        /// </summary>
		partial void OnAccountIDChanging();

        /// <summary>
        /// On PaymentDate column data entity changed.
        /// </summary>
		partial void OnPaymentDateChanged();

        /// <summary>
        /// On PaymentDate column data entity changing.
        /// </summary>
		partial void OnPaymentDateChanging();

        /// <summary>
        /// On Hours column data entity changed.
        /// </summary>
		partial void OnHoursChanged();

        /// <summary>
        /// On Hours column data entity changing.
        /// </summary>
		partial void OnHoursChanging();

        /// <summary>
        /// On Rate column data entity changed.
        /// </summary>
		partial void OnRateChanged();

        /// <summary>
        /// On Rate column data entity changing.
        /// </summary>
		partial void OnRateChanging();

        /// <summary>
        /// On Amount column data entity changed.
        /// </summary>
		partial void OnAmountChanged();

        /// <summary>
        /// On Amount column data entity changing.
        /// </summary>
		partial void OnAmountChanging();

        /// <summary>
        /// On PAYG column data entity changed.
        /// </summary>
		partial void OnPAYGChanged();

        /// <summary>
        /// On PAYG column data entity changing.
        /// </summary>
		partial void OnPAYGChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Wages()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the wageid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "WageID")]
        [XmlElementAttribute(ElementName = "WageID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("WageID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int WageID
        {
            get
            {
                return this._WageID;
            }
            set
            {
                if ((this._WageID != value))
                {
                    this.OnWageIDChanging();
                    this.SendPropertyChanging("WageID");
                    this._WageID = value;
                    this.SendPropertyChanged("WageID");
                    this.OnWageIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("EmployeeID", DbType = "int", Length = 4, IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this.OnEmployeeIDChanging();
                    this.SendPropertyChanging("EmployeeID");
                    this._EmployeeID = value;
                    this.SendPropertyChanged("EmployeeID");
                    this.OnEmployeeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("AccountID", DbType = "int", Length = 4, IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this.OnAccountIDChanging();
                    this.SendPropertyChanging("AccountID");
                    this._AccountID = value;
                    this.SendPropertyChanged("AccountID");
                    this.OnAccountIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("PaymentDate", DbType = "datetime", Length = 8, IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this.OnPaymentDateChanging();
                    this.SendPropertyChanging("PaymentDate");
                    this._PaymentDate = value;
                    this.SendPropertyChanged("PaymentDate");
                    this.OnPaymentDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the hours property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Hours")]
        [XmlElementAttribute(ElementName = "Hours", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Hours", DbType = "float", Length = 8, IsNullable = false)]
        public double Hours
        {
            get
            {
                return this._Hours;
            }
            set
            {
                if ((this._Hours != value))
                {
                    this.OnHoursChanging();
                    this.SendPropertyChanging("Hours");
                    this._Hours = value;
                    this.SendPropertyChanged("Hours");
                    this.OnHoursChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the rate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Rate")]
        [XmlElementAttribute(ElementName = "Rate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Rate", DbType = "money", Length = 8, IsNullable = false)]
        public decimal Rate
        {
            get
            {
                return this._Rate;
            }
            set
            {
                if ((this._Rate != value))
                {
                    this.OnRateChanging();
                    this.SendPropertyChanging("Rate");
                    this._Rate = value;
                    this.SendPropertyChanged("Rate");
                    this.OnRateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Amount", DbType = "money", Length = 8, IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this.OnAmountChanging();
                    this.SendPropertyChanging("Amount");
                    this._Amount = value;
                    this.SendPropertyChanged("Amount");
                    this.OnAmountChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the payg property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PAYG")]
        [XmlElementAttribute(ElementName = "PAYG", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("PAYG", DbType = "money", Length = 8, IsNullable = false)]
        public decimal PAYG
        {
            get
            {
                return this._PAYG;
            }
            set
            {
                if ((this._PAYG != value))
                {
                    this.OnPAYGChanging();
                    this.SendPropertyChanging("PAYG");
                    this._PAYG = value;
                    this.SendPropertyChanged("PAYG");
                    this.OnPAYGChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 100, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new wages data entity.
        /// </summary>
        /// <param name="wageID">Initial value of WageID.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="hours">Initial value of Hours.</param>
        /// <param name="rate">Initial value of Rate.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <param name="pAYG">Initial value of PAYG.</param>
        /// <returns>The Data.Wages entity.</returns>
        public static Data.Wages CreateWages(int wageID, int employeeID, int accountID, System.DateTime paymentDate, double hours, decimal rate, decimal amount, decimal pAYG)
        {
            Data.Wages wages = new Data.Wages();
            wages.WageID = wageID;
            wages.EmployeeID = employeeID;
            wages.AccountID = accountID;
            wages.PaymentDate = paymentDate;
            wages.Hours = hours;
            wages.Rate = rate;
            wages.Amount = amount;
            wages.PAYG = pAYG;
            return wages;
        }
    }
    #endregion
    
    #region InvoiceDetails Data Entity Type
    /// <summary>
    /// The invoicedetails data object class.
    /// </summary>
    [DataContractAttribute(Name = "InvoiceDetails", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.InvoiceDetails")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class InvoiceDetails : DataBase
    {
        
        private int _InvoiceDetailsID;
        
        private int _InvoiceID;
        
        private double _Hours;
        
        private string _Description;
        
        private decimal _Rate;
        
        private decimal _Total;
        
        private decimal _GST;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On InvoiceDetailsID column data entity changed.
        /// </summary>
		partial void OnInvoiceDetailsIDChanged();

        /// <summary>
        /// On InvoiceDetailsID column data entity changing.
        /// </summary>
		partial void OnInvoiceDetailsIDChanging();

        /// <summary>
        /// On InvoiceID column data entity changed.
        /// </summary>
		partial void OnInvoiceIDChanged();

        /// <summary>
        /// On InvoiceID column data entity changing.
        /// </summary>
		partial void OnInvoiceIDChanging();

        /// <summary>
        /// On Hours column data entity changed.
        /// </summary>
		partial void OnHoursChanged();

        /// <summary>
        /// On Hours column data entity changing.
        /// </summary>
		partial void OnHoursChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

        /// <summary>
        /// On Rate column data entity changed.
        /// </summary>
		partial void OnRateChanged();

        /// <summary>
        /// On Rate column data entity changing.
        /// </summary>
		partial void OnRateChanging();

        /// <summary>
        /// On Total column data entity changed.
        /// </summary>
		partial void OnTotalChanged();

        /// <summary>
        /// On Total column data entity changing.
        /// </summary>
		partial void OnTotalChanging();

        /// <summary>
        /// On GST column data entity changed.
        /// </summary>
		partial void OnGSTChanged();

        /// <summary>
        /// On GST column data entity changing.
        /// </summary>
		partial void OnGSTChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public InvoiceDetails()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the invoicedetailsid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "InvoiceDetailsID")]
        [XmlElementAttribute(ElementName = "InvoiceDetailsID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("InvoiceDetailsID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int InvoiceDetailsID
        {
            get
            {
                return this._InvoiceDetailsID;
            }
            set
            {
                if ((this._InvoiceDetailsID != value))
                {
                    this.OnInvoiceDetailsIDChanging();
                    this.SendPropertyChanging("InvoiceDetailsID");
                    this._InvoiceDetailsID = value;
                    this.SendPropertyChanged("InvoiceDetailsID");
                    this.OnInvoiceDetailsIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the invoiceid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "InvoiceID")]
        [XmlElementAttribute(ElementName = "InvoiceID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("InvoiceID", DbType = "int", Length = 4, IsNullable = false)]
        public int InvoiceID
        {
            get
            {
                return this._InvoiceID;
            }
            set
            {
                if ((this._InvoiceID != value))
                {
                    this.OnInvoiceIDChanging();
                    this.SendPropertyChanging("InvoiceID");
                    this._InvoiceID = value;
                    this.SendPropertyChanged("InvoiceID");
                    this.OnInvoiceIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the hours property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Hours")]
        [XmlElementAttribute(ElementName = "Hours", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Hours", DbType = "float", Length = 8, IsNullable = false)]
        public double Hours
        {
            get
            {
                return this._Hours;
            }
            set
            {
                if ((this._Hours != value))
                {
                    this.OnHoursChanging();
                    this.SendPropertyChanging("Hours");
                    this._Hours = value;
                    this.SendPropertyChanged("Hours");
                    this.OnHoursChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 500, IsNullable = false)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the rate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Rate")]
        [XmlElementAttribute(ElementName = "Rate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Rate", DbType = "money", Length = 8, IsNullable = false)]
        public decimal Rate
        {
            get
            {
                return this._Rate;
            }
            set
            {
                if ((this._Rate != value))
                {
                    this.OnRateChanging();
                    this.SendPropertyChanging("Rate");
                    this._Rate = value;
                    this.SendPropertyChanged("Rate");
                    this.OnRateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the total property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Total")]
        [XmlElementAttribute(ElementName = "Total", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Total", DbType = "money", Length = 8, IsNullable = false)]
        public decimal Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                if ((this._Total != value))
                {
                    this.OnTotalChanging();
                    this.SendPropertyChanging("Total");
                    this._Total = value;
                    this.SendPropertyChanged("Total");
                    this.OnTotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gst property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GST")]
        [XmlElementAttribute(ElementName = "GST", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("GST", DbType = "money", Length = 8, IsNullable = false)]
        public decimal GST
        {
            get
            {
                return this._GST;
            }
            set
            {
                if ((this._GST != value))
                {
                    this.OnGSTChanging();
                    this.SendPropertyChanging("GST");
                    this._GST = value;
                    this.SendPropertyChanged("GST");
                    this.OnGSTChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new invoicedetails data entity.
        /// </summary>
        /// <param name="invoiceDetailsID">Initial value of InvoiceDetailsID.</param>
        /// <param name="invoiceID">Initial value of InvoiceID.</param>
        /// <param name="hours">Initial value of Hours.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="rate">Initial value of Rate.</param>
        /// <param name="total">Initial value of Total.</param>
        /// <param name="gST">Initial value of GST.</param>
        /// <returns>The Data.InvoiceDetails entity.</returns>
        public static Data.InvoiceDetails CreateInvoiceDetails(int invoiceDetailsID, int invoiceID, double hours, string description, decimal rate, decimal total, decimal gST)
        {
            Data.InvoiceDetails invoiceDetails = new Data.InvoiceDetails();
            invoiceDetails.InvoiceDetailsID = invoiceDetailsID;
            invoiceDetails.InvoiceID = invoiceID;
            invoiceDetails.Hours = hours;
            invoiceDetails.Description = description;
            invoiceDetails.Rate = rate;
            invoiceDetails.Total = total;
            invoiceDetails.GST = gST;
            return invoiceDetails;
        }
    }
    #endregion
    
    #region DataMemberTables Data Entity Type
    /// <summary>
    /// The datamembertables data object class.
    /// </summary>
    [DataContractAttribute(Name = "DataMemberTables", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.DataMemberTables")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class DataMemberTables : DataBase
    {
        
        private int _DataMemberID;
        
        private string _DataTables;
        
        private string _TableName;
        
        private string _Reference;
        
        private string _NameTo;
        
        private string _DataTableKeyName;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DataMemberID column data entity changed.
        /// </summary>
		partial void OnDataMemberIDChanged();

        /// <summary>
        /// On DataMemberID column data entity changing.
        /// </summary>
		partial void OnDataMemberIDChanging();

        /// <summary>
        /// On DataTables column data entity changed.
        /// </summary>
		partial void OnDataTablesChanged();

        /// <summary>
        /// On DataTables column data entity changing.
        /// </summary>
		partial void OnDataTablesChanging();

        /// <summary>
        /// On TableName column data entity changed.
        /// </summary>
		partial void OnTableNameChanged();

        /// <summary>
        /// On TableName column data entity changing.
        /// </summary>
		partial void OnTableNameChanging();

        /// <summary>
        /// On Reference column data entity changed.
        /// </summary>
		partial void OnReferenceChanged();

        /// <summary>
        /// On Reference column data entity changing.
        /// </summary>
		partial void OnReferenceChanging();

        /// <summary>
        /// On NameTo column data entity changed.
        /// </summary>
		partial void OnNameToChanged();

        /// <summary>
        /// On NameTo column data entity changing.
        /// </summary>
		partial void OnNameToChanging();

        /// <summary>
        /// On DataTableKeyName column data entity changed.
        /// </summary>
		partial void OnDataTableKeyNameChanged();

        /// <summary>
        /// On DataTableKeyName column data entity changing.
        /// </summary>
		partial void OnDataTableKeyNameChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public DataMemberTables()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the datamemberid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataMemberID")]
        [XmlElementAttribute(ElementName = "DataMemberID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataMemberID", DbType = "int", Length = 4, IsNullable = false)]
        public int DataMemberID
        {
            get
            {
                return this._DataMemberID;
            }
            set
            {
                if ((this._DataMemberID != value))
                {
                    this.OnDataMemberIDChanging();
                    this.SendPropertyChanging("DataMemberID");
                    this._DataMemberID = value;
                    this.SendPropertyChanged("DataMemberID");
                    this.OnDataMemberIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the datatables property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataTables")]
        [XmlElementAttribute(ElementName = "DataTables", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataTables", DbType = "varchar", Length = 50, IsNullable = false)]
        public string DataTables
        {
            get
            {
                return this._DataTables;
            }
            set
            {
                if ((this._DataTables != value))
                {
                    this.OnDataTablesChanging();
                    this.SendPropertyChanging("DataTables");
                    this._DataTables = value;
                    this.SendPropertyChanged("DataTables");
                    this.OnDataTablesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tablename property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TableName")]
        [XmlElementAttribute(ElementName = "TableName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TableName", DbType = "varchar", Length = 50, IsNullable = false)]
        public string TableName
        {
            get
            {
                return this._TableName;
            }
            set
            {
                if ((this._TableName != value))
                {
                    this.OnTableNameChanging();
                    this.SendPropertyChanging("TableName");
                    this._TableName = value;
                    this.SendPropertyChanged("TableName");
                    this.OnTableNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the reference property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Reference")]
        [XmlElementAttribute(ElementName = "Reference", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Reference", DbType = "varchar", Length = 50, IsNullable = false)]
        public string Reference
        {
            get
            {
                return this._Reference;
            }
            set
            {
                if ((this._Reference != value))
                {
                    this.OnReferenceChanging();
                    this.SendPropertyChanging("Reference");
                    this._Reference = value;
                    this.SendPropertyChanged("Reference");
                    this.OnReferenceChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the nameto property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "NameTo")]
        [XmlElementAttribute(ElementName = "NameTo", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("NameTo", DbType = "varchar", Length = 50, IsNullable = true)]
        public string NameTo
        {
            get
            {
                return this._NameTo;
            }
            set
            {
                if ((this._NameTo != value))
                {
                    this.OnNameToChanging();
                    this.SendPropertyChanging("NameTo");
                    this._NameTo = value;
                    this.SendPropertyChanged("NameTo");
                    this.OnNameToChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the datatablekeyname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataTableKeyName")]
        [XmlElementAttribute(ElementName = "DataTableKeyName", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("DataTableKeyName", DbType = "varchar", Length = 50, IsNullable = true)]
        public string DataTableKeyName
        {
            get
            {
                return this._DataTableKeyName;
            }
            set
            {
                if ((this._DataTableKeyName != value))
                {
                    this.OnDataTableKeyNameChanging();
                    this.SendPropertyChanging("DataTableKeyName");
                    this._DataTableKeyName = value;
                    this.SendPropertyChanged("DataTableKeyName");
                    this.OnDataTableKeyNameChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new datamembertables data entity.
        /// </summary>
        /// <param name="dataMemberID">Initial value of DataMemberID.</param>
        /// <param name="dataTables">Initial value of DataTables.</param>
        /// <param name="tableName">Initial value of TableName.</param>
        /// <param name="reference">Initial value of Reference.</param>
        /// <returns>The Data.DataMemberTables entity.</returns>
        public static Data.DataMemberTables CreateDataMemberTables(int dataMemberID, string dataTables, string tableName, string reference)
        {
            Data.DataMemberTables dataMemberTables = new Data.DataMemberTables();
            dataMemberTables.DataMemberID = dataMemberID;
            dataMemberTables.DataTables = dataTables;
            dataMemberTables.TableName = tableName;
            dataMemberTables.Reference = reference;
            return dataMemberTables;
        }
    }
    #endregion
    
    #region AssetCategory Data Entity Type
    /// <summary>
    /// The assetcategory data object class.
    /// </summary>
    [DataContractAttribute(Name = "AssetCategory", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.AssetCategory")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class AssetCategory : DataBase
    {
        
        private int _CategoryID;
        
        private string _Category;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On CategoryID column data entity changed.
        /// </summary>
		partial void OnCategoryIDChanged();

        /// <summary>
        /// On CategoryID column data entity changing.
        /// </summary>
		partial void OnCategoryIDChanging();

        /// <summary>
        /// On Category column data entity changed.
        /// </summary>
		partial void OnCategoryChanged();

        /// <summary>
        /// On Category column data entity changing.
        /// </summary>
		partial void OnCategoryChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public AssetCategory()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the categoryid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CategoryID")]
        [XmlElementAttribute(ElementName = "CategoryID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CategoryID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int CategoryID
        {
            get
            {
                return this._CategoryID;
            }
            set
            {
                if ((this._CategoryID != value))
                {
                    this.OnCategoryIDChanging();
                    this.SendPropertyChanging("CategoryID");
                    this._CategoryID = value;
                    this.SendPropertyChanged("CategoryID");
                    this.OnCategoryIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the category property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Category")]
        [XmlElementAttribute(ElementName = "Category", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Category", DbType = "varchar", Length = 50, IsNullable = false)]
        public string Category
        {
            get
            {
                return this._Category;
            }
            set
            {
                if ((this._Category != value))
                {
                    this.OnCategoryChanging();
                    this.SendPropertyChanging("Category");
                    this._Category = value;
                    this.SendPropertyChanged("Category");
                    this.OnCategoryChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new assetcategory data entity.
        /// </summary>
        /// <param name="categoryID">Initial value of CategoryID.</param>
        /// <param name="category">Initial value of Category.</param>
        /// <returns>The Data.AssetCategory entity.</returns>
        public static Data.AssetCategory CreateAssetCategory(int categoryID, string category)
        {
            Data.AssetCategory assetCategory = new Data.AssetCategory();
            assetCategory.CategoryID = categoryID;
            assetCategory.Category = category;
            return assetCategory;
        }
    }
    #endregion
    
    #region ProductCategory Data Entity Type
    /// <summary>
    /// The productcategory data object class.
    /// </summary>
    [DataContractAttribute(Name = "ProductCategory", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.ProductCategory")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class ProductCategory : DataBase
    {
        
        private int _CategoryID;
        
        private string _Category;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On CategoryID column data entity changed.
        /// </summary>
		partial void OnCategoryIDChanged();

        /// <summary>
        /// On CategoryID column data entity changing.
        /// </summary>
		partial void OnCategoryIDChanging();

        /// <summary>
        /// On Category column data entity changed.
        /// </summary>
		partial void OnCategoryChanged();

        /// <summary>
        /// On Category column data entity changing.
        /// </summary>
		partial void OnCategoryChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public ProductCategory()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the categoryid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CategoryID")]
        [XmlElementAttribute(ElementName = "CategoryID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CategoryID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int CategoryID
        {
            get
            {
                return this._CategoryID;
            }
            set
            {
                if ((this._CategoryID != value))
                {
                    this.OnCategoryIDChanging();
                    this.SendPropertyChanging("CategoryID");
                    this._CategoryID = value;
                    this.SendPropertyChanged("CategoryID");
                    this.OnCategoryIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the category property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Category")]
        [XmlElementAttribute(ElementName = "Category", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Category", DbType = "varchar", Length = 50, IsNullable = false)]
        public string Category
        {
            get
            {
                return this._Category;
            }
            set
            {
                if ((this._Category != value))
                {
                    this.OnCategoryChanging();
                    this.SendPropertyChanging("Category");
                    this._Category = value;
                    this.SendPropertyChanged("Category");
                    this.OnCategoryChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new productcategory data entity.
        /// </summary>
        /// <param name="categoryID">Initial value of CategoryID.</param>
        /// <param name="category">Initial value of Category.</param>
        /// <returns>The Data.ProductCategory entity.</returns>
        public static Data.ProductCategory CreateProductCategory(int categoryID, string category)
        {
            Data.ProductCategory productCategory = new Data.ProductCategory();
            productCategory.CategoryID = categoryID;
            productCategory.Category = category;
            return productCategory;
        }
    }
    #endregion
    
    #region ProductSubCategory Data Entity Type
    /// <summary>
    /// The productsubcategory data object class.
    /// </summary>
    [DataContractAttribute(Name = "ProductSubCategory", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.ProductSubCategory")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class ProductSubCategory : DataBase
    {
        
        private int _SubCategoryID;
        
        private int _CategoryID;
        
        private string _SubCategoryName;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On SubCategoryID column data entity changed.
        /// </summary>
		partial void OnSubCategoryIDChanged();

        /// <summary>
        /// On SubCategoryID column data entity changing.
        /// </summary>
		partial void OnSubCategoryIDChanging();

        /// <summary>
        /// On CategoryID column data entity changed.
        /// </summary>
		partial void OnCategoryIDChanged();

        /// <summary>
        /// On CategoryID column data entity changing.
        /// </summary>
		partial void OnCategoryIDChanging();

        /// <summary>
        /// On SubCategoryName column data entity changed.
        /// </summary>
		partial void OnSubCategoryNameChanged();

        /// <summary>
        /// On SubCategoryName column data entity changing.
        /// </summary>
		partial void OnSubCategoryNameChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public ProductSubCategory()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the subcategoryid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "SubCategoryID")]
        [XmlElementAttribute(ElementName = "SubCategoryID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("SubCategoryID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int SubCategoryID
        {
            get
            {
                return this._SubCategoryID;
            }
            set
            {
                if ((this._SubCategoryID != value))
                {
                    this.OnSubCategoryIDChanging();
                    this.SendPropertyChanging("SubCategoryID");
                    this._SubCategoryID = value;
                    this.SendPropertyChanged("SubCategoryID");
                    this.OnSubCategoryIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the categoryid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CategoryID")]
        [XmlElementAttribute(ElementName = "CategoryID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CategoryID", DbType = "int", Length = 4, IsNullable = false)]
        public int CategoryID
        {
            get
            {
                return this._CategoryID;
            }
            set
            {
                if ((this._CategoryID != value))
                {
                    this.OnCategoryIDChanging();
                    this.SendPropertyChanging("CategoryID");
                    this._CategoryID = value;
                    this.SendPropertyChanged("CategoryID");
                    this.OnCategoryIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the subcategoryname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "SubCategoryName")]
        [XmlElementAttribute(ElementName = "SubCategoryName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("SubCategoryName", DbType = "varchar", Length = 100, IsNullable = false)]
        public string SubCategoryName
        {
            get
            {
                return this._SubCategoryName;
            }
            set
            {
                if ((this._SubCategoryName != value))
                {
                    this.OnSubCategoryNameChanging();
                    this.SendPropertyChanging("SubCategoryName");
                    this._SubCategoryName = value;
                    this.SendPropertyChanged("SubCategoryName");
                    this.OnSubCategoryNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new productsubcategory data entity.
        /// </summary>
        /// <param name="subCategoryID">Initial value of SubCategoryID.</param>
        /// <param name="categoryID">Initial value of CategoryID.</param>
        /// <param name="subCategoryName">Initial value of SubCategoryName.</param>
        /// <returns>The Data.ProductSubCategory entity.</returns>
        public static Data.ProductSubCategory CreateProductSubCategory(int subCategoryID, int categoryID, string subCategoryName)
        {
            Data.ProductSubCategory productSubCategory = new Data.ProductSubCategory();
            productSubCategory.SubCategoryID = subCategoryID;
            productSubCategory.CategoryID = categoryID;
            productSubCategory.SubCategoryName = subCategoryName;
            return productSubCategory;
        }
    }
    #endregion
    
    #region Super Data Entity Type
    /// <summary>
    /// The super data object class.
    /// </summary>
    [DataContractAttribute(Name = "Super", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Super")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Super : DataBase
    {
        
        private int _SuperID;
        
        private int _EmployeeID;
        
        private int _SuperFundID;
        
        private System.DateTime _PaymentDate;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On SuperID column data entity changed.
        /// </summary>
		partial void OnSuperIDChanged();

        /// <summary>
        /// On SuperID column data entity changing.
        /// </summary>
		partial void OnSuperIDChanging();

        /// <summary>
        /// On EmployeeID column data entity changed.
        /// </summary>
		partial void OnEmployeeIDChanged();

        /// <summary>
        /// On EmployeeID column data entity changing.
        /// </summary>
		partial void OnEmployeeIDChanging();

        /// <summary>
        /// On SuperFundID column data entity changed.
        /// </summary>
		partial void OnSuperFundIDChanged();

        /// <summary>
        /// On SuperFundID column data entity changing.
        /// </summary>
		partial void OnSuperFundIDChanging();

        /// <summary>
        /// On PaymentDate column data entity changed.
        /// </summary>
		partial void OnPaymentDateChanged();

        /// <summary>
        /// On PaymentDate column data entity changing.
        /// </summary>
		partial void OnPaymentDateChanging();

        /// <summary>
        /// On Amount column data entity changed.
        /// </summary>
		partial void OnAmountChanged();

        /// <summary>
        /// On Amount column data entity changing.
        /// </summary>
		partial void OnAmountChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Super()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the superid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "SuperID")]
        [XmlElementAttribute(ElementName = "SuperID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("SuperID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int SuperID
        {
            get
            {
                return this._SuperID;
            }
            set
            {
                if ((this._SuperID != value))
                {
                    this.OnSuperIDChanging();
                    this.SendPropertyChanging("SuperID");
                    this._SuperID = value;
                    this.SendPropertyChanged("SuperID");
                    this.OnSuperIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("EmployeeID", DbType = "int", Length = 4, IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this.OnEmployeeIDChanging();
                    this.SendPropertyChanging("EmployeeID");
                    this._EmployeeID = value;
                    this.SendPropertyChanged("EmployeeID");
                    this.OnEmployeeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the superfundid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "SuperFundID")]
        [XmlElementAttribute(ElementName = "SuperFundID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("SuperFundID", DbType = "int", Length = 4, IsNullable = false)]
        public int SuperFundID
        {
            get
            {
                return this._SuperFundID;
            }
            set
            {
                if ((this._SuperFundID != value))
                {
                    this.OnSuperFundIDChanging();
                    this.SendPropertyChanging("SuperFundID");
                    this._SuperFundID = value;
                    this.SendPropertyChanged("SuperFundID");
                    this.OnSuperFundIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("PaymentDate", DbType = "datetime", Length = 8, IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this.OnPaymentDateChanging();
                    this.SendPropertyChanging("PaymentDate");
                    this._PaymentDate = value;
                    this.SendPropertyChanged("PaymentDate");
                    this.OnPaymentDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Amount", DbType = "money", Length = 8, IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this.OnAmountChanging();
                    this.SendPropertyChanging("Amount");
                    this._Amount = value;
                    this.SendPropertyChanged("Amount");
                    this.OnAmountChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 100, IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 300, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new super data entity.
        /// </summary>
        /// <param name="superID">Initial value of SuperID.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="superFundID">Initial value of SuperFundID.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.Super entity.</returns>
        public static Data.Super CreateSuper(int superID, int employeeID, int superFundID, System.DateTime paymentDate, decimal amount)
        {
            Data.Super super = new Data.Super();
            super.SuperID = superID;
            super.EmployeeID = employeeID;
            super.SuperFundID = superFundID;
            super.PaymentDate = paymentDate;
            super.Amount = amount;
            return super;
        }
    }
    #endregion
    
    #region ExpenseType Data Entity Type
    /// <summary>
    /// The expensetype data object class.
    /// </summary>
    [DataContractAttribute(Name = "ExpenseType", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.ExpenseType")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class ExpenseType : DataBase
    {
        
        private int _ExpenseTypeID;
        
        private string _Description;
        
        private string _Name;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On ExpenseTypeID column data entity changed.
        /// </summary>
		partial void OnExpenseTypeIDChanged();

        /// <summary>
        /// On ExpenseTypeID column data entity changing.
        /// </summary>
		partial void OnExpenseTypeIDChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

        /// <summary>
        /// On Name column data entity changed.
        /// </summary>
		partial void OnNameChanged();

        /// <summary>
        /// On Name column data entity changing.
        /// </summary>
		partial void OnNameChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public ExpenseType()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the expensetypeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ExpenseTypeID")]
        [XmlElementAttribute(ElementName = "ExpenseTypeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("ExpenseTypeID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int ExpenseTypeID
        {
            get
            {
                return this._ExpenseTypeID;
            }
            set
            {
                if ((this._ExpenseTypeID != value))
                {
                    this.OnExpenseTypeIDChanging();
                    this.SendPropertyChanging("ExpenseTypeID");
                    this._ExpenseTypeID = value;
                    this.SendPropertyChanged("ExpenseTypeID");
                    this.OnExpenseTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 100, IsNullable = false)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the name property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Name")]
        [XmlElementAttribute(ElementName = "Name", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Name", DbType = "varchar", Length = 100, IsNullable = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging();
                    this.SendPropertyChanging("Name");
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new expensetype data entity.
        /// </summary>
        /// <param name="expenseTypeID">Initial value of ExpenseTypeID.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <returns>The Data.ExpenseType entity.</returns>
        public static Data.ExpenseType CreateExpenseType(int expenseTypeID, string description, string name)
        {
            Data.ExpenseType expenseType = new Data.ExpenseType();
            expenseType.ExpenseTypeID = expenseTypeID;
            expenseType.Description = description;
            expenseType.Name = name;
            return expenseType;
        }
    }
    #endregion
    
    #region EmployeeBankAccounts Data Entity Type
    /// <summary>
    /// The employeebankaccounts data object class.
    /// </summary>
    [DataContractAttribute(Name = "EmployeeBankAccounts", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.EmployeeBankAccounts")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class EmployeeBankAccounts : DataBase
    {
        
        private int _AccountID;
        
        private int _EmployeeID;
        
        private string _Bank;
        
        private string _AccountName;
        
        private string _BSB;
        
        private string _AccountNumber;
        
        private string _PhoneNumber;
        
        private string _WebSite;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On AccountID column data entity changed.
        /// </summary>
		partial void OnAccountIDChanged();

        /// <summary>
        /// On AccountID column data entity changing.
        /// </summary>
		partial void OnAccountIDChanging();

        /// <summary>
        /// On EmployeeID column data entity changed.
        /// </summary>
		partial void OnEmployeeIDChanged();

        /// <summary>
        /// On EmployeeID column data entity changing.
        /// </summary>
		partial void OnEmployeeIDChanging();

        /// <summary>
        /// On Bank column data entity changed.
        /// </summary>
		partial void OnBankChanged();

        /// <summary>
        /// On Bank column data entity changing.
        /// </summary>
		partial void OnBankChanging();

        /// <summary>
        /// On AccountName column data entity changed.
        /// </summary>
		partial void OnAccountNameChanged();

        /// <summary>
        /// On AccountName column data entity changing.
        /// </summary>
		partial void OnAccountNameChanging();

        /// <summary>
        /// On BSB column data entity changed.
        /// </summary>
		partial void OnBSBChanged();

        /// <summary>
        /// On BSB column data entity changing.
        /// </summary>
		partial void OnBSBChanging();

        /// <summary>
        /// On AccountNumber column data entity changed.
        /// </summary>
		partial void OnAccountNumberChanged();

        /// <summary>
        /// On AccountNumber column data entity changing.
        /// </summary>
		partial void OnAccountNumberChanging();

        /// <summary>
        /// On PhoneNumber column data entity changed.
        /// </summary>
		partial void OnPhoneNumberChanged();

        /// <summary>
        /// On PhoneNumber column data entity changing.
        /// </summary>
		partial void OnPhoneNumberChanging();

        /// <summary>
        /// On WebSite column data entity changed.
        /// </summary>
		partial void OnWebSiteChanged();

        /// <summary>
        /// On WebSite column data entity changing.
        /// </summary>
		partial void OnWebSiteChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public EmployeeBankAccounts()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("AccountID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this.OnAccountIDChanging();
                    this.SendPropertyChanging("AccountID");
                    this._AccountID = value;
                    this.SendPropertyChanged("AccountID");
                    this.OnAccountIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("EmployeeID", DbType = "int", Length = 4, IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this.OnEmployeeIDChanging();
                    this.SendPropertyChanging("EmployeeID");
                    this._EmployeeID = value;
                    this.SendPropertyChanged("EmployeeID");
                    this.OnEmployeeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bank property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Bank")]
        [XmlElementAttribute(ElementName = "Bank", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Bank", DbType = "varchar", Length = 50, IsNullable = false)]
        public string Bank
        {
            get
            {
                return this._Bank;
            }
            set
            {
                if ((this._Bank != value))
                {
                    this.OnBankChanging();
                    this.SendPropertyChanging("Bank");
                    this._Bank = value;
                    this.SendPropertyChanged("Bank");
                    this.OnBankChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AccountName")]
        [XmlElementAttribute(ElementName = "AccountName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("AccountName", DbType = "varchar", Length = 50, IsNullable = false)]
        public string AccountName
        {
            get
            {
                return this._AccountName;
            }
            set
            {
                if ((this._AccountName != value))
                {
                    this.OnAccountNameChanging();
                    this.SendPropertyChanging("AccountName");
                    this._AccountName = value;
                    this.SendPropertyChanged("AccountName");
                    this.OnAccountNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bsb property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "BSB")]
        [XmlElementAttribute(ElementName = "BSB", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("BSB", DbType = "varchar", Length = 8, IsNullable = false)]
        public string BSB
        {
            get
            {
                return this._BSB;
            }
            set
            {
                if ((this._BSB != value))
                {
                    this.OnBSBChanging();
                    this.SendPropertyChanging("BSB");
                    this._BSB = value;
                    this.SendPropertyChanged("BSB");
                    this.OnBSBChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountnumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AccountNumber")]
        [XmlElementAttribute(ElementName = "AccountNumber", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("AccountNumber", DbType = "varchar", Length = 15, IsNullable = false)]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging();
                    this.SendPropertyChanging("AccountNumber");
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PhoneNumber", DbType = "varchar", Length = 15, IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this.OnPhoneNumberChanging();
                    this.SendPropertyChanging("PhoneNumber");
                    this._PhoneNumber = value;
                    this.SendPropertyChanged("PhoneNumber");
                    this.OnPhoneNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("WebSite", DbType = "varchar", Length = 100, IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this.OnWebSiteChanging();
                    this.SendPropertyChanging("WebSite");
                    this._WebSite = value;
                    this.SendPropertyChanged("WebSite");
                    this.OnWebSiteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 100, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new employeebankaccounts data entity.
        /// </summary>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="bank">Initial value of Bank.</param>
        /// <param name="accountName">Initial value of AccountName.</param>
        /// <param name="bSB">Initial value of BSB.</param>
        /// <param name="accountNumber">Initial value of AccountNumber.</param>
        /// <returns>The Data.EmployeeBankAccounts entity.</returns>
        public static Data.EmployeeBankAccounts CreateEmployeeBankAccounts(int accountID, int employeeID, string bank, string accountName, string bSB, string accountNumber)
        {
            Data.EmployeeBankAccounts employeeBankAccounts = new Data.EmployeeBankAccounts();
            employeeBankAccounts.AccountID = accountID;
            employeeBankAccounts.EmployeeID = employeeID;
            employeeBankAccounts.Bank = bank;
            employeeBankAccounts.AccountName = accountName;
            employeeBankAccounts.BSB = bSB;
            employeeBankAccounts.AccountNumber = accountNumber;
            return employeeBankAccounts;
        }
    }
    #endregion
    
    #region IncomeType Data Entity Type
    /// <summary>
    /// The incometype data object class.
    /// </summary>
    [DataContractAttribute(Name = "IncomeType", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.IncomeType")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class IncomeType : DataBase
    {
        
        private int _IncomeTypeID;
        
        private string _Description;
        
        private string _Name;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On IncomeTypeID column data entity changed.
        /// </summary>
		partial void OnIncomeTypeIDChanged();

        /// <summary>
        /// On IncomeTypeID column data entity changing.
        /// </summary>
		partial void OnIncomeTypeIDChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

        /// <summary>
        /// On Name column data entity changed.
        /// </summary>
		partial void OnNameChanged();

        /// <summary>
        /// On Name column data entity changing.
        /// </summary>
		partial void OnNameChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public IncomeType()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the incometypeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "IncomeTypeID")]
        [XmlElementAttribute(ElementName = "IncomeTypeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("IncomeTypeID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int IncomeTypeID
        {
            get
            {
                return this._IncomeTypeID;
            }
            set
            {
                if ((this._IncomeTypeID != value))
                {
                    this.OnIncomeTypeIDChanging();
                    this.SendPropertyChanging("IncomeTypeID");
                    this._IncomeTypeID = value;
                    this.SendPropertyChanged("IncomeTypeID");
                    this.OnIncomeTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 100, IsNullable = false)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the name property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Name")]
        [XmlElementAttribute(ElementName = "Name", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Name", DbType = "varchar", Length = 100, IsNullable = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging();
                    this.SendPropertyChanging("Name");
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new incometype data entity.
        /// </summary>
        /// <param name="incomeTypeID">Initial value of IncomeTypeID.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <returns>The Data.IncomeType entity.</returns>
        public static Data.IncomeType CreateIncomeType(int incomeTypeID, string description, string name)
        {
            Data.IncomeType incomeType = new Data.IncomeType();
            incomeType.IncomeTypeID = incomeTypeID;
            incomeType.Description = description;
            incomeType.Name = name;
            return incomeType;
        }
    }
    #endregion
    
    #region EmployeeSuperAccounts Data Entity Type
    /// <summary>
    /// The employeesuperaccounts data object class.
    /// </summary>
    [DataContractAttribute(Name = "EmployeeSuperAccounts", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.EmployeeSuperAccounts")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class EmployeeSuperAccounts : DataBase
    {
        
        private int _SuperFundID;
        
        private int _EmployeeID;
        
        private string _SuperName;
        
        private string _PolicyNumber;
        
        private string _PhoneNumber;
        
        private string _WebSite;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On SuperFundID column data entity changed.
        /// </summary>
		partial void OnSuperFundIDChanged();

        /// <summary>
        /// On SuperFundID column data entity changing.
        /// </summary>
		partial void OnSuperFundIDChanging();

        /// <summary>
        /// On EmployeeID column data entity changed.
        /// </summary>
		partial void OnEmployeeIDChanged();

        /// <summary>
        /// On EmployeeID column data entity changing.
        /// </summary>
		partial void OnEmployeeIDChanging();

        /// <summary>
        /// On SuperName column data entity changed.
        /// </summary>
		partial void OnSuperNameChanged();

        /// <summary>
        /// On SuperName column data entity changing.
        /// </summary>
		partial void OnSuperNameChanging();

        /// <summary>
        /// On PolicyNumber column data entity changed.
        /// </summary>
		partial void OnPolicyNumberChanged();

        /// <summary>
        /// On PolicyNumber column data entity changing.
        /// </summary>
		partial void OnPolicyNumberChanging();

        /// <summary>
        /// On PhoneNumber column data entity changed.
        /// </summary>
		partial void OnPhoneNumberChanged();

        /// <summary>
        /// On PhoneNumber column data entity changing.
        /// </summary>
		partial void OnPhoneNumberChanging();

        /// <summary>
        /// On WebSite column data entity changed.
        /// </summary>
		partial void OnWebSiteChanged();

        /// <summary>
        /// On WebSite column data entity changing.
        /// </summary>
		partial void OnWebSiteChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public EmployeeSuperAccounts()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the superfundid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "SuperFundID")]
        [XmlElementAttribute(ElementName = "SuperFundID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("SuperFundID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int SuperFundID
        {
            get
            {
                return this._SuperFundID;
            }
            set
            {
                if ((this._SuperFundID != value))
                {
                    this.OnSuperFundIDChanging();
                    this.SendPropertyChanging("SuperFundID");
                    this._SuperFundID = value;
                    this.SendPropertyChanged("SuperFundID");
                    this.OnSuperFundIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("EmployeeID", DbType = "int", Length = 4, IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this.OnEmployeeIDChanging();
                    this.SendPropertyChanging("EmployeeID");
                    this._EmployeeID = value;
                    this.SendPropertyChanged("EmployeeID");
                    this.OnEmployeeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the supername property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "SuperName")]
        [XmlElementAttribute(ElementName = "SuperName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("SuperName", DbType = "varchar", Length = 100, IsNullable = false)]
        public string SuperName
        {
            get
            {
                return this._SuperName;
            }
            set
            {
                if ((this._SuperName != value))
                {
                    this.OnSuperNameChanging();
                    this.SendPropertyChanging("SuperName");
                    this._SuperName = value;
                    this.SendPropertyChanged("SuperName");
                    this.OnSuperNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the policynumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PolicyNumber")]
        [XmlElementAttribute(ElementName = "PolicyNumber", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("PolicyNumber", DbType = "varchar", Length = 15, IsNullable = false)]
        public string PolicyNumber
        {
            get
            {
                return this._PolicyNumber;
            }
            set
            {
                if ((this._PolicyNumber != value))
                {
                    this.OnPolicyNumberChanging();
                    this.SendPropertyChanging("PolicyNumber");
                    this._PolicyNumber = value;
                    this.SendPropertyChanged("PolicyNumber");
                    this.OnPolicyNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PhoneNumber", DbType = "varchar", Length = 15, IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this.OnPhoneNumberChanging();
                    this.SendPropertyChanging("PhoneNumber");
                    this._PhoneNumber = value;
                    this.SendPropertyChanged("PhoneNumber");
                    this.OnPhoneNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("WebSite", DbType = "varchar", Length = 100, IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this.OnWebSiteChanging();
                    this.SendPropertyChanging("WebSite");
                    this._WebSite = value;
                    this.SendPropertyChanged("WebSite");
                    this.OnWebSiteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 100, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new employeesuperaccounts data entity.
        /// </summary>
        /// <param name="superFundID">Initial value of SuperFundID.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="superName">Initial value of SuperName.</param>
        /// <param name="policyNumber">Initial value of PolicyNumber.</param>
        /// <returns>The Data.EmployeeSuperAccounts entity.</returns>
        public static Data.EmployeeSuperAccounts CreateEmployeeSuperAccounts(int superFundID, int employeeID, string superName, string policyNumber)
        {
            Data.EmployeeSuperAccounts employeeSuperAccounts = new Data.EmployeeSuperAccounts();
            employeeSuperAccounts.SuperFundID = superFundID;
            employeeSuperAccounts.EmployeeID = employeeID;
            employeeSuperAccounts.SuperName = superName;
            employeeSuperAccounts.PolicyNumber = policyNumber;
            return employeeSuperAccounts;
        }
    }
    #endregion
    
    #region GstIncomeType Data Entity Type
    /// <summary>
    /// The gstincometype data object class.
    /// </summary>
    [DataContractAttribute(Name = "GstIncomeType", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.GstIncomeType")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GstIncomeType : DataBase
    {
        
        private int _GstIncomeTypeID;
        
        private string _Name;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On GstIncomeTypeID column data entity changed.
        /// </summary>
		partial void OnGstIncomeTypeIDChanged();

        /// <summary>
        /// On GstIncomeTypeID column data entity changing.
        /// </summary>
		partial void OnGstIncomeTypeIDChanging();

        /// <summary>
        /// On Name column data entity changed.
        /// </summary>
		partial void OnNameChanged();

        /// <summary>
        /// On Name column data entity changing.
        /// </summary>
		partial void OnNameChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GstIncomeType()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the gstincometypeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GstIncomeTypeID")]
        [XmlElementAttribute(ElementName = "GstIncomeTypeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("GstIncomeTypeID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int GstIncomeTypeID
        {
            get
            {
                return this._GstIncomeTypeID;
            }
            set
            {
                if ((this._GstIncomeTypeID != value))
                {
                    this.OnGstIncomeTypeIDChanging();
                    this.SendPropertyChanging("GstIncomeTypeID");
                    this._GstIncomeTypeID = value;
                    this.SendPropertyChanged("GstIncomeTypeID");
                    this.OnGstIncomeTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the name property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Name")]
        [XmlElementAttribute(ElementName = "Name", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Name", DbType = "varchar", Length = 50, IsNullable = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging();
                    this.SendPropertyChanging("Name");
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new gstincometype data entity.
        /// </summary>
        /// <param name="gstIncomeTypeID">Initial value of GstIncomeTypeID.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <returns>The Data.GstIncomeType entity.</returns>
        public static Data.GstIncomeType CreateGstIncomeType(int gstIncomeTypeID, string name)
        {
            Data.GstIncomeType gstIncomeType = new Data.GstIncomeType();
            gstIncomeType.GstIncomeTypeID = gstIncomeTypeID;
            gstIncomeType.Name = name;
            return gstIncomeType;
        }
    }
    #endregion
    
    #region State Data Entity Type
    /// <summary>
    /// The state data object class.
    /// </summary>
    [DataContractAttribute(Name = "State", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.State")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class State : DataBase
    {
        
        private int _StateID;
        
        private string _ShortName;
        
        private string _LongName;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On StateID column data entity changed.
        /// </summary>
		partial void OnStateIDChanged();

        /// <summary>
        /// On StateID column data entity changing.
        /// </summary>
		partial void OnStateIDChanging();

        /// <summary>
        /// On ShortName column data entity changed.
        /// </summary>
		partial void OnShortNameChanged();

        /// <summary>
        /// On ShortName column data entity changing.
        /// </summary>
		partial void OnShortNameChanging();

        /// <summary>
        /// On LongName column data entity changed.
        /// </summary>
		partial void OnLongNameChanged();

        /// <summary>
        /// On LongName column data entity changing.
        /// </summary>
		partial void OnLongNameChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public State()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the stateid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "StateID")]
        [XmlElementAttribute(ElementName = "StateID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("StateID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int StateID
        {
            get
            {
                return this._StateID;
            }
            set
            {
                if ((this._StateID != value))
                {
                    this.OnStateIDChanging();
                    this.SendPropertyChanging("StateID");
                    this._StateID = value;
                    this.SendPropertyChanged("StateID");
                    this.OnStateIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the shortname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ShortName")]
        [XmlElementAttribute(ElementName = "ShortName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("ShortName", DbType = "varchar", Length = 50, IsNullable = false)]
        public string ShortName
        {
            get
            {
                return this._ShortName;
            }
            set
            {
                if ((this._ShortName != value))
                {
                    this.OnShortNameChanging();
                    this.SendPropertyChanging("ShortName");
                    this._ShortName = value;
                    this.SendPropertyChanged("ShortName");
                    this.OnShortNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the longname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "LongName")]
        [XmlElementAttribute(ElementName = "LongName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("LongName", DbType = "varchar", Length = 100, IsNullable = false)]
        public string LongName
        {
            get
            {
                return this._LongName;
            }
            set
            {
                if ((this._LongName != value))
                {
                    this.OnLongNameChanging();
                    this.SendPropertyChanging("LongName");
                    this._LongName = value;
                    this.SendPropertyChanged("LongName");
                    this.OnLongNameChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new state data entity.
        /// </summary>
        /// <param name="stateID">Initial value of StateID.</param>
        /// <param name="shortName">Initial value of ShortName.</param>
        /// <param name="longName">Initial value of LongName.</param>
        /// <returns>The Data.State entity.</returns>
        public static Data.State CreateState(int stateID, string shortName, string longName)
        {
            Data.State state = new Data.State();
            state.StateID = stateID;
            state.ShortName = shortName;
            state.LongName = longName;
            return state;
        }
    }
    #endregion
    
    #region BAS Data Entity Type
    /// <summary>
    /// The bas data object class.
    /// </summary>
    [DataContractAttribute(Name = "BAS", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.BAS")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class BAS : DataBase
    {
        
        private int _BASID;
        
        private int _CompanyID;
        
        private System.DateTime _BasDate;
        
        private string _DocumentID;
        
        private string _Reference;
        
        private string _EFTCode;
        
        private decimal _TotalSales;
        
        private System.Nullable<System.Decimal> _ExportSales;
        
        private System.Nullable<System.Decimal> _OtherGSTFreeSales;
        
        private System.Nullable<System.Decimal> _CapitalPurchases;
        
        private decimal _NonCapitalPurchases;
        
        private decimal _GSTOnSales;
        
        private decimal _GSTOnPurchases;
        
        private string _PaymentOrRefund;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _Comments;
        
        private decimal _TotalWages;
        
        private decimal _PAYGWithheld;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On BASID column data entity changed.
        /// </summary>
		partial void OnBASIDChanged();

        /// <summary>
        /// On BASID column data entity changing.
        /// </summary>
		partial void OnBASIDChanging();

        /// <summary>
        /// On CompanyID column data entity changed.
        /// </summary>
		partial void OnCompanyIDChanged();

        /// <summary>
        /// On CompanyID column data entity changing.
        /// </summary>
		partial void OnCompanyIDChanging();

        /// <summary>
        /// On BasDate column data entity changed.
        /// </summary>
		partial void OnBasDateChanged();

        /// <summary>
        /// On BasDate column data entity changing.
        /// </summary>
		partial void OnBasDateChanging();

        /// <summary>
        /// On DocumentID column data entity changed.
        /// </summary>
		partial void OnDocumentIDChanged();

        /// <summary>
        /// On DocumentID column data entity changing.
        /// </summary>
		partial void OnDocumentIDChanging();

        /// <summary>
        /// On Reference column data entity changed.
        /// </summary>
		partial void OnReferenceChanged();

        /// <summary>
        /// On Reference column data entity changing.
        /// </summary>
		partial void OnReferenceChanging();

        /// <summary>
        /// On EFTCode column data entity changed.
        /// </summary>
		partial void OnEFTCodeChanged();

        /// <summary>
        /// On EFTCode column data entity changing.
        /// </summary>
		partial void OnEFTCodeChanging();

        /// <summary>
        /// On TotalSales column data entity changed.
        /// </summary>
		partial void OnTotalSalesChanged();

        /// <summary>
        /// On TotalSales column data entity changing.
        /// </summary>
		partial void OnTotalSalesChanging();

        /// <summary>
        /// On ExportSales column data entity changed.
        /// </summary>
		partial void OnExportSalesChanged();

        /// <summary>
        /// On ExportSales column data entity changing.
        /// </summary>
		partial void OnExportSalesChanging();

        /// <summary>
        /// On OtherGSTFreeSales column data entity changed.
        /// </summary>
		partial void OnOtherGSTFreeSalesChanged();

        /// <summary>
        /// On OtherGSTFreeSales column data entity changing.
        /// </summary>
		partial void OnOtherGSTFreeSalesChanging();

        /// <summary>
        /// On CapitalPurchases column data entity changed.
        /// </summary>
		partial void OnCapitalPurchasesChanged();

        /// <summary>
        /// On CapitalPurchases column data entity changing.
        /// </summary>
		partial void OnCapitalPurchasesChanging();

        /// <summary>
        /// On NonCapitalPurchases column data entity changed.
        /// </summary>
		partial void OnNonCapitalPurchasesChanged();

        /// <summary>
        /// On NonCapitalPurchases column data entity changing.
        /// </summary>
		partial void OnNonCapitalPurchasesChanging();

        /// <summary>
        /// On GSTOnSales column data entity changed.
        /// </summary>
		partial void OnGSTOnSalesChanged();

        /// <summary>
        /// On GSTOnSales column data entity changing.
        /// </summary>
		partial void OnGSTOnSalesChanging();

        /// <summary>
        /// On GSTOnPurchases column data entity changed.
        /// </summary>
		partial void OnGSTOnPurchasesChanged();

        /// <summary>
        /// On GSTOnPurchases column data entity changing.
        /// </summary>
		partial void OnGSTOnPurchasesChanging();

        /// <summary>
        /// On PaymentOrRefund column data entity changed.
        /// </summary>
		partial void OnPaymentOrRefundChanged();

        /// <summary>
        /// On PaymentOrRefund column data entity changing.
        /// </summary>
		partial void OnPaymentOrRefundChanging();

        /// <summary>
        /// On Amount column data entity changed.
        /// </summary>
		partial void OnAmountChanged();

        /// <summary>
        /// On Amount column data entity changing.
        /// </summary>
		partial void OnAmountChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

        /// <summary>
        /// On TotalWages column data entity changed.
        /// </summary>
		partial void OnTotalWagesChanged();

        /// <summary>
        /// On TotalWages column data entity changing.
        /// </summary>
		partial void OnTotalWagesChanging();

        /// <summary>
        /// On PAYGWithheld column data entity changed.
        /// </summary>
		partial void OnPAYGWithheldChanged();

        /// <summary>
        /// On PAYGWithheld column data entity changing.
        /// </summary>
		partial void OnPAYGWithheldChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public BAS()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the basid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "BASID")]
        [XmlElementAttribute(ElementName = "BASID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("BASID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int BASID
        {
            get
            {
                return this._BASID;
            }
            set
            {
                if ((this._BASID != value))
                {
                    this.OnBASIDChanging();
                    this.SendPropertyChanging("BASID");
                    this._BASID = value;
                    this.SendPropertyChanged("BASID");
                    this.OnBASIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companyid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CompanyID")]
        [XmlElementAttribute(ElementName = "CompanyID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CompanyID", DbType = "int", Length = 4, IsNullable = false)]
        public int CompanyID
        {
            get
            {
                return this._CompanyID;
            }
            set
            {
                if ((this._CompanyID != value))
                {
                    this.OnCompanyIDChanging();
                    this.SendPropertyChanging("CompanyID");
                    this._CompanyID = value;
                    this.SendPropertyChanged("CompanyID");
                    this.OnCompanyIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the basdate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "BasDate")]
        [XmlElementAttribute(ElementName = "BasDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("BasDate", DbType = "datetime", Length = 8, IsNullable = false)]
        public System.DateTime BasDate
        {
            get
            {
                return this._BasDate;
            }
            set
            {
                if ((this._BasDate != value))
                {
                    this.OnBasDateChanging();
                    this.SendPropertyChanging("BasDate");
                    this._BasDate = value;
                    this.SendPropertyChanged("BasDate");
                    this.OnBasDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the documentid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DocumentID")]
        [XmlElementAttribute(ElementName = "DocumentID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("DocumentID", DbType = "varchar", Length = 20, IsNullable = true)]
        public string DocumentID
        {
            get
            {
                return this._DocumentID;
            }
            set
            {
                if ((this._DocumentID != value))
                {
                    this.OnDocumentIDChanging();
                    this.SendPropertyChanging("DocumentID");
                    this._DocumentID = value;
                    this.SendPropertyChanged("DocumentID");
                    this.OnDocumentIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the reference property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Reference")]
        [XmlElementAttribute(ElementName = "Reference", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Reference", DbType = "varchar", Length = 20, IsNullable = true)]
        public string Reference
        {
            get
            {
                return this._Reference;
            }
            set
            {
                if ((this._Reference != value))
                {
                    this.OnReferenceChanging();
                    this.SendPropertyChanging("Reference");
                    this._Reference = value;
                    this.SendPropertyChanged("Reference");
                    this.OnReferenceChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the eftcode property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EFTCode")]
        [XmlElementAttribute(ElementName = "EFTCode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("EFTCode", DbType = "varchar", Length = 20, IsNullable = true)]
        public string EFTCode
        {
            get
            {
                return this._EFTCode;
            }
            set
            {
                if ((this._EFTCode != value))
                {
                    this.OnEFTCodeChanging();
                    this.SendPropertyChanging("EFTCode");
                    this._EFTCode = value;
                    this.SendPropertyChanged("EFTCode");
                    this.OnEFTCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totalsales property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TotalSales")]
        [XmlElementAttribute(ElementName = "TotalSales", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TotalSales", DbType = "money", Length = 8, IsNullable = false)]
        public decimal TotalSales
        {
            get
            {
                return this._TotalSales;
            }
            set
            {
                if ((this._TotalSales != value))
                {
                    this.OnTotalSalesChanging();
                    this.SendPropertyChanging("TotalSales");
                    this._TotalSales = value;
                    this.SendPropertyChanged("TotalSales");
                    this.OnTotalSalesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the exportsales property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ExportSales")]
        [XmlElementAttribute(ElementName = "ExportSales", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("ExportSales", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> ExportSales
        {
            get
            {
                return this._ExportSales;
            }
            set
            {
                if ((this._ExportSales != value))
                {
                    this.OnExportSalesChanging();
                    this.SendPropertyChanging("ExportSales");
                    this._ExportSales = value;
                    this.SendPropertyChanged("ExportSales");
                    this.OnExportSalesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the othergstfreesales property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "OtherGSTFreeSales")]
        [XmlElementAttribute(ElementName = "OtherGSTFreeSales", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("OtherGSTFreeSales", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> OtherGSTFreeSales
        {
            get
            {
                return this._OtherGSTFreeSales;
            }
            set
            {
                if ((this._OtherGSTFreeSales != value))
                {
                    this.OnOtherGSTFreeSalesChanging();
                    this.SendPropertyChanging("OtherGSTFreeSales");
                    this._OtherGSTFreeSales = value;
                    this.SendPropertyChanged("OtherGSTFreeSales");
                    this.OnOtherGSTFreeSalesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the capitalpurchases property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CapitalPurchases")]
        [XmlElementAttribute(ElementName = "CapitalPurchases", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("CapitalPurchases", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> CapitalPurchases
        {
            get
            {
                return this._CapitalPurchases;
            }
            set
            {
                if ((this._CapitalPurchases != value))
                {
                    this.OnCapitalPurchasesChanging();
                    this.SendPropertyChanging("CapitalPurchases");
                    this._CapitalPurchases = value;
                    this.SendPropertyChanged("CapitalPurchases");
                    this.OnCapitalPurchasesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the noncapitalpurchases property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "NonCapitalPurchases")]
        [XmlElementAttribute(ElementName = "NonCapitalPurchases", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("NonCapitalPurchases", DbType = "money", Length = 8, IsNullable = false)]
        public decimal NonCapitalPurchases
        {
            get
            {
                return this._NonCapitalPurchases;
            }
            set
            {
                if ((this._NonCapitalPurchases != value))
                {
                    this.OnNonCapitalPurchasesChanging();
                    this.SendPropertyChanging("NonCapitalPurchases");
                    this._NonCapitalPurchases = value;
                    this.SendPropertyChanged("NonCapitalPurchases");
                    this.OnNonCapitalPurchasesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gstonsales property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GSTOnSales")]
        [XmlElementAttribute(ElementName = "GSTOnSales", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("GSTOnSales", DbType = "money", Length = 8, IsNullable = false)]
        public decimal GSTOnSales
        {
            get
            {
                return this._GSTOnSales;
            }
            set
            {
                if ((this._GSTOnSales != value))
                {
                    this.OnGSTOnSalesChanging();
                    this.SendPropertyChanging("GSTOnSales");
                    this._GSTOnSales = value;
                    this.SendPropertyChanged("GSTOnSales");
                    this.OnGSTOnSalesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gstonpurchases property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GSTOnPurchases")]
        [XmlElementAttribute(ElementName = "GSTOnPurchases", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("GSTOnPurchases", DbType = "money", Length = 8, IsNullable = false)]
        public decimal GSTOnPurchases
        {
            get
            {
                return this._GSTOnPurchases;
            }
            set
            {
                if ((this._GSTOnPurchases != value))
                {
                    this.OnGSTOnPurchasesChanging();
                    this.SendPropertyChanging("GSTOnPurchases");
                    this._GSTOnPurchases = value;
                    this.SendPropertyChanged("GSTOnPurchases");
                    this.OnGSTOnPurchasesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentorrefund property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PaymentOrRefund")]
        [XmlElementAttribute(ElementName = "PaymentOrRefund", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("PaymentOrRefund", DbType = "varchar", Length = 10, IsNullable = false)]
        public string PaymentOrRefund
        {
            get
            {
                return this._PaymentOrRefund;
            }
            set
            {
                if ((this._PaymentOrRefund != value))
                {
                    this.OnPaymentOrRefundChanging();
                    this.SendPropertyChanging("PaymentOrRefund");
                    this._PaymentOrRefund = value;
                    this.SendPropertyChanged("PaymentOrRefund");
                    this.OnPaymentOrRefundChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Amount", DbType = "money", Length = 8, IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this.OnAmountChanging();
                    this.SendPropertyChanging("Amount");
                    this._Amount = value;
                    this.SendPropertyChanged("Amount");
                    this.OnAmountChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 150, IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 300, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totalwages property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TotalWages")]
        [XmlElementAttribute(ElementName = "TotalWages", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TotalWages", DbType = "money", Length = 8, IsNullable = false)]
        public decimal TotalWages
        {
            get
            {
                return this._TotalWages;
            }
            set
            {
                if ((this._TotalWages != value))
                {
                    this.OnTotalWagesChanging();
                    this.SendPropertyChanging("TotalWages");
                    this._TotalWages = value;
                    this.SendPropertyChanged("TotalWages");
                    this.OnTotalWagesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paygwithheld property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PAYGWithheld")]
        [XmlElementAttribute(ElementName = "PAYGWithheld", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("PAYGWithheld", DbType = "money", Length = 8, IsNullable = false)]
        public decimal PAYGWithheld
        {
            get
            {
                return this._PAYGWithheld;
            }
            set
            {
                if ((this._PAYGWithheld != value))
                {
                    this.OnPAYGWithheldChanging();
                    this.SendPropertyChanging("PAYGWithheld");
                    this._PAYGWithheld = value;
                    this.SendPropertyChanged("PAYGWithheld");
                    this.OnPAYGWithheldChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new bas data entity.
        /// </summary>
        /// <param name="bASID">Initial value of BASID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="basDate">Initial value of BasDate.</param>
        /// <param name="totalSales">Initial value of TotalSales.</param>
        /// <param name="nonCapitalPurchases">Initial value of NonCapitalPurchases.</param>
        /// <param name="gSTOnSales">Initial value of GSTOnSales.</param>
        /// <param name="gSTOnPurchases">Initial value of GSTOnPurchases.</param>
        /// <param name="paymentOrRefund">Initial value of PaymentOrRefund.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <param name="totalWages">Initial value of TotalWages.</param>
        /// <param name="pAYGWithheld">Initial value of PAYGWithheld.</param>
        /// <returns>The Data.BAS entity.</returns>
        public static Data.BAS CreateBAS(int bASID, int companyID, System.DateTime basDate, decimal totalSales, decimal nonCapitalPurchases, decimal gSTOnSales, decimal gSTOnPurchases, string paymentOrRefund, decimal amount, decimal totalWages, decimal pAYGWithheld)
        {
            Data.BAS bAS = new Data.BAS();
            bAS.BASID = bASID;
            bAS.CompanyID = companyID;
            bAS.BasDate = basDate;
            bAS.TotalSales = totalSales;
            bAS.NonCapitalPurchases = nonCapitalPurchases;
            bAS.GSTOnSales = gSTOnSales;
            bAS.GSTOnPurchases = gSTOnPurchases;
            bAS.PaymentOrRefund = paymentOrRefund;
            bAS.Amount = amount;
            bAS.TotalWages = totalWages;
            bAS.PAYGWithheld = pAYGWithheld;
            return bAS;
        }
    }
    #endregion
    
    #region ProductStatus Data Entity Type
    /// <summary>
    /// The productstatus data object class.
    /// </summary>
    [DataContractAttribute(Name = "ProductStatus", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.ProductStatus")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class ProductStatus : DataBase
    {
        
        private int _ProductStatusID;
        
        private string _StatusName;
        
        private string _Description;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On ProductStatusID column data entity changed.
        /// </summary>
		partial void OnProductStatusIDChanged();

        /// <summary>
        /// On ProductStatusID column data entity changing.
        /// </summary>
		partial void OnProductStatusIDChanging();

        /// <summary>
        /// On StatusName column data entity changed.
        /// </summary>
		partial void OnStatusNameChanged();

        /// <summary>
        /// On StatusName column data entity changing.
        /// </summary>
		partial void OnStatusNameChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public ProductStatus()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the productstatusid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ProductStatusID")]
        [XmlElementAttribute(ElementName = "ProductStatusID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("ProductStatusID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int ProductStatusID
        {
            get
            {
                return this._ProductStatusID;
            }
            set
            {
                if ((this._ProductStatusID != value))
                {
                    this.OnProductStatusIDChanging();
                    this.SendPropertyChanging("ProductStatusID");
                    this._ProductStatusID = value;
                    this.SendPropertyChanged("ProductStatusID");
                    this.OnProductStatusIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the statusname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "StatusName")]
        [XmlElementAttribute(ElementName = "StatusName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("StatusName", DbType = "varchar", Length = 100, IsNullable = false)]
        public string StatusName
        {
            get
            {
                return this._StatusName;
            }
            set
            {
                if ((this._StatusName != value))
                {
                    this.OnStatusNameChanging();
                    this.SendPropertyChanging("StatusName");
                    this._StatusName = value;
                    this.SendPropertyChanged("StatusName");
                    this.OnStatusNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = -1, IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new productstatus data entity.
        /// </summary>
        /// <param name="productStatusID">Initial value of ProductStatusID.</param>
        /// <param name="statusName">Initial value of StatusName.</param>
        /// <returns>The Data.ProductStatus entity.</returns>
        public static Data.ProductStatus CreateProductStatus(int productStatusID, string statusName)
        {
            Data.ProductStatus productStatus = new Data.ProductStatus();
            productStatus.ProductStatusID = productStatusID;
            productStatus.StatusName = statusName;
            return productStatus;
        }
    }
    #endregion
    
    #region Accounts Data Entity Type
    /// <summary>
    /// The accounts data object class.
    /// </summary>
    [DataContractAttribute(Name = "Accounts", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Accounts")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Accounts : DataBase
    {
        
        private int _AccountID;
        
        private string _Firstname;
        
        private string _Surname;
        
        private string _Bank;
        
        private string _AccountName;
        
        private string _BSB;
        
        private string _AccountNumber;
        
        private string _AccountType;
        
        private string _Branch;
        
        private string _PhoneNumber;
        
        private string _FaxNumber;
        
        private string _EmailAddress;
        
        private string _WebSite;
        
        private string _Comments;
        
        private System.Nullable<System.Decimal> _Balance;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On AccountID column data entity changed.
        /// </summary>
		partial void OnAccountIDChanged();

        /// <summary>
        /// On AccountID column data entity changing.
        /// </summary>
		partial void OnAccountIDChanging();

        /// <summary>
        /// On Firstname column data entity changed.
        /// </summary>
		partial void OnFirstnameChanged();

        /// <summary>
        /// On Firstname column data entity changing.
        /// </summary>
		partial void OnFirstnameChanging();

        /// <summary>
        /// On Surname column data entity changed.
        /// </summary>
		partial void OnSurnameChanged();

        /// <summary>
        /// On Surname column data entity changing.
        /// </summary>
		partial void OnSurnameChanging();

        /// <summary>
        /// On Bank column data entity changed.
        /// </summary>
		partial void OnBankChanged();

        /// <summary>
        /// On Bank column data entity changing.
        /// </summary>
		partial void OnBankChanging();

        /// <summary>
        /// On AccountName column data entity changed.
        /// </summary>
		partial void OnAccountNameChanged();

        /// <summary>
        /// On AccountName column data entity changing.
        /// </summary>
		partial void OnAccountNameChanging();

        /// <summary>
        /// On BSB column data entity changed.
        /// </summary>
		partial void OnBSBChanged();

        /// <summary>
        /// On BSB column data entity changing.
        /// </summary>
		partial void OnBSBChanging();

        /// <summary>
        /// On AccountNumber column data entity changed.
        /// </summary>
		partial void OnAccountNumberChanged();

        /// <summary>
        /// On AccountNumber column data entity changing.
        /// </summary>
		partial void OnAccountNumberChanging();

        /// <summary>
        /// On AccountType column data entity changed.
        /// </summary>
		partial void OnAccountTypeChanged();

        /// <summary>
        /// On AccountType column data entity changing.
        /// </summary>
		partial void OnAccountTypeChanging();

        /// <summary>
        /// On Branch column data entity changed.
        /// </summary>
		partial void OnBranchChanged();

        /// <summary>
        /// On Branch column data entity changing.
        /// </summary>
		partial void OnBranchChanging();

        /// <summary>
        /// On PhoneNumber column data entity changed.
        /// </summary>
		partial void OnPhoneNumberChanged();

        /// <summary>
        /// On PhoneNumber column data entity changing.
        /// </summary>
		partial void OnPhoneNumberChanging();

        /// <summary>
        /// On FaxNumber column data entity changed.
        /// </summary>
		partial void OnFaxNumberChanged();

        /// <summary>
        /// On FaxNumber column data entity changing.
        /// </summary>
		partial void OnFaxNumberChanging();

        /// <summary>
        /// On EmailAddress column data entity changed.
        /// </summary>
		partial void OnEmailAddressChanged();

        /// <summary>
        /// On EmailAddress column data entity changing.
        /// </summary>
		partial void OnEmailAddressChanging();

        /// <summary>
        /// On WebSite column data entity changed.
        /// </summary>
		partial void OnWebSiteChanged();

        /// <summary>
        /// On WebSite column data entity changing.
        /// </summary>
		partial void OnWebSiteChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

        /// <summary>
        /// On Balance column data entity changed.
        /// </summary>
		partial void OnBalanceChanged();

        /// <summary>
        /// On Balance column data entity changing.
        /// </summary>
		partial void OnBalanceChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Accounts()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("AccountID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this.OnAccountIDChanging();
                    this.SendPropertyChanging("AccountID");
                    this._AccountID = value;
                    this.SendPropertyChanged("AccountID");
                    this.OnAccountIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Firstname")]
        [XmlElementAttribute(ElementName = "Firstname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Firstname", DbType = "varchar", Length = 40, IsNullable = true)]
        public string Firstname
        {
            get
            {
                return this._Firstname;
            }
            set
            {
                if ((this._Firstname != value))
                {
                    this.OnFirstnameChanging();
                    this.SendPropertyChanging("Firstname");
                    this._Firstname = value;
                    this.SendPropertyChanged("Firstname");
                    this.OnFirstnameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Surname")]
        [XmlElementAttribute(ElementName = "Surname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Surname", DbType = "varchar", Length = 40, IsNullable = true)]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if ((this._Surname != value))
                {
                    this.OnSurnameChanging();
                    this.SendPropertyChanging("Surname");
                    this._Surname = value;
                    this.SendPropertyChanged("Surname");
                    this.OnSurnameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bank property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Bank")]
        [XmlElementAttribute(ElementName = "Bank", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Bank", DbType = "varchar", Length = 100, IsNullable = false)]
        public string Bank
        {
            get
            {
                return this._Bank;
            }
            set
            {
                if ((this._Bank != value))
                {
                    this.OnBankChanging();
                    this.SendPropertyChanging("Bank");
                    this._Bank = value;
                    this.SendPropertyChanged("Bank");
                    this.OnBankChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AccountName")]
        [XmlElementAttribute(ElementName = "AccountName", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("AccountName", DbType = "varchar", Length = 60, IsNullable = true)]
        public string AccountName
        {
            get
            {
                return this._AccountName;
            }
            set
            {
                if ((this._AccountName != value))
                {
                    this.OnAccountNameChanging();
                    this.SendPropertyChanging("AccountName");
                    this._AccountName = value;
                    this.SendPropertyChanged("AccountName");
                    this.OnAccountNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bsb property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "BSB")]
        [XmlElementAttribute(ElementName = "BSB", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("BSB", DbType = "varchar", Length = 10, IsNullable = false)]
        public string BSB
        {
            get
            {
                return this._BSB;
            }
            set
            {
                if ((this._BSB != value))
                {
                    this.OnBSBChanging();
                    this.SendPropertyChanging("BSB");
                    this._BSB = value;
                    this.SendPropertyChanged("BSB");
                    this.OnBSBChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountnumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AccountNumber")]
        [XmlElementAttribute(ElementName = "AccountNumber", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("AccountNumber", DbType = "varchar", Length = 14, IsNullable = false)]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging();
                    this.SendPropertyChanging("AccountNumber");
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accounttype property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AccountType")]
        [XmlElementAttribute(ElementName = "AccountType", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("AccountType", DbType = "varchar", Length = 50, IsNullable = true)]
        public string AccountType
        {
            get
            {
                return this._AccountType;
            }
            set
            {
                if ((this._AccountType != value))
                {
                    this.OnAccountTypeChanging();
                    this.SendPropertyChanging("AccountType");
                    this._AccountType = value;
                    this.SendPropertyChanged("AccountType");
                    this.OnAccountTypeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the branch property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Branch")]
        [XmlElementAttribute(ElementName = "Branch", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Branch", DbType = "varchar", Length = 20, IsNullable = true)]
        public string Branch
        {
            get
            {
                return this._Branch;
            }
            set
            {
                if ((this._Branch != value))
                {
                    this.OnBranchChanging();
                    this.SendPropertyChanging("Branch");
                    this._Branch = value;
                    this.SendPropertyChanged("Branch");
                    this.OnBranchChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PhoneNumber", DbType = "varchar", Length = 14, IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this.OnPhoneNumberChanging();
                    this.SendPropertyChanging("PhoneNumber");
                    this._PhoneNumber = value;
                    this.SendPropertyChanged("PhoneNumber");
                    this.OnPhoneNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("FaxNumber", DbType = "varchar", Length = 14, IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this.OnFaxNumberChanging();
                    this.SendPropertyChanging("FaxNumber");
                    this._FaxNumber = value;
                    this.SendPropertyChanged("FaxNumber");
                    this.OnFaxNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("EmailAddress", DbType = "varchar", Length = 100, IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this.OnEmailAddressChanging();
                    this.SendPropertyChanging("EmailAddress");
                    this._EmailAddress = value;
                    this.SendPropertyChanged("EmailAddress");
                    this.OnEmailAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("WebSite", DbType = "varchar", Length = 100, IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this.OnWebSiteChanging();
                    this.SendPropertyChanging("WebSite");
                    this._WebSite = value;
                    this.SendPropertyChanged("WebSite");
                    this.OnWebSiteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 300, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the balance property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Balance")]
        [XmlElementAttribute(ElementName = "Balance", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Balance", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Balance
        {
            get
            {
                return this._Balance;
            }
            set
            {
                if ((this._Balance != value))
                {
                    this.OnBalanceChanging();
                    this.SendPropertyChanging("Balance");
                    this._Balance = value;
                    this.SendPropertyChanged("Balance");
                    this.OnBalanceChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new accounts data entity.
        /// </summary>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="bank">Initial value of Bank.</param>
        /// <param name="bSB">Initial value of BSB.</param>
        /// <param name="accountNumber">Initial value of AccountNumber.</param>
        /// <returns>The Data.Accounts entity.</returns>
        public static Data.Accounts CreateAccounts(int accountID, string bank, string bSB, string accountNumber)
        {
            Data.Accounts accounts = new Data.Accounts();
            accounts.AccountID = accountID;
            accounts.Bank = bank;
            accounts.BSB = bSB;
            accounts.AccountNumber = accountNumber;
            return accounts;
        }
    }
    #endregion
    
    #region GenericData Data Entity Type
    /// <summary>
    /// The genericdata data object class.
    /// </summary>
    [DataContractAttribute(Name = "GenericData", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.GenericData")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GenericData : DataBase
    {
        
        private int _GenericDataID;
        
        private string _DataValue;
        
        private string _DataValueType;
        
        private string _Description;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On GenericDataID column data entity changed.
        /// </summary>
		partial void OnGenericDataIDChanged();

        /// <summary>
        /// On GenericDataID column data entity changing.
        /// </summary>
		partial void OnGenericDataIDChanging();

        /// <summary>
        /// On DataValue column data entity changed.
        /// </summary>
		partial void OnDataValueChanged();

        /// <summary>
        /// On DataValue column data entity changing.
        /// </summary>
		partial void OnDataValueChanging();

        /// <summary>
        /// On DataValueType column data entity changed.
        /// </summary>
		partial void OnDataValueTypeChanged();

        /// <summary>
        /// On DataValueType column data entity changing.
        /// </summary>
		partial void OnDataValueTypeChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GenericData()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the genericdataid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GenericDataID")]
        [XmlElementAttribute(ElementName = "GenericDataID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("GenericDataID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "int", Length = 4, IsNullable = false)]
        public int GenericDataID
        {
            get
            {
                return this._GenericDataID;
            }
            set
            {
                if ((this._GenericDataID != value))
                {
                    this.OnGenericDataIDChanging();
                    this.SendPropertyChanging("GenericDataID");
                    this._GenericDataID = value;
                    this.SendPropertyChanged("GenericDataID");
                    this.OnGenericDataIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the datavalue property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataValue")]
        [XmlElementAttribute(ElementName = "DataValue", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataValue", DbType = "varchar", Length = -1, IsNullable = false)]
        public string DataValue
        {
            get
            {
                return this._DataValue;
            }
            set
            {
                if ((this._DataValue != value))
                {
                    this.OnDataValueChanging();
                    this.SendPropertyChanging("DataValue");
                    this._DataValue = value;
                    this.SendPropertyChanged("DataValue");
                    this.OnDataValueChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the datavaluetype property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DataValueType")]
        [XmlElementAttribute(ElementName = "DataValueType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DataValueType", DbType = "varchar", Length = 500, IsNullable = false)]
        public string DataValueType
        {
            get
            {
                return this._DataValueType;
            }
            set
            {
                if ((this._DataValueType != value))
                {
                    this.OnDataValueTypeChanging();
                    this.SendPropertyChanging("DataValueType");
                    this._DataValueType = value;
                    this.SendPropertyChanged("DataValueType");
                    this.OnDataValueTypeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 500, IsNullable = false)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new genericdata data entity.
        /// </summary>
        /// <param name="genericDataID">Initial value of GenericDataID.</param>
        /// <param name="dataValue">Initial value of DataValue.</param>
        /// <param name="dataValueType">Initial value of DataValueType.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <returns>The Data.GenericData entity.</returns>
        public static Data.GenericData CreateGenericData(int genericDataID, string dataValue, string dataValueType, string description)
        {
            Data.GenericData genericData = new Data.GenericData();
            genericData.GenericDataID = genericDataID;
            genericData.DataValue = dataValue;
            genericData.DataValueType = dataValueType;
            genericData.Description = description;
            return genericData;
        }
    }
    #endregion
    
    #region AccountTransactionCreditDebitSubtotal Data Entity Type
    /// <summary>
    /// The accounttransactioncreditdebitsubtotal data object class.
    /// </summary>
    [DataContractAttribute(Name = "AccountTransactionCreditDebitSubtotal", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.AccountTransactionCreditDebitSubtotal")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class AccountTransactionCreditDebitSubtotal : DataBase
    {
        
        private int _AccountID;
        
        private string _TransactionType;
        
        private System.Nullable<System.Decimal> _SubTotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On AccountID column data entity changed.
        /// </summary>
		partial void OnAccountIDChanged();

        /// <summary>
        /// On AccountID column data entity changing.
        /// </summary>
		partial void OnAccountIDChanging();

        /// <summary>
        /// On TransactionType column data entity changed.
        /// </summary>
		partial void OnTransactionTypeChanged();

        /// <summary>
        /// On TransactionType column data entity changing.
        /// </summary>
		partial void OnTransactionTypeChanging();

        /// <summary>
        /// On SubTotal column data entity changed.
        /// </summary>
		partial void OnSubTotalChanged();

        /// <summary>
        /// On SubTotal column data entity changing.
        /// </summary>
		partial void OnSubTotalChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public AccountTransactionCreditDebitSubtotal()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("AccountID", DbType = "int", Length = 4, IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this.OnAccountIDChanging();
                    this.SendPropertyChanging("AccountID");
                    this._AccountID = value;
                    this.SendPropertyChanged("AccountID");
                    this.OnAccountIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the transactiontype property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TransactionType")]
        [XmlElementAttribute(ElementName = "TransactionType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("TransactionType", DbType = "varchar", Length = 50, IsNullable = false)]
        public string TransactionType
        {
            get
            {
                return this._TransactionType;
            }
            set
            {
                if ((this._TransactionType != value))
                {
                    this.OnTransactionTypeChanging();
                    this.SendPropertyChanging("TransactionType");
                    this._TransactionType = value;
                    this.SendPropertyChanged("TransactionType");
                    this.OnTransactionTypeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the subtotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "SubTotal")]
        [XmlElementAttribute(ElementName = "SubTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("SubTotal", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> SubTotal
        {
            get
            {
                return this._SubTotal;
            }
            set
            {
                if ((this._SubTotal != value))
                {
                    this.OnSubTotalChanging();
                    this.SendPropertyChanging("SubTotal");
                    this._SubTotal = value;
                    this.SendPropertyChanged("SubTotal");
                    this.OnSubTotalChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new accounttransactioncreditdebitsubtotal data entity.
        /// </summary>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="transactionType">Initial value of TransactionType.</param>
        /// <returns>The Data.AccountTransactionCreditDebitSubtotal entity.</returns>
        public static Data.AccountTransactionCreditDebitSubtotal CreateAccountTransactionCreditDebitSubtotal(int accountID, string transactionType)
        {
            Data.AccountTransactionCreditDebitSubtotal accountTransactionCreditDebitSubtotal = new Data.AccountTransactionCreditDebitSubtotal();
            accountTransactionCreditDebitSubtotal.AccountID = accountID;
            accountTransactionCreditDebitSubtotal.TransactionType = transactionType;
            return accountTransactionCreditDebitSubtotal;
        }
    }
    #endregion
    
    #region EmployeePAYGSubtotal Data Entity Type
    /// <summary>
    /// The employeepaygsubtotal data object class.
    /// </summary>
    [DataContractAttribute(Name = "EmployeePAYGSubtotal", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.EmployeePAYGSubtotal")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class EmployeePAYGSubtotal : DataBase
    {
        
        private int _EmployeeID;
        
        private System.Nullable<System.Decimal> _Subtotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On EmployeeID column data entity changed.
        /// </summary>
		partial void OnEmployeeIDChanged();

        /// <summary>
        /// On EmployeeID column data entity changing.
        /// </summary>
		partial void OnEmployeeIDChanging();

        /// <summary>
        /// On Subtotal column data entity changed.
        /// </summary>
		partial void OnSubtotalChanged();

        /// <summary>
        /// On Subtotal column data entity changing.
        /// </summary>
		partial void OnSubtotalChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public EmployeePAYGSubtotal()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("EmployeeID", DbType = "int", Length = 4, IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this.OnEmployeeIDChanging();
                    this.SendPropertyChanging("EmployeeID");
                    this._EmployeeID = value;
                    this.SendPropertyChanged("EmployeeID");
                    this.OnEmployeeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the subtotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Subtotal")]
        [XmlElementAttribute(ElementName = "Subtotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Subtotal", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Subtotal
        {
            get
            {
                return this._Subtotal;
            }
            set
            {
                if ((this._Subtotal != value))
                {
                    this.OnSubtotalChanging();
                    this.SendPropertyChanging("Subtotal");
                    this._Subtotal = value;
                    this.SendPropertyChanged("Subtotal");
                    this.OnSubtotalChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new employeepaygsubtotal data entity.
        /// </summary>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <returns>The Data.EmployeePAYGSubtotal entity.</returns>
        public static Data.EmployeePAYGSubtotal CreateEmployeePAYGSubtotal(int employeeID)
        {
            Data.EmployeePAYGSubtotal employeePAYGSubtotal = new Data.EmployeePAYGSubtotal();
            employeePAYGSubtotal.EmployeeID = employeeID;
            return employeePAYGSubtotal;
        }
    }
    #endregion
    
    #region EmployeePAYGSubtotalTotal Data Entity Type
    /// <summary>
    /// The employeepaygsubtotaltotal data object class.
    /// </summary>
    [DataContractAttribute(Name = "EmployeePAYGSubtotalTotal", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.EmployeePAYGSubtotalTotal")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class EmployeePAYGSubtotalTotal : DataBase
    {
        
        private System.Nullable<System.Decimal> _Total;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On Total column data entity changed.
        /// </summary>
		partial void OnTotalChanged();

        /// <summary>
        /// On Total column data entity changing.
        /// </summary>
		partial void OnTotalChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public EmployeePAYGSubtotalTotal()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the total property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Total")]
        [XmlElementAttribute(ElementName = "Total", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Total", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                if ((this._Total != value))
                {
                    this.OnTotalChanging();
                    this.SendPropertyChanging("Total");
                    this._Total = value;
                    this.SendPropertyChanged("Total");
                    this.OnTotalChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new employeepaygsubtotaltotal data entity.
        /// </summary>
        /// <returns>The Data.EmployeePAYGSubtotalTotal entity.</returns>
        public static Data.EmployeePAYGSubtotalTotal CreateEmployeePAYGSubtotalTotal()
        {
            Data.EmployeePAYGSubtotalTotal employeePAYGSubtotalTotal = new Data.EmployeePAYGSubtotalTotal();
            return employeePAYGSubtotalTotal;
        }
    }
    #endregion
    
    #region VendorDetailsSubtotal Data Entity Type
    /// <summary>
    /// The vendordetailssubtotal data object class.
    /// </summary>
    [DataContractAttribute(Name = "VendorDetailsSubtotal", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.VendorDetailsSubtotal")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class VendorDetailsSubtotal : DataBase
    {
        
        private int _VendorID;
        
        private System.Nullable<System.Decimal> _Subtotal;
        
        private System.Nullable<System.Decimal> _GSTSubtotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On VendorID column data entity changed.
        /// </summary>
		partial void OnVendorIDChanged();

        /// <summary>
        /// On VendorID column data entity changing.
        /// </summary>
		partial void OnVendorIDChanging();

        /// <summary>
        /// On Subtotal column data entity changed.
        /// </summary>
		partial void OnSubtotalChanged();

        /// <summary>
        /// On Subtotal column data entity changing.
        /// </summary>
		partial void OnSubtotalChanging();

        /// <summary>
        /// On GSTSubtotal column data entity changed.
        /// </summary>
		partial void OnGSTSubtotalChanged();

        /// <summary>
        /// On GSTSubtotal column data entity changing.
        /// </summary>
		partial void OnGSTSubtotalChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public VendorDetailsSubtotal()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the vendorid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "VendorID")]
        [XmlElementAttribute(ElementName = "VendorID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("VendorID", DbType = "int", Length = 4, IsNullable = false)]
        public int VendorID
        {
            get
            {
                return this._VendorID;
            }
            set
            {
                if ((this._VendorID != value))
                {
                    this.OnVendorIDChanging();
                    this.SendPropertyChanging("VendorID");
                    this._VendorID = value;
                    this.SendPropertyChanged("VendorID");
                    this.OnVendorIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the subtotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Subtotal")]
        [XmlElementAttribute(ElementName = "Subtotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Subtotal", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Subtotal
        {
            get
            {
                return this._Subtotal;
            }
            set
            {
                if ((this._Subtotal != value))
                {
                    this.OnSubtotalChanging();
                    this.SendPropertyChanging("Subtotal");
                    this._Subtotal = value;
                    this.SendPropertyChanged("Subtotal");
                    this.OnSubtotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gstsubtotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GSTSubtotal")]
        [XmlElementAttribute(ElementName = "GSTSubtotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("GSTSubtotal", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> GSTSubtotal
        {
            get
            {
                return this._GSTSubtotal;
            }
            set
            {
                if ((this._GSTSubtotal != value))
                {
                    this.OnGSTSubtotalChanging();
                    this.SendPropertyChanging("GSTSubtotal");
                    this._GSTSubtotal = value;
                    this.SendPropertyChanged("GSTSubtotal");
                    this.OnGSTSubtotalChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new vendordetailssubtotal data entity.
        /// </summary>
        /// <param name="vendorID">Initial value of VendorID.</param>
        /// <returns>The Data.VendorDetailsSubtotal entity.</returns>
        public static Data.VendorDetailsSubtotal CreateVendorDetailsSubtotal(int vendorID)
        {
            Data.VendorDetailsSubtotal vendorDetailsSubtotal = new Data.VendorDetailsSubtotal();
            vendorDetailsSubtotal.VendorID = vendorID;
            return vendorDetailsSubtotal;
        }
    }
    #endregion
    
    #region InvoiceProductsSubtotal Data Entity Type
    /// <summary>
    /// The invoiceproductssubtotal data object class.
    /// </summary>
    [DataContractAttribute(Name = "InvoiceProductsSubtotal", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.InvoiceProductsSubtotal")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class InvoiceProductsSubtotal : DataBase
    {
        
        private int _InvoiceID;
        
        private System.Nullable<System.Decimal> _Subtotal;
        
        private System.Nullable<System.Decimal> _Gst;
        
        private System.Nullable<System.Decimal> _Totals;
        
        private System.Nullable<System.Double> _PreGST;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On InvoiceID column data entity changed.
        /// </summary>
		partial void OnInvoiceIDChanged();

        /// <summary>
        /// On InvoiceID column data entity changing.
        /// </summary>
		partial void OnInvoiceIDChanging();

        /// <summary>
        /// On Subtotal column data entity changed.
        /// </summary>
		partial void OnSubtotalChanged();

        /// <summary>
        /// On Subtotal column data entity changing.
        /// </summary>
		partial void OnSubtotalChanging();

        /// <summary>
        /// On Gst column data entity changed.
        /// </summary>
		partial void OnGstChanged();

        /// <summary>
        /// On Gst column data entity changing.
        /// </summary>
		partial void OnGstChanging();

        /// <summary>
        /// On Totals column data entity changed.
        /// </summary>
		partial void OnTotalsChanged();

        /// <summary>
        /// On Totals column data entity changing.
        /// </summary>
		partial void OnTotalsChanging();

        /// <summary>
        /// On PreGST column data entity changed.
        /// </summary>
		partial void OnPreGSTChanged();

        /// <summary>
        /// On PreGST column data entity changing.
        /// </summary>
		partial void OnPreGSTChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public InvoiceProductsSubtotal()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the invoiceid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "InvoiceID")]
        [XmlElementAttribute(ElementName = "InvoiceID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("InvoiceID", DbType = "int", Length = 4, IsNullable = false)]
        public int InvoiceID
        {
            get
            {
                return this._InvoiceID;
            }
            set
            {
                if ((this._InvoiceID != value))
                {
                    this.OnInvoiceIDChanging();
                    this.SendPropertyChanging("InvoiceID");
                    this._InvoiceID = value;
                    this.SendPropertyChanged("InvoiceID");
                    this.OnInvoiceIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the subtotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Subtotal")]
        [XmlElementAttribute(ElementName = "Subtotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Subtotal", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Subtotal
        {
            get
            {
                return this._Subtotal;
            }
            set
            {
                if ((this._Subtotal != value))
                {
                    this.OnSubtotalChanging();
                    this.SendPropertyChanging("Subtotal");
                    this._Subtotal = value;
                    this.SendPropertyChanged("Subtotal");
                    this.OnSubtotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gst property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Gst")]
        [XmlElementAttribute(ElementName = "Gst", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Gst", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Gst
        {
            get
            {
                return this._Gst;
            }
            set
            {
                if ((this._Gst != value))
                {
                    this.OnGstChanging();
                    this.SendPropertyChanging("Gst");
                    this._Gst = value;
                    this.SendPropertyChanged("Gst");
                    this.OnGstChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totals property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Totals")]
        [XmlElementAttribute(ElementName = "Totals", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Totals", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Totals
        {
            get
            {
                return this._Totals;
            }
            set
            {
                if ((this._Totals != value))
                {
                    this.OnTotalsChanging();
                    this.SendPropertyChanging("Totals");
                    this._Totals = value;
                    this.SendPropertyChanged("Totals");
                    this.OnTotalsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the pregst property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PreGST")]
        [XmlElementAttribute(ElementName = "PreGST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PreGST", DbType = "float", Length = 8, IsNullable = true)]
        public System.Nullable<System.Double> PreGST
        {
            get
            {
                return this._PreGST;
            }
            set
            {
                if ((this._PreGST != value))
                {
                    this.OnPreGSTChanging();
                    this.SendPropertyChanging("PreGST");
                    this._PreGST = value;
                    this.SendPropertyChanged("PreGST");
                    this.OnPreGSTChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new invoiceproductssubtotal data entity.
        /// </summary>
        /// <param name="invoiceID">Initial value of InvoiceID.</param>
        /// <returns>The Data.InvoiceProductsSubtotal entity.</returns>
        public static Data.InvoiceProductsSubtotal CreateInvoiceProductsSubtotal(int invoiceID)
        {
            Data.InvoiceProductsSubtotal invoiceProductsSubtotal = new Data.InvoiceProductsSubtotal();
            invoiceProductsSubtotal.InvoiceID = invoiceID;
            return invoiceProductsSubtotal;
        }
    }
    #endregion
    
    #region InvoiceProductsSubtotalTotal Data Entity Type
    /// <summary>
    /// The invoiceproductssubtotaltotal data object class.
    /// </summary>
    [DataContractAttribute(Name = "InvoiceProductsSubtotalTotal", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.InvoiceProductsSubtotalTotal")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class InvoiceProductsSubtotalTotal : DataBase
    {
        
        private System.Nullable<System.Decimal> _Total;
        
        private System.Nullable<System.Decimal> _GST;
        
        private System.Nullable<System.Decimal> _PreGst;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On Total column data entity changed.
        /// </summary>
		partial void OnTotalChanged();

        /// <summary>
        /// On Total column data entity changing.
        /// </summary>
		partial void OnTotalChanging();

        /// <summary>
        /// On GST column data entity changed.
        /// </summary>
		partial void OnGSTChanged();

        /// <summary>
        /// On GST column data entity changing.
        /// </summary>
		partial void OnGSTChanging();

        /// <summary>
        /// On PreGst column data entity changed.
        /// </summary>
		partial void OnPreGstChanged();

        /// <summary>
        /// On PreGst column data entity changing.
        /// </summary>
		partial void OnPreGstChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public InvoiceProductsSubtotalTotal()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the total property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Total")]
        [XmlElementAttribute(ElementName = "Total", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Total", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                if ((this._Total != value))
                {
                    this.OnTotalChanging();
                    this.SendPropertyChanging("Total");
                    this._Total = value;
                    this.SendPropertyChanged("Total");
                    this.OnTotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gst property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GST")]
        [XmlElementAttribute(ElementName = "GST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("GST", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> GST
        {
            get
            {
                return this._GST;
            }
            set
            {
                if ((this._GST != value))
                {
                    this.OnGSTChanging();
                    this.SendPropertyChanging("GST");
                    this._GST = value;
                    this.SendPropertyChanged("GST");
                    this.OnGSTChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the pregst property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PreGst")]
        [XmlElementAttribute(ElementName = "PreGst", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PreGst", DbType = "numeric", Length = 17, IsNullable = true)]
        public System.Nullable<System.Decimal> PreGst
        {
            get
            {
                return this._PreGst;
            }
            set
            {
                if ((this._PreGst != value))
                {
                    this.OnPreGstChanging();
                    this.SendPropertyChanging("PreGst");
                    this._PreGst = value;
                    this.SendPropertyChanged("PreGst");
                    this.OnPreGstChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new invoiceproductssubtotaltotal data entity.
        /// </summary>
        /// <returns>The Data.InvoiceProductsSubtotalTotal entity.</returns>
        public static Data.InvoiceProductsSubtotalTotal CreateInvoiceProductsSubtotalTotal()
        {
            Data.InvoiceProductsSubtotalTotal invoiceProductsSubtotalTotal = new Data.InvoiceProductsSubtotalTotal();
            return invoiceProductsSubtotalTotal;
        }
    }
    #endregion
    
    #region CustomerInvoiceDetailsTotals Data Entity Type
    /// <summary>
    /// The customerinvoicedetailstotals data object class.
    /// </summary>
    [DataContractAttribute(Name = "CustomerInvoiceDetailsTotals", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.CustomerInvoiceDetailsTotals")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class CustomerInvoiceDetailsTotals : DataBase
    {
        
        private System.Nullable<System.Double> _TotalHours;
        
        private System.Nullable<System.Decimal> _TotalTotal;
        
        private System.Nullable<System.Double> _TotalGST;
        
        private int _CustomerID;
        
        private int _InvoiceID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On TotalHours column data entity changed.
        /// </summary>
		partial void OnTotalHoursChanged();

        /// <summary>
        /// On TotalHours column data entity changing.
        /// </summary>
		partial void OnTotalHoursChanging();

        /// <summary>
        /// On TotalTotal column data entity changed.
        /// </summary>
		partial void OnTotalTotalChanged();

        /// <summary>
        /// On TotalTotal column data entity changing.
        /// </summary>
		partial void OnTotalTotalChanging();

        /// <summary>
        /// On TotalGST column data entity changed.
        /// </summary>
		partial void OnTotalGSTChanged();

        /// <summary>
        /// On TotalGST column data entity changing.
        /// </summary>
		partial void OnTotalGSTChanging();

        /// <summary>
        /// On CustomerID column data entity changed.
        /// </summary>
		partial void OnCustomerIDChanged();

        /// <summary>
        /// On CustomerID column data entity changing.
        /// </summary>
		partial void OnCustomerIDChanging();

        /// <summary>
        /// On InvoiceID column data entity changed.
        /// </summary>
		partial void OnInvoiceIDChanged();

        /// <summary>
        /// On InvoiceID column data entity changing.
        /// </summary>
		partial void OnInvoiceIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public CustomerInvoiceDetailsTotals()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totalhours property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TotalHours")]
        [XmlElementAttribute(ElementName = "TotalHours", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("TotalHours", DbType = "float", Length = 8, IsNullable = true)]
        public System.Nullable<System.Double> TotalHours
        {
            get
            {
                return this._TotalHours;
            }
            set
            {
                if ((this._TotalHours != value))
                {
                    this.OnTotalHoursChanging();
                    this.SendPropertyChanging("TotalHours");
                    this._TotalHours = value;
                    this.SendPropertyChanged("TotalHours");
                    this.OnTotalHoursChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totaltotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TotalTotal")]
        [XmlElementAttribute(ElementName = "TotalTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("TotalTotal", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> TotalTotal
        {
            get
            {
                return this._TotalTotal;
            }
            set
            {
                if ((this._TotalTotal != value))
                {
                    this.OnTotalTotalChanging();
                    this.SendPropertyChanging("TotalTotal");
                    this._TotalTotal = value;
                    this.SendPropertyChanged("TotalTotal");
                    this.OnTotalTotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totalgst property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TotalGST")]
        [XmlElementAttribute(ElementName = "TotalGST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("TotalGST", DbType = "real", Length = 4, IsNullable = true)]
        public System.Nullable<System.Double> TotalGST
        {
            get
            {
                return this._TotalGST;
            }
            set
            {
                if ((this._TotalGST != value))
                {
                    this.OnTotalGSTChanging();
                    this.SendPropertyChanging("TotalGST");
                    this._TotalGST = value;
                    this.SendPropertyChanged("TotalGST");
                    this.OnTotalGSTChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the customerid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CustomerID")]
        [XmlElementAttribute(ElementName = "CustomerID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CustomerID", DbType = "int", Length = 4, IsNullable = false)]
        public int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                if ((this._CustomerID != value))
                {
                    this.OnCustomerIDChanging();
                    this.SendPropertyChanging("CustomerID");
                    this._CustomerID = value;
                    this.SendPropertyChanged("CustomerID");
                    this.OnCustomerIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the invoiceid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "InvoiceID")]
        [XmlElementAttribute(ElementName = "InvoiceID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("InvoiceID", DbType = "int", Length = 4, IsNullable = false)]
        public int InvoiceID
        {
            get
            {
                return this._InvoiceID;
            }
            set
            {
                if ((this._InvoiceID != value))
                {
                    this.OnInvoiceIDChanging();
                    this.SendPropertyChanging("InvoiceID");
                    this._InvoiceID = value;
                    this.SendPropertyChanged("InvoiceID");
                    this.OnInvoiceIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new customerinvoicedetailstotals data entity.
        /// </summary>
        /// <param name="customerID">Initial value of CustomerID.</param>
        /// <param name="invoiceID">Initial value of InvoiceID.</param>
        /// <returns>The Data.CustomerInvoiceDetailsTotals entity.</returns>
        public static Data.CustomerInvoiceDetailsTotals CreateCustomerInvoiceDetailsTotals(int customerID, int invoiceID)
        {
            Data.CustomerInvoiceDetailsTotals customerInvoiceDetailsTotals = new Data.CustomerInvoiceDetailsTotals();
            customerInvoiceDetailsTotals.CustomerID = customerID;
            customerInvoiceDetailsTotals.InvoiceID = invoiceID;
            return customerInvoiceDetailsTotals;
        }
    }
    #endregion
    
    #region CustomerInvoiceProductsTotals Data Entity Type
    /// <summary>
    /// The customerinvoiceproductstotals data object class.
    /// </summary>
    [DataContractAttribute(Name = "CustomerInvoiceProductsTotals", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.CustomerInvoiceProductsTotals")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class CustomerInvoiceProductsTotals : DataBase
    {
        
        private System.Nullable<System.Int32> _TotalUnits;
        
        private System.Nullable<System.Decimal> _TotalTotal;
        
        private System.Nullable<System.Double> _TotalGST;
        
        private int _CustomerID;
        
        private int _InvoiceID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On TotalUnits column data entity changed.
        /// </summary>
		partial void OnTotalUnitsChanged();

        /// <summary>
        /// On TotalUnits column data entity changing.
        /// </summary>
		partial void OnTotalUnitsChanging();

        /// <summary>
        /// On TotalTotal column data entity changed.
        /// </summary>
		partial void OnTotalTotalChanged();

        /// <summary>
        /// On TotalTotal column data entity changing.
        /// </summary>
		partial void OnTotalTotalChanging();

        /// <summary>
        /// On TotalGST column data entity changed.
        /// </summary>
		partial void OnTotalGSTChanged();

        /// <summary>
        /// On TotalGST column data entity changing.
        /// </summary>
		partial void OnTotalGSTChanging();

        /// <summary>
        /// On CustomerID column data entity changed.
        /// </summary>
		partial void OnCustomerIDChanged();

        /// <summary>
        /// On CustomerID column data entity changing.
        /// </summary>
		partial void OnCustomerIDChanging();

        /// <summary>
        /// On InvoiceID column data entity changed.
        /// </summary>
		partial void OnInvoiceIDChanged();

        /// <summary>
        /// On InvoiceID column data entity changing.
        /// </summary>
		partial void OnInvoiceIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public CustomerInvoiceProductsTotals()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totalunits property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TotalUnits")]
        [XmlElementAttribute(ElementName = "TotalUnits", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("TotalUnits", DbType = "int", Length = 4, IsNullable = true)]
        public System.Nullable<System.Int32> TotalUnits
        {
            get
            {
                return this._TotalUnits;
            }
            set
            {
                if ((this._TotalUnits != value))
                {
                    this.OnTotalUnitsChanging();
                    this.SendPropertyChanging("TotalUnits");
                    this._TotalUnits = value;
                    this.SendPropertyChanged("TotalUnits");
                    this.OnTotalUnitsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totaltotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TotalTotal")]
        [XmlElementAttribute(ElementName = "TotalTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("TotalTotal", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> TotalTotal
        {
            get
            {
                return this._TotalTotal;
            }
            set
            {
                if ((this._TotalTotal != value))
                {
                    this.OnTotalTotalChanging();
                    this.SendPropertyChanging("TotalTotal");
                    this._TotalTotal = value;
                    this.SendPropertyChanged("TotalTotal");
                    this.OnTotalTotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totalgst property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TotalGST")]
        [XmlElementAttribute(ElementName = "TotalGST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("TotalGST", DbType = "real", Length = 4, IsNullable = true)]
        public System.Nullable<System.Double> TotalGST
        {
            get
            {
                return this._TotalGST;
            }
            set
            {
                if ((this._TotalGST != value))
                {
                    this.OnTotalGSTChanging();
                    this.SendPropertyChanging("TotalGST");
                    this._TotalGST = value;
                    this.SendPropertyChanged("TotalGST");
                    this.OnTotalGSTChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the customerid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CustomerID")]
        [XmlElementAttribute(ElementName = "CustomerID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CustomerID", DbType = "int", Length = 4, IsNullable = false)]
        public int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                if ((this._CustomerID != value))
                {
                    this.OnCustomerIDChanging();
                    this.SendPropertyChanging("CustomerID");
                    this._CustomerID = value;
                    this.SendPropertyChanged("CustomerID");
                    this.OnCustomerIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the invoiceid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "InvoiceID")]
        [XmlElementAttribute(ElementName = "InvoiceID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("InvoiceID", DbType = "int", Length = 4, IsNullable = false)]
        public int InvoiceID
        {
            get
            {
                return this._InvoiceID;
            }
            set
            {
                if ((this._InvoiceID != value))
                {
                    this.OnInvoiceIDChanging();
                    this.SendPropertyChanging("InvoiceID");
                    this._InvoiceID = value;
                    this.SendPropertyChanged("InvoiceID");
                    this.OnInvoiceIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new customerinvoiceproductstotals data entity.
        /// </summary>
        /// <param name="customerID">Initial value of CustomerID.</param>
        /// <param name="invoiceID">Initial value of InvoiceID.</param>
        /// <returns>The Data.CustomerInvoiceProductsTotals entity.</returns>
        public static Data.CustomerInvoiceProductsTotals CreateCustomerInvoiceProductsTotals(int customerID, int invoiceID)
        {
            Data.CustomerInvoiceProductsTotals customerInvoiceProductsTotals = new Data.CustomerInvoiceProductsTotals();
            customerInvoiceProductsTotals.CustomerID = customerID;
            customerInvoiceProductsTotals.InvoiceID = invoiceID;
            return customerInvoiceProductsTotals;
        }
    }
    #endregion
    
    #region CustomerInvoiceDetailsTotalTotals Data Entity Type
    /// <summary>
    /// The customerinvoicedetailstotaltotals data object class.
    /// </summary>
    [DataContractAttribute(Name = "CustomerInvoiceDetailsTotalTotals", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.CustomerInvoiceDetailsTotalTotals")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class CustomerInvoiceDetailsTotalTotals : DataBase
    {
        
        private System.Nullable<System.Double> _HoursTotal;
        
        private System.Nullable<System.Decimal> _TotalTotals;
        
        private System.Nullable<System.Decimal> _GSTTotal;
        
        private int _CustomerID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On HoursTotal column data entity changed.
        /// </summary>
		partial void OnHoursTotalChanged();

        /// <summary>
        /// On HoursTotal column data entity changing.
        /// </summary>
		partial void OnHoursTotalChanging();

        /// <summary>
        /// On TotalTotals column data entity changed.
        /// </summary>
		partial void OnTotalTotalsChanged();

        /// <summary>
        /// On TotalTotals column data entity changing.
        /// </summary>
		partial void OnTotalTotalsChanging();

        /// <summary>
        /// On GSTTotal column data entity changed.
        /// </summary>
		partial void OnGSTTotalChanged();

        /// <summary>
        /// On GSTTotal column data entity changing.
        /// </summary>
		partial void OnGSTTotalChanging();

        /// <summary>
        /// On CustomerID column data entity changed.
        /// </summary>
		partial void OnCustomerIDChanged();

        /// <summary>
        /// On CustomerID column data entity changing.
        /// </summary>
		partial void OnCustomerIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public CustomerInvoiceDetailsTotalTotals()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the hourstotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "HoursTotal")]
        [XmlElementAttribute(ElementName = "HoursTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("HoursTotal", DbType = "float", Length = 8, IsNullable = true)]
        public System.Nullable<System.Double> HoursTotal
        {
            get
            {
                return this._HoursTotal;
            }
            set
            {
                if ((this._HoursTotal != value))
                {
                    this.OnHoursTotalChanging();
                    this.SendPropertyChanging("HoursTotal");
                    this._HoursTotal = value;
                    this.SendPropertyChanged("HoursTotal");
                    this.OnHoursTotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totaltotals property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TotalTotals")]
        [XmlElementAttribute(ElementName = "TotalTotals", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("TotalTotals", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> TotalTotals
        {
            get
            {
                return this._TotalTotals;
            }
            set
            {
                if ((this._TotalTotals != value))
                {
                    this.OnTotalTotalsChanging();
                    this.SendPropertyChanging("TotalTotals");
                    this._TotalTotals = value;
                    this.SendPropertyChanged("TotalTotals");
                    this.OnTotalTotalsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gsttotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GSTTotal")]
        [XmlElementAttribute(ElementName = "GSTTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("GSTTotal", DbType = "numeric", Length = 17, IsNullable = true)]
        public System.Nullable<System.Decimal> GSTTotal
        {
            get
            {
                return this._GSTTotal;
            }
            set
            {
                if ((this._GSTTotal != value))
                {
                    this.OnGSTTotalChanging();
                    this.SendPropertyChanging("GSTTotal");
                    this._GSTTotal = value;
                    this.SendPropertyChanged("GSTTotal");
                    this.OnGSTTotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the customerid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CustomerID")]
        [XmlElementAttribute(ElementName = "CustomerID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CustomerID", DbType = "int", Length = 4, IsNullable = false)]
        public int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                if ((this._CustomerID != value))
                {
                    this.OnCustomerIDChanging();
                    this.SendPropertyChanging("CustomerID");
                    this._CustomerID = value;
                    this.SendPropertyChanged("CustomerID");
                    this.OnCustomerIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new customerinvoicedetailstotaltotals data entity.
        /// </summary>
        /// <param name="customerID">Initial value of CustomerID.</param>
        /// <returns>The Data.CustomerInvoiceDetailsTotalTotals entity.</returns>
        public static Data.CustomerInvoiceDetailsTotalTotals CreateCustomerInvoiceDetailsTotalTotals(int customerID)
        {
            Data.CustomerInvoiceDetailsTotalTotals customerInvoiceDetailsTotalTotals = new Data.CustomerInvoiceDetailsTotalTotals();
            customerInvoiceDetailsTotalTotals.CustomerID = customerID;
            return customerInvoiceDetailsTotalTotals;
        }
    }
    #endregion
    
    #region CustomerInvoiceProductsTotalTotals Data Entity Type
    /// <summary>
    /// The customerinvoiceproductstotaltotals data object class.
    /// </summary>
    [DataContractAttribute(Name = "CustomerInvoiceProductsTotalTotals", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.CustomerInvoiceProductsTotalTotals")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class CustomerInvoiceProductsTotalTotals : DataBase
    {
        
        private System.Nullable<System.Int32> _UnitsTotal;
        
        private System.Nullable<System.Decimal> _TotalTotals;
        
        private System.Nullable<System.Decimal> _GSTTotal;
        
        private int _CustomerID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On UnitsTotal column data entity changed.
        /// </summary>
		partial void OnUnitsTotalChanged();

        /// <summary>
        /// On UnitsTotal column data entity changing.
        /// </summary>
		partial void OnUnitsTotalChanging();

        /// <summary>
        /// On TotalTotals column data entity changed.
        /// </summary>
		partial void OnTotalTotalsChanged();

        /// <summary>
        /// On TotalTotals column data entity changing.
        /// </summary>
		partial void OnTotalTotalsChanging();

        /// <summary>
        /// On GSTTotal column data entity changed.
        /// </summary>
		partial void OnGSTTotalChanged();

        /// <summary>
        /// On GSTTotal column data entity changing.
        /// </summary>
		partial void OnGSTTotalChanging();

        /// <summary>
        /// On CustomerID column data entity changed.
        /// </summary>
		partial void OnCustomerIDChanged();

        /// <summary>
        /// On CustomerID column data entity changing.
        /// </summary>
		partial void OnCustomerIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public CustomerInvoiceProductsTotalTotals()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the unitstotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "UnitsTotal")]
        [XmlElementAttribute(ElementName = "UnitsTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("UnitsTotal", DbType = "int", Length = 4, IsNullable = true)]
        public System.Nullable<System.Int32> UnitsTotal
        {
            get
            {
                return this._UnitsTotal;
            }
            set
            {
                if ((this._UnitsTotal != value))
                {
                    this.OnUnitsTotalChanging();
                    this.SendPropertyChanging("UnitsTotal");
                    this._UnitsTotal = value;
                    this.SendPropertyChanged("UnitsTotal");
                    this.OnUnitsTotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totaltotals property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "TotalTotals")]
        [XmlElementAttribute(ElementName = "TotalTotals", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("TotalTotals", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> TotalTotals
        {
            get
            {
                return this._TotalTotals;
            }
            set
            {
                if ((this._TotalTotals != value))
                {
                    this.OnTotalTotalsChanging();
                    this.SendPropertyChanging("TotalTotals");
                    this._TotalTotals = value;
                    this.SendPropertyChanged("TotalTotals");
                    this.OnTotalTotalsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gsttotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GSTTotal")]
        [XmlElementAttribute(ElementName = "GSTTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("GSTTotal", DbType = "numeric", Length = 17, IsNullable = true)]
        public System.Nullable<System.Decimal> GSTTotal
        {
            get
            {
                return this._GSTTotal;
            }
            set
            {
                if ((this._GSTTotal != value))
                {
                    this.OnGSTTotalChanging();
                    this.SendPropertyChanging("GSTTotal");
                    this._GSTTotal = value;
                    this.SendPropertyChanged("GSTTotal");
                    this.OnGSTTotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the customerid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CustomerID")]
        [XmlElementAttribute(ElementName = "CustomerID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CustomerID", DbType = "int", Length = 4, IsNullable = false)]
        public int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                if ((this._CustomerID != value))
                {
                    this.OnCustomerIDChanging();
                    this.SendPropertyChanging("CustomerID");
                    this._CustomerID = value;
                    this.SendPropertyChanged("CustomerID");
                    this.OnCustomerIDChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new customerinvoiceproductstotaltotals data entity.
        /// </summary>
        /// <param name="customerID">Initial value of CustomerID.</param>
        /// <returns>The Data.CustomerInvoiceProductsTotalTotals entity.</returns>
        public static Data.CustomerInvoiceProductsTotalTotals CreateCustomerInvoiceProductsTotalTotals(int customerID)
        {
            Data.CustomerInvoiceProductsTotalTotals customerInvoiceProductsTotalTotals = new Data.CustomerInvoiceProductsTotalTotals();
            customerInvoiceProductsTotalTotals.CustomerID = customerID;
            return customerInvoiceProductsTotalTotals;
        }
    }
    #endregion
    
    #region ProductsInvoiceCustomerSummary Data Entity Type
    /// <summary>
    /// The productsinvoicecustomersummary data object class.
    /// </summary>
    [DataContractAttribute(Name = "ProductsInvoiceCustomerSummary", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.ProductsInvoiceCustomerSummary")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class ProductsInvoiceCustomerSummary : DataBase
    {
        
        private int _ProductID;
        
        private string _ProductNumber;
        
        private string _ProductVersion;
        
        private string _Description;
        
        private System.Nullable<System.DateTime> _ProductionDate;
        
        private string _Model;
        
        private string _SerialNumber;
        
        private string _Category;
        
        private System.Nullable<System.Int32> _Units;
        
        private decimal _UnitPrice;
        
        private string _Status;
        
        private string _Comments;
        
        private int _InvoiceID;
        
        private int _UnitsIP;
        
        private string _DescriptionIP;
        
        private decimal _UnitPriceIP;
        
        private decimal _Total;
        
        private decimal _GST;
        
        private string _CommIP;
        
        private int _CustomerID;
        
        private System.DateTime _InvoiceDate;
        
        private System.Nullable<System.DateTime> _PaymentDate;
        
        private string _OrderID;
        
        private string _Developer;
        
        private string _GSTIncluded;
        
        private string _CommI;
        
        private string _IncomeType;
        
        private string _CompanyName;
        
        private string _Firstname;
        
        private string _Surname;
        
        private string _Address;
        
        private string _Suburb;
        
        private string _State;
        
        private string _PostCode;
        
        private string _PhoneNumber;
        
        private string _FaxNumber;
        
        private string _MobileNumber;
        
        private string _EmailAddress;
        
        private string _WebSite;
        
        private string _ABN;
        
        private string _PostalAddress;
        
        private string _PostalSuburb;
        
        private string _PostalState;
        
        private string _PostalPostCode;
        
        private string _CommC;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On ProductID column data entity changed.
        /// </summary>
		partial void OnProductIDChanged();

        /// <summary>
        /// On ProductID column data entity changing.
        /// </summary>
		partial void OnProductIDChanging();

        /// <summary>
        /// On ProductNumber column data entity changed.
        /// </summary>
		partial void OnProductNumberChanged();

        /// <summary>
        /// On ProductNumber column data entity changing.
        /// </summary>
		partial void OnProductNumberChanging();

        /// <summary>
        /// On ProductVersion column data entity changed.
        /// </summary>
		partial void OnProductVersionChanged();

        /// <summary>
        /// On ProductVersion column data entity changing.
        /// </summary>
		partial void OnProductVersionChanging();

        /// <summary>
        /// On Description column data entity changed.
        /// </summary>
		partial void OnDescriptionChanged();

        /// <summary>
        /// On Description column data entity changing.
        /// </summary>
		partial void OnDescriptionChanging();

        /// <summary>
        /// On ProductionDate column data entity changed.
        /// </summary>
		partial void OnProductionDateChanged();

        /// <summary>
        /// On ProductionDate column data entity changing.
        /// </summary>
		partial void OnProductionDateChanging();

        /// <summary>
        /// On Model column data entity changed.
        /// </summary>
		partial void OnModelChanged();

        /// <summary>
        /// On Model column data entity changing.
        /// </summary>
		partial void OnModelChanging();

        /// <summary>
        /// On SerialNumber column data entity changed.
        /// </summary>
		partial void OnSerialNumberChanged();

        /// <summary>
        /// On SerialNumber column data entity changing.
        /// </summary>
		partial void OnSerialNumberChanging();

        /// <summary>
        /// On Category column data entity changed.
        /// </summary>
		partial void OnCategoryChanged();

        /// <summary>
        /// On Category column data entity changing.
        /// </summary>
		partial void OnCategoryChanging();

        /// <summary>
        /// On Units column data entity changed.
        /// </summary>
		partial void OnUnitsChanged();

        /// <summary>
        /// On Units column data entity changing.
        /// </summary>
		partial void OnUnitsChanging();

        /// <summary>
        /// On UnitPrice column data entity changed.
        /// </summary>
		partial void OnUnitPriceChanged();

        /// <summary>
        /// On UnitPrice column data entity changing.
        /// </summary>
		partial void OnUnitPriceChanging();

        /// <summary>
        /// On Status column data entity changed.
        /// </summary>
		partial void OnStatusChanged();

        /// <summary>
        /// On Status column data entity changing.
        /// </summary>
		partial void OnStatusChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

        /// <summary>
        /// On InvoiceID column data entity changed.
        /// </summary>
		partial void OnInvoiceIDChanged();

        /// <summary>
        /// On InvoiceID column data entity changing.
        /// </summary>
		partial void OnInvoiceIDChanging();

        /// <summary>
        /// On UnitsIP column data entity changed.
        /// </summary>
		partial void OnUnitsIPChanged();

        /// <summary>
        /// On UnitsIP column data entity changing.
        /// </summary>
		partial void OnUnitsIPChanging();

        /// <summary>
        /// On DescriptionIP column data entity changed.
        /// </summary>
		partial void OnDescriptionIPChanged();

        /// <summary>
        /// On DescriptionIP column data entity changing.
        /// </summary>
		partial void OnDescriptionIPChanging();

        /// <summary>
        /// On UnitPriceIP column data entity changed.
        /// </summary>
		partial void OnUnitPriceIPChanged();

        /// <summary>
        /// On UnitPriceIP column data entity changing.
        /// </summary>
		partial void OnUnitPriceIPChanging();

        /// <summary>
        /// On Total column data entity changed.
        /// </summary>
		partial void OnTotalChanged();

        /// <summary>
        /// On Total column data entity changing.
        /// </summary>
		partial void OnTotalChanging();

        /// <summary>
        /// On GST column data entity changed.
        /// </summary>
		partial void OnGSTChanged();

        /// <summary>
        /// On GST column data entity changing.
        /// </summary>
		partial void OnGSTChanging();

        /// <summary>
        /// On CommIP column data entity changed.
        /// </summary>
		partial void OnCommIPChanged();

        /// <summary>
        /// On CommIP column data entity changing.
        /// </summary>
		partial void OnCommIPChanging();

        /// <summary>
        /// On CustomerID column data entity changed.
        /// </summary>
		partial void OnCustomerIDChanged();

        /// <summary>
        /// On CustomerID column data entity changing.
        /// </summary>
		partial void OnCustomerIDChanging();

        /// <summary>
        /// On InvoiceDate column data entity changed.
        /// </summary>
		partial void OnInvoiceDateChanged();

        /// <summary>
        /// On InvoiceDate column data entity changing.
        /// </summary>
		partial void OnInvoiceDateChanging();

        /// <summary>
        /// On PaymentDate column data entity changed.
        /// </summary>
		partial void OnPaymentDateChanged();

        /// <summary>
        /// On PaymentDate column data entity changing.
        /// </summary>
		partial void OnPaymentDateChanging();

        /// <summary>
        /// On OrderID column data entity changed.
        /// </summary>
		partial void OnOrderIDChanged();

        /// <summary>
        /// On OrderID column data entity changing.
        /// </summary>
		partial void OnOrderIDChanging();

        /// <summary>
        /// On Developer column data entity changed.
        /// </summary>
		partial void OnDeveloperChanged();

        /// <summary>
        /// On Developer column data entity changing.
        /// </summary>
		partial void OnDeveloperChanging();

        /// <summary>
        /// On GSTIncluded column data entity changed.
        /// </summary>
		partial void OnGSTIncludedChanged();

        /// <summary>
        /// On GSTIncluded column data entity changing.
        /// </summary>
		partial void OnGSTIncludedChanging();

        /// <summary>
        /// On CommI column data entity changed.
        /// </summary>
		partial void OnCommIChanged();

        /// <summary>
        /// On CommI column data entity changing.
        /// </summary>
		partial void OnCommIChanging();

        /// <summary>
        /// On IncomeType column data entity changed.
        /// </summary>
		partial void OnIncomeTypeChanged();

        /// <summary>
        /// On IncomeType column data entity changing.
        /// </summary>
		partial void OnIncomeTypeChanging();

        /// <summary>
        /// On CompanyName column data entity changed.
        /// </summary>
		partial void OnCompanyNameChanged();

        /// <summary>
        /// On CompanyName column data entity changing.
        /// </summary>
		partial void OnCompanyNameChanging();

        /// <summary>
        /// On Firstname column data entity changed.
        /// </summary>
		partial void OnFirstnameChanged();

        /// <summary>
        /// On Firstname column data entity changing.
        /// </summary>
		partial void OnFirstnameChanging();

        /// <summary>
        /// On Surname column data entity changed.
        /// </summary>
		partial void OnSurnameChanged();

        /// <summary>
        /// On Surname column data entity changing.
        /// </summary>
		partial void OnSurnameChanging();

        /// <summary>
        /// On Address column data entity changed.
        /// </summary>
		partial void OnAddressChanged();

        /// <summary>
        /// On Address column data entity changing.
        /// </summary>
		partial void OnAddressChanging();

        /// <summary>
        /// On Suburb column data entity changed.
        /// </summary>
		partial void OnSuburbChanged();

        /// <summary>
        /// On Suburb column data entity changing.
        /// </summary>
		partial void OnSuburbChanging();

        /// <summary>
        /// On State column data entity changed.
        /// </summary>
		partial void OnStateChanged();

        /// <summary>
        /// On State column data entity changing.
        /// </summary>
		partial void OnStateChanging();

        /// <summary>
        /// On PostCode column data entity changed.
        /// </summary>
		partial void OnPostCodeChanged();

        /// <summary>
        /// On PostCode column data entity changing.
        /// </summary>
		partial void OnPostCodeChanging();

        /// <summary>
        /// On PhoneNumber column data entity changed.
        /// </summary>
		partial void OnPhoneNumberChanged();

        /// <summary>
        /// On PhoneNumber column data entity changing.
        /// </summary>
		partial void OnPhoneNumberChanging();

        /// <summary>
        /// On FaxNumber column data entity changed.
        /// </summary>
		partial void OnFaxNumberChanged();

        /// <summary>
        /// On FaxNumber column data entity changing.
        /// </summary>
		partial void OnFaxNumberChanging();

        /// <summary>
        /// On MobileNumber column data entity changed.
        /// </summary>
		partial void OnMobileNumberChanged();

        /// <summary>
        /// On MobileNumber column data entity changing.
        /// </summary>
		partial void OnMobileNumberChanging();

        /// <summary>
        /// On EmailAddress column data entity changed.
        /// </summary>
		partial void OnEmailAddressChanged();

        /// <summary>
        /// On EmailAddress column data entity changing.
        /// </summary>
		partial void OnEmailAddressChanging();

        /// <summary>
        /// On WebSite column data entity changed.
        /// </summary>
		partial void OnWebSiteChanged();

        /// <summary>
        /// On WebSite column data entity changing.
        /// </summary>
		partial void OnWebSiteChanging();

        /// <summary>
        /// On ABN column data entity changed.
        /// </summary>
		partial void OnABNChanged();

        /// <summary>
        /// On ABN column data entity changing.
        /// </summary>
		partial void OnABNChanging();

        /// <summary>
        /// On PostalAddress column data entity changed.
        /// </summary>
		partial void OnPostalAddressChanged();

        /// <summary>
        /// On PostalAddress column data entity changing.
        /// </summary>
		partial void OnPostalAddressChanging();

        /// <summary>
        /// On PostalSuburb column data entity changed.
        /// </summary>
		partial void OnPostalSuburbChanged();

        /// <summary>
        /// On PostalSuburb column data entity changing.
        /// </summary>
		partial void OnPostalSuburbChanging();

        /// <summary>
        /// On PostalState column data entity changed.
        /// </summary>
		partial void OnPostalStateChanged();

        /// <summary>
        /// On PostalState column data entity changing.
        /// </summary>
		partial void OnPostalStateChanging();

        /// <summary>
        /// On PostalPostCode column data entity changed.
        /// </summary>
		partial void OnPostalPostCodeChanged();

        /// <summary>
        /// On PostalPostCode column data entity changing.
        /// </summary>
		partial void OnPostalPostCodeChanging();

        /// <summary>
        /// On CommC column data entity changed.
        /// </summary>
		partial void OnCommCChanged();

        /// <summary>
        /// On CommC column data entity changing.
        /// </summary>
		partial void OnCommCChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public ProductsInvoiceCustomerSummary()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the productid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ProductID")]
        [XmlElementAttribute(ElementName = "ProductID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("ProductID", DbType = "int", Length = 4, IsNullable = false)]
        public int ProductID
        {
            get
            {
                return this._ProductID;
            }
            set
            {
                if ((this._ProductID != value))
                {
                    this.OnProductIDChanging();
                    this.SendPropertyChanging("ProductID");
                    this._ProductID = value;
                    this.SendPropertyChanged("ProductID");
                    this.OnProductIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the productnumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ProductNumber")]
        [XmlElementAttribute(ElementName = "ProductNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("ProductNumber", DbType = "varchar", Length = 50, IsNullable = true)]
        public string ProductNumber
        {
            get
            {
                return this._ProductNumber;
            }
            set
            {
                if ((this._ProductNumber != value))
                {
                    this.OnProductNumberChanging();
                    this.SendPropertyChanging("ProductNumber");
                    this._ProductNumber = value;
                    this.SendPropertyChanged("ProductNumber");
                    this.OnProductNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the productversion property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ProductVersion")]
        [XmlElementAttribute(ElementName = "ProductVersion", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("ProductVersion", DbType = "varchar", Length = 50, IsNullable = true)]
        public string ProductVersion
        {
            get
            {
                return this._ProductVersion;
            }
            set
            {
                if ((this._ProductVersion != value))
                {
                    this.OnProductVersionChanging();
                    this.SendPropertyChanging("ProductVersion");
                    this._ProductVersion = value;
                    this.SendPropertyChanged("ProductVersion");
                    this.OnProductVersionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Description", DbType = "varchar", Length = 200, IsNullable = false)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging();
                    this.SendPropertyChanging("Description");
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the productiondate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ProductionDate")]
        [XmlElementAttribute(ElementName = "ProductionDate", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("ProductionDate", DbType = "datetime", Length = 8, IsNullable = true)]
        public System.Nullable<System.DateTime> ProductionDate
        {
            get
            {
                return this._ProductionDate;
            }
            set
            {
                if ((this._ProductionDate != value))
                {
                    this.OnProductionDateChanging();
                    this.SendPropertyChanging("ProductionDate");
                    this._ProductionDate = value;
                    this.SendPropertyChanged("ProductionDate");
                    this.OnProductionDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the model property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Model")]
        [XmlElementAttribute(ElementName = "Model", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Model", DbType = "varchar", Length = 100, IsNullable = true)]
        public string Model
        {
            get
            {
                return this._Model;
            }
            set
            {
                if ((this._Model != value))
                {
                    this.OnModelChanging();
                    this.SendPropertyChanging("Model");
                    this._Model = value;
                    this.SendPropertyChanged("Model");
                    this.OnModelChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the serialnumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "SerialNumber")]
        [XmlElementAttribute(ElementName = "SerialNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("SerialNumber", DbType = "varchar", Length = 50, IsNullable = true)]
        public string SerialNumber
        {
            get
            {
                return this._SerialNumber;
            }
            set
            {
                if ((this._SerialNumber != value))
                {
                    this.OnSerialNumberChanging();
                    this.SendPropertyChanging("SerialNumber");
                    this._SerialNumber = value;
                    this.SendPropertyChanged("SerialNumber");
                    this.OnSerialNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the category property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Category")]
        [XmlElementAttribute(ElementName = "Category", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Category", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Category
        {
            get
            {
                return this._Category;
            }
            set
            {
                if ((this._Category != value))
                {
                    this.OnCategoryChanging();
                    this.SendPropertyChanging("Category");
                    this._Category = value;
                    this.SendPropertyChanged("Category");
                    this.OnCategoryChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the units property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Units")]
        [XmlElementAttribute(ElementName = "Units", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Units", DbType = "int", Length = 4, IsNullable = true)]
        public System.Nullable<System.Int32> Units
        {
            get
            {
                return this._Units;
            }
            set
            {
                if ((this._Units != value))
                {
                    this.OnUnitsChanging();
                    this.SendPropertyChanging("Units");
                    this._Units = value;
                    this.SendPropertyChanged("Units");
                    this.OnUnitsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the unitprice property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "UnitPrice")]
        [XmlElementAttribute(ElementName = "UnitPrice", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("UnitPrice", DbType = "money", Length = 8, IsNullable = false)]
        public decimal UnitPrice
        {
            get
            {
                return this._UnitPrice;
            }
            set
            {
                if ((this._UnitPrice != value))
                {
                    this.OnUnitPriceChanging();
                    this.SendPropertyChanging("UnitPrice");
                    this._UnitPrice = value;
                    this.SendPropertyChanged("UnitPrice");
                    this.OnUnitPriceChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the status property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Status")]
        [XmlElementAttribute(ElementName = "Status", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Status", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging();
                    this.SendPropertyChanging("Status");
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the invoiceid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "InvoiceID")]
        [XmlElementAttribute(ElementName = "InvoiceID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("InvoiceID", DbType = "int", Length = 4, IsNullable = false)]
        public int InvoiceID
        {
            get
            {
                return this._InvoiceID;
            }
            set
            {
                if ((this._InvoiceID != value))
                {
                    this.OnInvoiceIDChanging();
                    this.SendPropertyChanging("InvoiceID");
                    this._InvoiceID = value;
                    this.SendPropertyChanged("InvoiceID");
                    this.OnInvoiceIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the unitsip property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "UnitsIP")]
        [XmlElementAttribute(ElementName = "UnitsIP", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("UnitsIP", DbType = "int", Length = 4, IsNullable = false)]
        public int UnitsIP
        {
            get
            {
                return this._UnitsIP;
            }
            set
            {
                if ((this._UnitsIP != value))
                {
                    this.OnUnitsIPChanging();
                    this.SendPropertyChanging("UnitsIP");
                    this._UnitsIP = value;
                    this.SendPropertyChanged("UnitsIP");
                    this.OnUnitsIPChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the descriptionip property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DescriptionIP")]
        [XmlElementAttribute(ElementName = "DescriptionIP", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("DescriptionIP", DbType = "varchar", Length = 500, IsNullable = false)]
        public string DescriptionIP
        {
            get
            {
                return this._DescriptionIP;
            }
            set
            {
                if ((this._DescriptionIP != value))
                {
                    this.OnDescriptionIPChanging();
                    this.SendPropertyChanging("DescriptionIP");
                    this._DescriptionIP = value;
                    this.SendPropertyChanged("DescriptionIP");
                    this.OnDescriptionIPChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the unitpriceip property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "UnitPriceIP")]
        [XmlElementAttribute(ElementName = "UnitPriceIP", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("UnitPriceIP", DbType = "money", Length = 8, IsNullable = false)]
        public decimal UnitPriceIP
        {
            get
            {
                return this._UnitPriceIP;
            }
            set
            {
                if ((this._UnitPriceIP != value))
                {
                    this.OnUnitPriceIPChanging();
                    this.SendPropertyChanging("UnitPriceIP");
                    this._UnitPriceIP = value;
                    this.SendPropertyChanged("UnitPriceIP");
                    this.OnUnitPriceIPChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the total property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Total")]
        [XmlElementAttribute(ElementName = "Total", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Total", DbType = "money", Length = 8, IsNullable = false)]
        public decimal Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                if ((this._Total != value))
                {
                    this.OnTotalChanging();
                    this.SendPropertyChanging("Total");
                    this._Total = value;
                    this.SendPropertyChanged("Total");
                    this.OnTotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gst property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GST")]
        [XmlElementAttribute(ElementName = "GST", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("GST", DbType = "money", Length = 8, IsNullable = false)]
        public decimal GST
        {
            get
            {
                return this._GST;
            }
            set
            {
                if ((this._GST != value))
                {
                    this.OnGSTChanging();
                    this.SendPropertyChanging("GST");
                    this._GST = value;
                    this.SendPropertyChanged("GST");
                    this.OnGSTChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the commip property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CommIP")]
        [XmlElementAttribute(ElementName = "CommIP", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("CommIP", DbType = "varchar", Length = 500, IsNullable = true)]
        public string CommIP
        {
            get
            {
                return this._CommIP;
            }
            set
            {
                if ((this._CommIP != value))
                {
                    this.OnCommIPChanging();
                    this.SendPropertyChanging("CommIP");
                    this._CommIP = value;
                    this.SendPropertyChanged("CommIP");
                    this.OnCommIPChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the customerid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CustomerID")]
        [XmlElementAttribute(ElementName = "CustomerID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CustomerID", DbType = "int", Length = 4, IsNullable = false)]
        public int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                if ((this._CustomerID != value))
                {
                    this.OnCustomerIDChanging();
                    this.SendPropertyChanging("CustomerID");
                    this._CustomerID = value;
                    this.SendPropertyChanged("CustomerID");
                    this.OnCustomerIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the invoicedate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "InvoiceDate")]
        [XmlElementAttribute(ElementName = "InvoiceDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("InvoiceDate", DbType = "datetime", Length = 8, IsNullable = false)]
        public System.DateTime InvoiceDate
        {
            get
            {
                return this._InvoiceDate;
            }
            set
            {
                if ((this._InvoiceDate != value))
                {
                    this.OnInvoiceDateChanging();
                    this.SendPropertyChanging("InvoiceDate");
                    this._InvoiceDate = value;
                    this.SendPropertyChanged("InvoiceDate");
                    this.OnInvoiceDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PaymentDate", DbType = "datetime", Length = 8, IsNullable = true)]
        public System.Nullable<System.DateTime> PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this.OnPaymentDateChanging();
                    this.SendPropertyChanging("PaymentDate");
                    this._PaymentDate = value;
                    this.SendPropertyChanged("PaymentDate");
                    this.OnPaymentDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the orderid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "OrderID")]
        [XmlElementAttribute(ElementName = "OrderID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("OrderID", DbType = "varchar", Length = 20, IsNullable = false)]
        public string OrderID
        {
            get
            {
                return this._OrderID;
            }
            set
            {
                if ((this._OrderID != value))
                {
                    this.OnOrderIDChanging();
                    this.SendPropertyChanging("OrderID");
                    this._OrderID = value;
                    this.SendPropertyChanged("OrderID");
                    this.OnOrderIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the developer property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Developer")]
        [XmlElementAttribute(ElementName = "Developer", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Developer", DbType = "varchar", Length = 40, IsNullable = true)]
        public string Developer
        {
            get
            {
                return this._Developer;
            }
            set
            {
                if ((this._Developer != value))
                {
                    this.OnDeveloperChanging();
                    this.SendPropertyChanging("Developer");
                    this._Developer = value;
                    this.SendPropertyChanged("Developer");
                    this.OnDeveloperChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gstincluded property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GSTIncluded")]
        [XmlElementAttribute(ElementName = "GSTIncluded", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("GSTIncluded", DbType = "varchar", Length = 10, IsNullable = true)]
        public string GSTIncluded
        {
            get
            {
                return this._GSTIncluded;
            }
            set
            {
                if ((this._GSTIncluded != value))
                {
                    this.OnGSTIncludedChanging();
                    this.SendPropertyChanging("GSTIncluded");
                    this._GSTIncluded = value;
                    this.SendPropertyChanged("GSTIncluded");
                    this.OnGSTIncludedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the commi property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CommI")]
        [XmlElementAttribute(ElementName = "CommI", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("CommI", DbType = "varchar", Length = 500, IsNullable = true)]
        public string CommI
        {
            get
            {
                return this._CommI;
            }
            set
            {
                if ((this._CommI != value))
                {
                    this.OnCommIChanging();
                    this.SendPropertyChanging("CommI");
                    this._CommI = value;
                    this.SendPropertyChanged("CommI");
                    this.OnCommIChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the incometype property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "IncomeType")]
        [XmlElementAttribute(ElementName = "IncomeType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("IncomeType", DbType = "varchar", Length = 100, IsNullable = false)]
        public string IncomeType
        {
            get
            {
                return this._IncomeType;
            }
            set
            {
                if ((this._IncomeType != value))
                {
                    this.OnIncomeTypeChanging();
                    this.SendPropertyChanging("IncomeType");
                    this._IncomeType = value;
                    this.SendPropertyChanged("IncomeType");
                    this.OnIncomeTypeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companyname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CompanyName")]
        [XmlElementAttribute(ElementName = "CompanyName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("CompanyName", DbType = "varchar", Length = 200, IsNullable = false)]
        public string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                if ((this._CompanyName != value))
                {
                    this.OnCompanyNameChanging();
                    this.SendPropertyChanging("CompanyName");
                    this._CompanyName = value;
                    this.SendPropertyChanged("CompanyName");
                    this.OnCompanyNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Firstname")]
        [XmlElementAttribute(ElementName = "Firstname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Firstname", DbType = "varchar", Length = 40, IsNullable = true)]
        public string Firstname
        {
            get
            {
                return this._Firstname;
            }
            set
            {
                if ((this._Firstname != value))
                {
                    this.OnFirstnameChanging();
                    this.SendPropertyChanging("Firstname");
                    this._Firstname = value;
                    this.SendPropertyChanged("Firstname");
                    this.OnFirstnameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Surname")]
        [XmlElementAttribute(ElementName = "Surname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Surname", DbType = "varchar", Length = 40, IsNullable = true)]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if ((this._Surname != value))
                {
                    this.OnSurnameChanging();
                    this.SendPropertyChanging("Surname");
                    this._Surname = value;
                    this.SendPropertyChanged("Surname");
                    this.OnSurnameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Address")]
        [XmlElementAttribute(ElementName = "Address", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Address", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this.OnAddressChanging();
                    this.SendPropertyChanging("Address");
                    this._Address = value;
                    this.SendPropertyChanged("Address");
                    this.OnAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suburb property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Suburb")]
        [XmlElementAttribute(ElementName = "Suburb", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Suburb", DbType = "varchar", Length = 30, IsNullable = true)]
        public string Suburb
        {
            get
            {
                return this._Suburb;
            }
            set
            {
                if ((this._Suburb != value))
                {
                    this.OnSuburbChanging();
                    this.SendPropertyChanging("Suburb");
                    this._Suburb = value;
                    this.SendPropertyChanged("Suburb");
                    this.OnSuburbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the state property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "State")]
        [XmlElementAttribute(ElementName = "State", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("State", DbType = "varchar", Length = 5, IsNullable = true)]
        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                if ((this._State != value))
                {
                    this.OnStateChanging();
                    this.SendPropertyChanging("State");
                    this._State = value;
                    this.SendPropertyChanged("State");
                    this.OnStateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postcode property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostCode")]
        [XmlElementAttribute(ElementName = "PostCode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostCode", DbType = "varchar", Length = 5, IsNullable = true)]
        public string PostCode
        {
            get
            {
                return this._PostCode;
            }
            set
            {
                if ((this._PostCode != value))
                {
                    this.OnPostCodeChanging();
                    this.SendPropertyChanging("PostCode");
                    this._PostCode = value;
                    this.SendPropertyChanged("PostCode");
                    this.OnPostCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PhoneNumber", DbType = "varchar", Length = 14, IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this.OnPhoneNumberChanging();
                    this.SendPropertyChanging("PhoneNumber");
                    this._PhoneNumber = value;
                    this.SendPropertyChanged("PhoneNumber");
                    this.OnPhoneNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("FaxNumber", DbType = "varchar", Length = 14, IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this.OnFaxNumberChanging();
                    this.SendPropertyChanging("FaxNumber");
                    this._FaxNumber = value;
                    this.SendPropertyChanged("FaxNumber");
                    this.OnFaxNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the mobilenumber property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "MobileNumber")]
        [XmlElementAttribute(ElementName = "MobileNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("MobileNumber", DbType = "varchar", Length = 12, IsNullable = true)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging();
                    this.SendPropertyChanging("MobileNumber");
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("EmailAddress", DbType = "varchar", Length = 100, IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this.OnEmailAddressChanging();
                    this.SendPropertyChanging("EmailAddress");
                    this._EmailAddress = value;
                    this.SendPropertyChanged("EmailAddress");
                    this.OnEmailAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("WebSite", DbType = "varchar", Length = 100, IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this.OnWebSiteChanging();
                    this.SendPropertyChanging("WebSite");
                    this._WebSite = value;
                    this.SendPropertyChanged("WebSite");
                    this.OnWebSiteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the abn property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "ABN")]
        [XmlElementAttribute(ElementName = "ABN", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("ABN", DbType = "varchar", Length = 15, IsNullable = true)]
        public string ABN
        {
            get
            {
                return this._ABN;
            }
            set
            {
                if ((this._ABN != value))
                {
                    this.OnABNChanging();
                    this.SendPropertyChanging("ABN");
                    this._ABN = value;
                    this.SendPropertyChanged("ABN");
                    this.OnABNChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postaladdress property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostalAddress")]
        [XmlElementAttribute(ElementName = "PostalAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostalAddress", DbType = "varchar", Length = 50, IsNullable = true)]
        public string PostalAddress
        {
            get
            {
                return this._PostalAddress;
            }
            set
            {
                if ((this._PostalAddress != value))
                {
                    this.OnPostalAddressChanging();
                    this.SendPropertyChanging("PostalAddress");
                    this._PostalAddress = value;
                    this.SendPropertyChanged("PostalAddress");
                    this.OnPostalAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalsuburb property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostalSuburb")]
        [XmlElementAttribute(ElementName = "PostalSuburb", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostalSuburb", DbType = "varchar", Length = 30, IsNullable = true)]
        public string PostalSuburb
        {
            get
            {
                return this._PostalSuburb;
            }
            set
            {
                if ((this._PostalSuburb != value))
                {
                    this.OnPostalSuburbChanging();
                    this.SendPropertyChanging("PostalSuburb");
                    this._PostalSuburb = value;
                    this.SendPropertyChanged("PostalSuburb");
                    this.OnPostalSuburbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalstate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostalState")]
        [XmlElementAttribute(ElementName = "PostalState", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostalState", DbType = "varchar", Length = 5, IsNullable = true)]
        public string PostalState
        {
            get
            {
                return this._PostalState;
            }
            set
            {
                if ((this._PostalState != value))
                {
                    this.OnPostalStateChanging();
                    this.SendPropertyChanging("PostalState");
                    this._PostalState = value;
                    this.SendPropertyChanged("PostalState");
                    this.OnPostalStateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalpostcode property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PostalPostCode")]
        [XmlElementAttribute(ElementName = "PostalPostCode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PostalPostCode", DbType = "varchar", Length = 5, IsNullable = true)]
        public string PostalPostCode
        {
            get
            {
                return this._PostalPostCode;
            }
            set
            {
                if ((this._PostalPostCode != value))
                {
                    this.OnPostalPostCodeChanging();
                    this.SendPropertyChanging("PostalPostCode");
                    this._PostalPostCode = value;
                    this.SendPropertyChanged("PostalPostCode");
                    this.OnPostalPostCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the commc property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CommC")]
        [XmlElementAttribute(ElementName = "CommC", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("CommC", DbType = "varchar", Length = 500, IsNullable = true)]
        public string CommC
        {
            get
            {
                return this._CommC;
            }
            set
            {
                if ((this._CommC != value))
                {
                    this.OnCommCChanging();
                    this.SendPropertyChanging("CommC");
                    this._CommC = value;
                    this.SendPropertyChanged("CommC");
                    this.OnCommCChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new productsinvoicecustomersummary data entity.
        /// </summary>
        /// <param name="productID">Initial value of ProductID.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="unitPrice">Initial value of UnitPrice.</param>
        /// <param name="invoiceID">Initial value of InvoiceID.</param>
        /// <param name="unitsIP">Initial value of UnitsIP.</param>
        /// <param name="descriptionIP">Initial value of DescriptionIP.</param>
        /// <param name="unitPriceIP">Initial value of UnitPriceIP.</param>
        /// <param name="total">Initial value of Total.</param>
        /// <param name="gST">Initial value of GST.</param>
        /// <param name="customerID">Initial value of CustomerID.</param>
        /// <param name="invoiceDate">Initial value of InvoiceDate.</param>
        /// <param name="orderID">Initial value of OrderID.</param>
        /// <param name="incomeType">Initial value of IncomeType.</param>
        /// <param name="companyName">Initial value of CompanyName.</param>
        /// <returns>The Data.ProductsInvoiceCustomerSummary entity.</returns>
        public static Data.ProductsInvoiceCustomerSummary CreateProductsInvoiceCustomerSummary(int productID, string description, decimal unitPrice, int invoiceID, int unitsIP, string descriptionIP, decimal unitPriceIP, decimal total, decimal gST, int customerID, System.DateTime invoiceDate, string orderID, string incomeType, string companyName)
        {
            Data.ProductsInvoiceCustomerSummary productsInvoiceCustomerSummary = new Data.ProductsInvoiceCustomerSummary();
            productsInvoiceCustomerSummary.ProductID = productID;
            productsInvoiceCustomerSummary.Description = description;
            productsInvoiceCustomerSummary.UnitPrice = unitPrice;
            productsInvoiceCustomerSummary.InvoiceID = invoiceID;
            productsInvoiceCustomerSummary.UnitsIP = unitsIP;
            productsInvoiceCustomerSummary.DescriptionIP = descriptionIP;
            productsInvoiceCustomerSummary.UnitPriceIP = unitPriceIP;
            productsInvoiceCustomerSummary.Total = total;
            productsInvoiceCustomerSummary.GST = gST;
            productsInvoiceCustomerSummary.CustomerID = customerID;
            productsInvoiceCustomerSummary.InvoiceDate = invoiceDate;
            productsInvoiceCustomerSummary.OrderID = orderID;
            productsInvoiceCustomerSummary.IncomeType = incomeType;
            productsInvoiceCustomerSummary.CompanyName = companyName;
            return productsInvoiceCustomerSummary;
        }
    }
    #endregion
    
    #region AccountTransactionTypeDebit Data Entity Type
    /// <summary>
    /// The accounttransactiontypedebit data object class.
    /// </summary>
    [DataContractAttribute(Name = "AccountTransactionTypeDebit", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.AccountTransactionTypeDebit")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class AccountTransactionTypeDebit : DataBase
    {
        
        private int _AccountID;
        
        private int _AccountTransactionID;
        
        private decimal _Amount;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On AccountID column data entity changed.
        /// </summary>
		partial void OnAccountIDChanged();

        /// <summary>
        /// On AccountID column data entity changing.
        /// </summary>
		partial void OnAccountIDChanging();

        /// <summary>
        /// On AccountTransactionID column data entity changed.
        /// </summary>
		partial void OnAccountTransactionIDChanged();

        /// <summary>
        /// On AccountTransactionID column data entity changing.
        /// </summary>
		partial void OnAccountTransactionIDChanging();

        /// <summary>
        /// On Amount column data entity changed.
        /// </summary>
		partial void OnAmountChanged();

        /// <summary>
        /// On Amount column data entity changing.
        /// </summary>
		partial void OnAmountChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public AccountTransactionTypeDebit()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("AccountID", DbType = "int", Length = 4, IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this.OnAccountIDChanging();
                    this.SendPropertyChanging("AccountID");
                    this._AccountID = value;
                    this.SendPropertyChanged("AccountID");
                    this.OnAccountIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accounttransactionid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AccountTransactionID")]
        [XmlElementAttribute(ElementName = "AccountTransactionID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("AccountTransactionID", DbType = "int", Length = 4, IsNullable = false)]
        public int AccountTransactionID
        {
            get
            {
                return this._AccountTransactionID;
            }
            set
            {
                if ((this._AccountTransactionID != value))
                {
                    this.OnAccountTransactionIDChanging();
                    this.SendPropertyChanging("AccountTransactionID");
                    this._AccountTransactionID = value;
                    this.SendPropertyChanged("AccountTransactionID");
                    this.OnAccountTransactionIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Amount", DbType = "money", Length = 8, IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this.OnAmountChanging();
                    this.SendPropertyChanging("Amount");
                    this._Amount = value;
                    this.SendPropertyChanged("Amount");
                    this.OnAmountChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new accounttransactiontypedebit data entity.
        /// </summary>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="accountTransactionID">Initial value of AccountTransactionID.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.AccountTransactionTypeDebit entity.</returns>
        public static Data.AccountTransactionTypeDebit CreateAccountTransactionTypeDebit(int accountID, int accountTransactionID, decimal amount)
        {
            Data.AccountTransactionTypeDebit accountTransactionTypeDebit = new Data.AccountTransactionTypeDebit();
            accountTransactionTypeDebit.AccountID = accountID;
            accountTransactionTypeDebit.AccountTransactionID = accountTransactionID;
            accountTransactionTypeDebit.Amount = amount;
            return accountTransactionTypeDebit;
        }
    }
    #endregion
    
    #region AccountTransactionTypeCredit Data Entity Type
    /// <summary>
    /// The accounttransactiontypecredit data object class.
    /// </summary>
    [DataContractAttribute(Name = "AccountTransactionTypeCredit", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.AccountTransactionTypeCredit")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class AccountTransactionTypeCredit : DataBase
    {
        
        private int _AccountID;
        
        private int _AccountTransactionID;
        
        private decimal _Amount;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On AccountID column data entity changed.
        /// </summary>
		partial void OnAccountIDChanged();

        /// <summary>
        /// On AccountID column data entity changing.
        /// </summary>
		partial void OnAccountIDChanging();

        /// <summary>
        /// On AccountTransactionID column data entity changed.
        /// </summary>
		partial void OnAccountTransactionIDChanged();

        /// <summary>
        /// On AccountTransactionID column data entity changing.
        /// </summary>
		partial void OnAccountTransactionIDChanging();

        /// <summary>
        /// On Amount column data entity changed.
        /// </summary>
		partial void OnAmountChanged();

        /// <summary>
        /// On Amount column data entity changing.
        /// </summary>
		partial void OnAmountChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public AccountTransactionTypeCredit()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("AccountID", DbType = "int", Length = 4, IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this.OnAccountIDChanging();
                    this.SendPropertyChanging("AccountID");
                    this._AccountID = value;
                    this.SendPropertyChanged("AccountID");
                    this.OnAccountIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accounttransactionid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "AccountTransactionID")]
        [XmlElementAttribute(ElementName = "AccountTransactionID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("AccountTransactionID", DbType = "int", Length = 4, IsNullable = false)]
        public int AccountTransactionID
        {
            get
            {
                return this._AccountTransactionID;
            }
            set
            {
                if ((this._AccountTransactionID != value))
                {
                    this.OnAccountTransactionIDChanging();
                    this.SendPropertyChanging("AccountTransactionID");
                    this._AccountTransactionID = value;
                    this.SendPropertyChanged("AccountTransactionID");
                    this.OnAccountTransactionIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("Amount", DbType = "money", Length = 8, IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this.OnAmountChanging();
                    this.SendPropertyChanging("Amount");
                    this._Amount = value;
                    this.SendPropertyChanged("Amount");
                    this.OnAmountChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new accounttransactiontypecredit data entity.
        /// </summary>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="accountTransactionID">Initial value of AccountTransactionID.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.AccountTransactionTypeCredit entity.</returns>
        public static Data.AccountTransactionTypeCredit CreateAccountTransactionTypeCredit(int accountID, int accountTransactionID, decimal amount)
        {
            Data.AccountTransactionTypeCredit accountTransactionTypeCredit = new Data.AccountTransactionTypeCredit();
            accountTransactionTypeCredit.AccountID = accountID;
            accountTransactionTypeCredit.AccountTransactionID = accountTransactionID;
            accountTransactionTypeCredit.Amount = amount;
            return accountTransactionTypeCredit;
        }
    }
    #endregion
    
    #region InvoiceSubtotals Data Entity Type
    /// <summary>
    /// The invoicesubtotals data object class.
    /// </summary>
    [DataContractAttribute(Name = "InvoiceSubtotals", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.InvoiceSubtotals")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class InvoiceSubtotals : DataBase
    {
        
        private int _InvoiceID;
        
        private System.Nullable<System.Decimal> _Subtotal;
        
        private System.Nullable<System.Decimal> _Gst;
        
        private System.Nullable<System.Decimal> _Totals;
        
        private System.Nullable<System.Double> _PreGST;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On InvoiceID column data entity changed.
        /// </summary>
		partial void OnInvoiceIDChanged();

        /// <summary>
        /// On InvoiceID column data entity changing.
        /// </summary>
		partial void OnInvoiceIDChanging();

        /// <summary>
        /// On Subtotal column data entity changed.
        /// </summary>
		partial void OnSubtotalChanged();

        /// <summary>
        /// On Subtotal column data entity changing.
        /// </summary>
		partial void OnSubtotalChanging();

        /// <summary>
        /// On Gst column data entity changed.
        /// </summary>
		partial void OnGstChanged();

        /// <summary>
        /// On Gst column data entity changing.
        /// </summary>
		partial void OnGstChanging();

        /// <summary>
        /// On Totals column data entity changed.
        /// </summary>
		partial void OnTotalsChanged();

        /// <summary>
        /// On Totals column data entity changing.
        /// </summary>
		partial void OnTotalsChanging();

        /// <summary>
        /// On PreGST column data entity changed.
        /// </summary>
		partial void OnPreGSTChanged();

        /// <summary>
        /// On PreGST column data entity changing.
        /// </summary>
		partial void OnPreGSTChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public InvoiceSubtotals()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the invoiceid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "InvoiceID")]
        [XmlElementAttribute(ElementName = "InvoiceID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("InvoiceID", DbType = "int", Length = 4, IsNullable = false)]
        public int InvoiceID
        {
            get
            {
                return this._InvoiceID;
            }
            set
            {
                if ((this._InvoiceID != value))
                {
                    this.OnInvoiceIDChanging();
                    this.SendPropertyChanging("InvoiceID");
                    this._InvoiceID = value;
                    this.SendPropertyChanged("InvoiceID");
                    this.OnInvoiceIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the subtotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Subtotal")]
        [XmlElementAttribute(ElementName = "Subtotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Subtotal", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Subtotal
        {
            get
            {
                return this._Subtotal;
            }
            set
            {
                if ((this._Subtotal != value))
                {
                    this.OnSubtotalChanging();
                    this.SendPropertyChanging("Subtotal");
                    this._Subtotal = value;
                    this.SendPropertyChanged("Subtotal");
                    this.OnSubtotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gst property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Gst")]
        [XmlElementAttribute(ElementName = "Gst", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Gst", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Gst
        {
            get
            {
                return this._Gst;
            }
            set
            {
                if ((this._Gst != value))
                {
                    this.OnGstChanging();
                    this.SendPropertyChanging("Gst");
                    this._Gst = value;
                    this.SendPropertyChanged("Gst");
                    this.OnGstChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totals property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Totals")]
        [XmlElementAttribute(ElementName = "Totals", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Totals", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Totals
        {
            get
            {
                return this._Totals;
            }
            set
            {
                if ((this._Totals != value))
                {
                    this.OnTotalsChanging();
                    this.SendPropertyChanging("Totals");
                    this._Totals = value;
                    this.SendPropertyChanged("Totals");
                    this.OnTotalsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the pregst property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PreGST")]
        [XmlElementAttribute(ElementName = "PreGST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PreGST", DbType = "float", Length = 8, IsNullable = true)]
        public System.Nullable<System.Double> PreGST
        {
            get
            {
                return this._PreGST;
            }
            set
            {
                if ((this._PreGST != value))
                {
                    this.OnPreGSTChanging();
                    this.SendPropertyChanging("PreGST");
                    this._PreGST = value;
                    this.SendPropertyChanged("PreGST");
                    this.OnPreGSTChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new invoicesubtotals data entity.
        /// </summary>
        /// <param name="invoiceID">Initial value of InvoiceID.</param>
        /// <returns>The Data.InvoiceSubtotals entity.</returns>
        public static Data.InvoiceSubtotals CreateInvoiceSubtotals(int invoiceID)
        {
            Data.InvoiceSubtotals invoiceSubtotals = new Data.InvoiceSubtotals();
            invoiceSubtotals.InvoiceID = invoiceID;
            return invoiceSubtotals;
        }
    }
    #endregion
    
    #region InvoiceSubtotalTotal Data Entity Type
    /// <summary>
    /// The invoicesubtotaltotal data object class.
    /// </summary>
    [DataContractAttribute(Name = "InvoiceSubtotalTotal", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.InvoiceSubtotalTotal")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class InvoiceSubtotalTotal : DataBase
    {
        
        private System.Nullable<System.Decimal> _Total;
        
        private System.Nullable<System.Decimal> _GST;
        
        private System.Nullable<System.Decimal> _PreGst;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On Total column data entity changed.
        /// </summary>
		partial void OnTotalChanged();

        /// <summary>
        /// On Total column data entity changing.
        /// </summary>
		partial void OnTotalChanging();

        /// <summary>
        /// On GST column data entity changed.
        /// </summary>
		partial void OnGSTChanged();

        /// <summary>
        /// On GST column data entity changing.
        /// </summary>
		partial void OnGSTChanging();

        /// <summary>
        /// On PreGst column data entity changed.
        /// </summary>
		partial void OnPreGstChanged();

        /// <summary>
        /// On PreGst column data entity changing.
        /// </summary>
		partial void OnPreGstChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public InvoiceSubtotalTotal()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the total property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Total")]
        [XmlElementAttribute(ElementName = "Total", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Total", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                if ((this._Total != value))
                {
                    this.OnTotalChanging();
                    this.SendPropertyChanging("Total");
                    this._Total = value;
                    this.SendPropertyChanged("Total");
                    this.OnTotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gst property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GST")]
        [XmlElementAttribute(ElementName = "GST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("GST", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> GST
        {
            get
            {
                return this._GST;
            }
            set
            {
                if ((this._GST != value))
                {
                    this.OnGSTChanging();
                    this.SendPropertyChanging("GST");
                    this._GST = value;
                    this.SendPropertyChanged("GST");
                    this.OnGSTChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the pregst property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PreGst")]
        [XmlElementAttribute(ElementName = "PreGst", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PreGst", DbType = "numeric", Length = 17, IsNullable = true)]
        public System.Nullable<System.Decimal> PreGst
        {
            get
            {
                return this._PreGst;
            }
            set
            {
                if ((this._PreGst != value))
                {
                    this.OnPreGstChanging();
                    this.SendPropertyChanging("PreGst");
                    this._PreGst = value;
                    this.SendPropertyChanged("PreGst");
                    this.OnPreGstChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new invoicesubtotaltotal data entity.
        /// </summary>
        /// <returns>The Data.InvoiceSubtotalTotal entity.</returns>
        public static Data.InvoiceSubtotalTotal CreateInvoiceSubtotalTotal()
        {
            Data.InvoiceSubtotalTotal invoiceSubtotalTotal = new Data.InvoiceSubtotalTotal();
            return invoiceSubtotalTotal;
        }
    }
    #endregion
    
    #region AccountTransactionCreditTotal Data Entity Type
    /// <summary>
    /// The accounttransactioncredittotal data object class.
    /// </summary>
    [DataContractAttribute(Name = "AccountTransactionCreditTotal", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.AccountTransactionCreditTotal")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class AccountTransactionCreditTotal : DataBase
    {
        
        private System.Nullable<System.Decimal> _CreditTotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On CreditTotal column data entity changed.
        /// </summary>
		partial void OnCreditTotalChanged();

        /// <summary>
        /// On CreditTotal column data entity changing.
        /// </summary>
		partial void OnCreditTotalChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public AccountTransactionCreditTotal()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the credittotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "CreditTotal")]
        [XmlElementAttribute(ElementName = "CreditTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("CreditTotal", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> CreditTotal
        {
            get
            {
                return this._CreditTotal;
            }
            set
            {
                if ((this._CreditTotal != value))
                {
                    this.OnCreditTotalChanging();
                    this.SendPropertyChanging("CreditTotal");
                    this._CreditTotal = value;
                    this.SendPropertyChanged("CreditTotal");
                    this.OnCreditTotalChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new accounttransactioncredittotal data entity.
        /// </summary>
        /// <returns>The Data.AccountTransactionCreditTotal entity.</returns>
        public static Data.AccountTransactionCreditTotal CreateAccountTransactionCreditTotal()
        {
            Data.AccountTransactionCreditTotal accountTransactionCreditTotal = new Data.AccountTransactionCreditTotal();
            return accountTransactionCreditTotal;
        }
    }
    #endregion
    
    #region EmployeeWageSubtotal Data Entity Type
    /// <summary>
    /// The employeewagesubtotal data object class.
    /// </summary>
    [DataContractAttribute(Name = "EmployeeWageSubtotal", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.EmployeeWageSubtotal")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class EmployeeWageSubtotal : DataBase
    {
        
        private System.DateTime _PaymentDate;
        
        private int _EmployeeID;
        
        private System.Nullable<System.Decimal> _Subtotal;
        
        private System.Nullable<System.Decimal> _PAYGSubTotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On PaymentDate column data entity changed.
        /// </summary>
		partial void OnPaymentDateChanged();

        /// <summary>
        /// On PaymentDate column data entity changing.
        /// </summary>
		partial void OnPaymentDateChanging();

        /// <summary>
        /// On EmployeeID column data entity changed.
        /// </summary>
		partial void OnEmployeeIDChanged();

        /// <summary>
        /// On EmployeeID column data entity changing.
        /// </summary>
		partial void OnEmployeeIDChanging();

        /// <summary>
        /// On Subtotal column data entity changed.
        /// </summary>
		partial void OnSubtotalChanged();

        /// <summary>
        /// On Subtotal column data entity changing.
        /// </summary>
		partial void OnSubtotalChanging();

        /// <summary>
        /// On PAYGSubTotal column data entity changed.
        /// </summary>
		partial void OnPAYGSubTotalChanged();

        /// <summary>
        /// On PAYGSubTotal column data entity changing.
        /// </summary>
		partial void OnPAYGSubTotalChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public EmployeeWageSubtotal()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("PaymentDate", DbType = "datetime", Length = 8, IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this.OnPaymentDateChanging();
                    this.SendPropertyChanging("PaymentDate");
                    this._PaymentDate = value;
                    this.SendPropertyChanged("PaymentDate");
                    this.OnPaymentDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("EmployeeID", DbType = "int", Length = 4, IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this.OnEmployeeIDChanging();
                    this.SendPropertyChanging("EmployeeID");
                    this._EmployeeID = value;
                    this.SendPropertyChanged("EmployeeID");
                    this.OnEmployeeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the subtotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Subtotal")]
        [XmlElementAttribute(ElementName = "Subtotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Subtotal", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Subtotal
        {
            get
            {
                return this._Subtotal;
            }
            set
            {
                if ((this._Subtotal != value))
                {
                    this.OnSubtotalChanging();
                    this.SendPropertyChanging("Subtotal");
                    this._Subtotal = value;
                    this.SendPropertyChanged("Subtotal");
                    this.OnSubtotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paygsubtotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PAYGSubTotal")]
        [XmlElementAttribute(ElementName = "PAYGSubTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PAYGSubTotal", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> PAYGSubTotal
        {
            get
            {
                return this._PAYGSubTotal;
            }
            set
            {
                if ((this._PAYGSubTotal != value))
                {
                    this.OnPAYGSubTotalChanging();
                    this.SendPropertyChanging("PAYGSubTotal");
                    this._PAYGSubTotal = value;
                    this.SendPropertyChanged("PAYGSubTotal");
                    this.OnPAYGSubTotalChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new employeewagesubtotal data entity.
        /// </summary>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <returns>The Data.EmployeeWageSubtotal entity.</returns>
        public static Data.EmployeeWageSubtotal CreateEmployeeWageSubtotal(System.DateTime paymentDate, int employeeID)
        {
            Data.EmployeeWageSubtotal employeeWageSubtotal = new Data.EmployeeWageSubtotal();
            employeeWageSubtotal.PaymentDate = paymentDate;
            employeeWageSubtotal.EmployeeID = employeeID;
            return employeeWageSubtotal;
        }
    }
    #endregion
    
    #region AccountTransactionDebitTotal Data Entity Type
    /// <summary>
    /// The accounttransactiondebittotal data object class.
    /// </summary>
    [DataContractAttribute(Name = "AccountTransactionDebitTotal", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.AccountTransactionDebitTotal")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class AccountTransactionDebitTotal : DataBase
    {
        
        private System.Nullable<System.Decimal> _DebitTotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DebitTotal column data entity changed.
        /// </summary>
		partial void OnDebitTotalChanged();

        /// <summary>
        /// On DebitTotal column data entity changing.
        /// </summary>
		partial void OnDebitTotalChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public AccountTransactionDebitTotal()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the debittotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "DebitTotal")]
        [XmlElementAttribute(ElementName = "DebitTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("DebitTotal", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> DebitTotal
        {
            get
            {
                return this._DebitTotal;
            }
            set
            {
                if ((this._DebitTotal != value))
                {
                    this.OnDebitTotalChanging();
                    this.SendPropertyChanging("DebitTotal");
                    this._DebitTotal = value;
                    this.SendPropertyChanged("DebitTotal");
                    this.OnDebitTotalChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new accounttransactiondebittotal data entity.
        /// </summary>
        /// <returns>The Data.AccountTransactionDebitTotal entity.</returns>
        public static Data.AccountTransactionDebitTotal CreateAccountTransactionDebitTotal()
        {
            Data.AccountTransactionDebitTotal accountTransactionDebitTotal = new Data.AccountTransactionDebitTotal();
            return accountTransactionDebitTotal;
        }
    }
    #endregion
    
    #region EmployeeWageSubtotalTotal Data Entity Type
    /// <summary>
    /// The employeewagesubtotaltotal data object class.
    /// </summary>
    [DataContractAttribute(Name = "EmployeeWageSubtotalTotal", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.EmployeeWageSubtotalTotal")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class EmployeeWageSubtotalTotal : DataBase
    {
        
        private System.Nullable<System.Decimal> _Total;
        
        private System.Nullable<System.Decimal> _PAYGTotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On Total column data entity changed.
        /// </summary>
		partial void OnTotalChanged();

        /// <summary>
        /// On Total column data entity changing.
        /// </summary>
		partial void OnTotalChanging();

        /// <summary>
        /// On PAYGTotal column data entity changed.
        /// </summary>
		partial void OnPAYGTotalChanged();

        /// <summary>
        /// On PAYGTotal column data entity changing.
        /// </summary>
		partial void OnPAYGTotalChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public EmployeeWageSubtotalTotal()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the total property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Total")]
        [XmlElementAttribute(ElementName = "Total", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Total", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                if ((this._Total != value))
                {
                    this.OnTotalChanging();
                    this.SendPropertyChanging("Total");
                    this._Total = value;
                    this.SendPropertyChanged("Total");
                    this.OnTotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paygtotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PAYGTotal")]
        [XmlElementAttribute(ElementName = "PAYGTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PAYGTotal", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> PAYGTotal
        {
            get
            {
                return this._PAYGTotal;
            }
            set
            {
                if ((this._PAYGTotal != value))
                {
                    this.OnPAYGTotalChanging();
                    this.SendPropertyChanging("PAYGTotal");
                    this._PAYGTotal = value;
                    this.SendPropertyChanged("PAYGTotal");
                    this.OnPAYGTotalChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new employeewagesubtotaltotal data entity.
        /// </summary>
        /// <returns>The Data.EmployeeWageSubtotalTotal entity.</returns>
        public static Data.EmployeeWageSubtotalTotal CreateEmployeeWageSubtotalTotal()
        {
            Data.EmployeeWageSubtotalTotal employeeWageSubtotalTotal = new Data.EmployeeWageSubtotalTotal();
            return employeeWageSubtotalTotal;
        }
    }
    #endregion
    
    #region EmployeeWageTotalByEmployee Data Entity Type
    /// <summary>
    /// The employeewagetotalbyemployee data object class.
    /// </summary>
    [DataContractAttribute(Name = "EmployeeWageTotalByEmployee", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.EmployeeWageTotalByEmployee")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class EmployeeWageTotalByEmployee : DataBase
    {
        
        private int _EmployeeID;
        
        private System.Nullable<System.Decimal> _Total;
        
        private System.Nullable<System.Decimal> _PAYGTotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On EmployeeID column data entity changed.
        /// </summary>
		partial void OnEmployeeIDChanged();

        /// <summary>
        /// On EmployeeID column data entity changing.
        /// </summary>
		partial void OnEmployeeIDChanging();

        /// <summary>
        /// On Total column data entity changed.
        /// </summary>
		partial void OnTotalChanged();

        /// <summary>
        /// On Total column data entity changing.
        /// </summary>
		partial void OnTotalChanging();

        /// <summary>
        /// On PAYGTotal column data entity changed.
        /// </summary>
		partial void OnPAYGTotalChanged();

        /// <summary>
        /// On PAYGTotal column data entity changing.
        /// </summary>
		partial void OnPAYGTotalChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public EmployeeWageTotalByEmployee()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("EmployeeID", DbType = "int", Length = 4, IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this.OnEmployeeIDChanging();
                    this.SendPropertyChanging("EmployeeID");
                    this._EmployeeID = value;
                    this.SendPropertyChanged("EmployeeID");
                    this.OnEmployeeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the total property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Total")]
        [XmlElementAttribute(ElementName = "Total", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Total", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                if ((this._Total != value))
                {
                    this.OnTotalChanging();
                    this.SendPropertyChanging("Total");
                    this._Total = value;
                    this.SendPropertyChanged("Total");
                    this.OnTotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paygtotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "PAYGTotal")]
        [XmlElementAttribute(ElementName = "PAYGTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("PAYGTotal", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> PAYGTotal
        {
            get
            {
                return this._PAYGTotal;
            }
            set
            {
                if ((this._PAYGTotal != value))
                {
                    this.OnPAYGTotalChanging();
                    this.SendPropertyChanging("PAYGTotal");
                    this._PAYGTotal = value;
                    this.SendPropertyChanged("PAYGTotal");
                    this.OnPAYGTotalChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new employeewagetotalbyemployee data entity.
        /// </summary>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <returns>The Data.EmployeeWageTotalByEmployee entity.</returns>
        public static Data.EmployeeWageTotalByEmployee CreateEmployeeWageTotalByEmployee(int employeeID)
        {
            Data.EmployeeWageTotalByEmployee employeeWageTotalByEmployee = new Data.EmployeeWageTotalByEmployee();
            employeeWageTotalByEmployee.EmployeeID = employeeID;
            return employeeWageTotalByEmployee;
        }
    }
    #endregion
    
    #region VendorDetailsSubtotalTotal Data Entity Type
    /// <summary>
    /// The vendordetailssubtotaltotal data object class.
    /// </summary>
    [DataContractAttribute(Name = "VendorDetailsSubtotalTotal", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.VendorDetailsSubtotalTotal")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class VendorDetailsSubtotalTotal : DataBase
    {
        
        private System.Nullable<System.Decimal> _Total;
        
        private System.Nullable<System.Decimal> _GST;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On Total column data entity changed.
        /// </summary>
		partial void OnTotalChanged();

        /// <summary>
        /// On Total column data entity changing.
        /// </summary>
		partial void OnTotalChanging();

        /// <summary>
        /// On GST column data entity changed.
        /// </summary>
		partial void OnGSTChanged();

        /// <summary>
        /// On GST column data entity changing.
        /// </summary>
		partial void OnGSTChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public VendorDetailsSubtotalTotal()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the total property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Total")]
        [XmlElementAttribute(ElementName = "Total", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Total", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                if ((this._Total != value))
                {
                    this.OnTotalChanging();
                    this.SendPropertyChanging("Total");
                    this._Total = value;
                    this.SendPropertyChanged("Total");
                    this.OnTotalChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gst property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "GST")]
        [XmlElementAttribute(ElementName = "GST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("GST", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> GST
        {
            get
            {
                return this._GST;
            }
            set
            {
                if ((this._GST != value))
                {
                    this.OnGSTChanging();
                    this.SendPropertyChanging("GST");
                    this._GST = value;
                    this.SendPropertyChanged("GST");
                    this.OnGSTChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new vendordetailssubtotaltotal data entity.
        /// </summary>
        /// <returns>The Data.VendorDetailsSubtotalTotal entity.</returns>
        public static Data.VendorDetailsSubtotalTotal CreateVendorDetailsSubtotalTotal()
        {
            Data.VendorDetailsSubtotalTotal vendorDetailsSubtotalTotal = new Data.VendorDetailsSubtotalTotal();
            return vendorDetailsSubtotalTotal;
        }
    }
    #endregion
    
    #region EmployeeSuperSubtotal Data Entity Type
    /// <summary>
    /// The employeesupersubtotal data object class.
    /// </summary>
    [DataContractAttribute(Name = "EmployeeSuperSubtotal", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.EmployeeSuperSubtotal")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class EmployeeSuperSubtotal : DataBase
    {
        
        private int _EmployeeID;
        
        private System.Nullable<System.Decimal> _SubTotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On EmployeeID column data entity changed.
        /// </summary>
		partial void OnEmployeeIDChanged();

        /// <summary>
        /// On EmployeeID column data entity changing.
        /// </summary>
		partial void OnEmployeeIDChanging();

        /// <summary>
        /// On SubTotal column data entity changed.
        /// </summary>
		partial void OnSubTotalChanged();

        /// <summary>
        /// On SubTotal column data entity changing.
        /// </summary>
		partial void OnSubTotalChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public EmployeeSuperSubtotal()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        [DataColumnAttribute("EmployeeID", DbType = "int", Length = 4, IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this.OnEmployeeIDChanging();
                    this.SendPropertyChanging("EmployeeID");
                    this._EmployeeID = value;
                    this.SendPropertyChanged("EmployeeID");
                    this.OnEmployeeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the subtotal property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "SubTotal")]
        [XmlElementAttribute(ElementName = "SubTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("SubTotal", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> SubTotal
        {
            get
            {
                return this._SubTotal;
            }
            set
            {
                if ((this._SubTotal != value))
                {
                    this.OnSubTotalChanging();
                    this.SendPropertyChanging("SubTotal");
                    this._SubTotal = value;
                    this.SendPropertyChanged("SubTotal");
                    this.OnSubTotalChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new employeesupersubtotal data entity.
        /// </summary>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <returns>The Data.EmployeeSuperSubtotal entity.</returns>
        public static Data.EmployeeSuperSubtotal CreateEmployeeSuperSubtotal(int employeeID)
        {
            Data.EmployeeSuperSubtotal employeeSuperSubtotal = new Data.EmployeeSuperSubtotal();
            employeeSuperSubtotal.EmployeeID = employeeID;
            return employeeSuperSubtotal;
        }
    }
    #endregion
    
    #region EmployeeSuperSubtotalTotal Data Entity Type
    /// <summary>
    /// The employeesupersubtotaltotal data object class.
    /// </summary>
    [DataContractAttribute(Name = "EmployeeSuperSubtotalTotal", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.EmployeeSuperSubtotalTotal")]
    [DatabaseAttribute("NequeoCompany")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class EmployeeSuperSubtotalTotal : DataBase
    {
        
        private System.Nullable<System.Decimal> _Total;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On Total column data entity changed.
        /// </summary>
		partial void OnTotalChanged();

        /// <summary>
        /// On Total column data entity changing.
        /// </summary>
		partial void OnTotalChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public EmployeeSuperSubtotalTotal()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the total property for the object.
        /// </summary>
        [DataMemberAttribute(Name = "Total")]
        [XmlElementAttribute(ElementName = "Total", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        [DataColumnAttribute("Total", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                if ((this._Total != value))
                {
                    this.OnTotalChanging();
                    this.SendPropertyChanging("Total");
                    this._Total = value;
                    this.SendPropertyChanged("Total");
                    this.OnTotalChanged();
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new employeesupersubtotaltotal data entity.
        /// </summary>
        /// <returns>The Data.EmployeeSuperSubtotalTotal entity.</returns>
        public static Data.EmployeeSuperSubtotalTotal CreateEmployeeSuperSubtotalTotal()
        {
            Data.EmployeeSuperSubtotalTotal employeeSuperSubtotalTotal = new Data.EmployeeSuperSubtotalTotal();
            return employeeSuperSubtotalTotal;
        }
    }
    #endregion
}
