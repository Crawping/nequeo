// Warning 169 (Disables the 'Never used' warning)
#pragma warning disable 169
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nequeo.DataAccess.NequeoCompany.Data.Extension
{
    using System;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Data.Linq;
    using System.Data.Linq.SqlClient;
    using System.Data.Linq.Mapping;
    using Nequeo.Data.DataType;
    using Nequeo.Data;
    using Nequeo.Data.Linq;
    using Nequeo.Data.Control;
    using Nequeo.Data.Custom;
    using Nequeo.Data.LinqToSql;
    using Nequeo.Data.DataSet;
    using Nequeo.Data.Edm;
    using Nequeo.ComponentModel;
    
    
    /// <summary>
    /// The invoicedetails object class.
    /// </summary>
    public partial class InvoiceDetails
    {
        
        #region Public Function Methods
        /// <summary>
        /// Execute the getinvoicedetailsbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetInvoiceDetailsBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetInvoiceDetailsBetweenDateResult> GetInvoiceDetailsBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetInvoiceDetailsBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getinvoicedetailsbetweendateincome routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetInvoiceDetailsBetweenDateIncome", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetInvoiceDetailsBetweenDateIncomeResult> GetInvoiceDetailsBetweenDateIncome([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetInvoiceDetailsBetweenDateIncomeResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getinvoicedetailsbetweendatenotpaid routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetInvoiceDetailsBetweenDateNotPaid", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetInvoiceDetailsBetweenDateNotPaidResult> GetInvoiceDetailsBetweenDateNotPaid([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetInvoiceDetailsBetweenDateNotPaidResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getinvoicedetailsbetweendatepayment routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetInvoiceDetailsBetweenDatePayment", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetInvoiceDetailsBetweenDatePaymentResult> GetInvoiceDetailsBetweenDatePayment([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetInvoiceDetailsBetweenDatePaymentResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getinvoicedetailssummarybetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetInvoiceDetailsSummaryBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetInvoiceDetailsSummaryBetweenDateResult> GetInvoiceDetailsSummaryBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetInvoiceDetailsSummaryBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getinvoicedetailssummarybetweendateincome routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetInvoiceDetailsSummaryBetweenDateIncome", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetInvoiceDetailsSummaryBetweenDateIncomeResult> GetInvoiceDetailsSummaryBetweenDateIncome([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetInvoiceDetailsSummaryBetweenDateIncomeResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getinvoicedetailssummarynotpaidbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetInvoiceDetailsSummaryNotPaidBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetInvoiceDetailsSummaryNotPaidBetweenDateResult> GetInvoiceDetailsSummaryNotPaidBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetInvoiceDetailsSummaryNotPaidBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getinvoicedetailssummarypaidbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetInvoiceDetailsSummaryPaidBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetInvoiceDetailsSummaryPaidBetweenDateResult> GetInvoiceDetailsSummaryPaidBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetInvoiceDetailsSummaryPaidBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getselectedinvoicedetails routine.
        /// </summary>
        /// <param name="invoiceID">Initial value of InvoiceID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetSelectedInvoiceDetails", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetSelectedInvoiceDetailsResult> GetSelectedInvoiceDetails([FunctionParameterAttribute("@InvoiceID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> invoiceID, [FunctionParameterAttribute("@CompanyID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> companyID, [FunctionParameterAttribute("@AccountID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> accountID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), invoiceID, companyID, accountID);
            return ((List<Data.Extended.GetSelectedInvoiceDetailsResult>)(result.ReturnValue));
        }
        #endregion
    }
}
namespace Nequeo.DataAccess.NequeoCompany.Data.Extended
{
    using System;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Data.Linq;
    using System.Data.Linq.SqlClient;
    using System.Data.Linq.Mapping;
    using Nequeo.Data.DataType;
    using Nequeo.Data;
    using Nequeo.Data.Linq;
    using Nequeo.Data.Control;
    using Nequeo.Data.Custom;
    using Nequeo.Data.LinqToSql;
    using Nequeo.Data.DataSet;
    using Nequeo.Data.Edm;
    using Nequeo.ComponentModel;
    
    
    #region GetInvoiceDetailsBetweenDateResult Data Entity Type
    /// <summary>
    /// The getinvoicedetailsbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetInvoiceDetailsBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetInvoiceDetailsBetweenDateResult : DataBase
    {
        
        private int _InvoiceID;
        
        private System.DateTime _InvoiceDate;
        
        private string _IncomeType;
        
        private int _CustomerID;
        
        private string _CompanyName;
        
        private System.Nullable<System.Decimal> _Totals;
        
        private System.Nullable<System.Double> _PreGST;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetInvoiceDetailsBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the invoiceid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the invoiceid property for the object.")]
        [DataMemberAttribute(Name = "InvoiceID")]
        [XmlElementAttribute(ElementName = "InvoiceID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int InvoiceID
        {
            get
            {
                return this._InvoiceID;
            }
            set
            {
                if ((this._InvoiceID != value))
                {
                    this._InvoiceID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the invoicedate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the invoicedate property for the object.")]
        [DataMemberAttribute(Name = "InvoiceDate")]
        [XmlElementAttribute(ElementName = "InvoiceDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime InvoiceDate
        {
            get
            {
                return this._InvoiceDate;
            }
            set
            {
                if ((this._InvoiceDate != value))
                {
                    this._InvoiceDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the incometype property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the incometype property for the object.")]
        [DataMemberAttribute(Name = "IncomeType")]
        [XmlElementAttribute(ElementName = "IncomeType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string IncomeType
        {
            get
            {
                return this._IncomeType;
            }
            set
            {
                if ((this._IncomeType != value))
                {
                    this._IncomeType = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the customerid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the customerid property for the object.")]
        [DataMemberAttribute(Name = "CustomerID")]
        [XmlElementAttribute(ElementName = "CustomerID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                if ((this._CustomerID != value))
                {
                    this._CustomerID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companyname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the companyname property for the object.")]
        [DataMemberAttribute(Name = "CompanyName")]
        [XmlElementAttribute(ElementName = "CompanyName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                if ((this._CompanyName != value))
                {
                    this._CompanyName = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totals property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totals property for the object.")]
        [DataMemberAttribute(Name = "Totals")]
        [XmlElementAttribute(ElementName = "Totals", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Totals
        {
            get
            {
                return this._Totals;
            }
            set
            {
                if ((this._Totals != value))
                {
                    this._Totals = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the pregst property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the pregst property for the object.")]
        [DataMemberAttribute(Name = "PreGST")]
        [XmlElementAttribute(ElementName = "PreGST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Double> PreGST
        {
            get
            {
                return this._PreGST;
            }
            set
            {
                if ((this._PreGST != value))
                {
                    this._PreGST = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getinvoicedetailsbetweendateresult data entity.
        /// </summary>
        /// <param name="invoiceID">Initial value of InvoiceID.</param>
        /// <param name="invoiceDate">Initial value of InvoiceDate.</param>
        /// <param name="incomeType">Initial value of IncomeType.</param>
        /// <param name="customerID">Initial value of CustomerID.</param>
        /// <param name="companyName">Initial value of CompanyName.</param>
        /// <returns>The Data.Extended.GetInvoiceDetailsBetweenDateResult entity.</returns>
        public static Data.Extended.GetInvoiceDetailsBetweenDateResult CreateGetInvoiceDetailsBetweenDateResult(int invoiceID, System.DateTime invoiceDate, string incomeType, int customerID, string companyName)
        {
            Data.Extended.GetInvoiceDetailsBetweenDateResult getInvoiceDetailsBetweenDateResult = new Data.Extended.GetInvoiceDetailsBetweenDateResult();
            getInvoiceDetailsBetweenDateResult.InvoiceID = invoiceID;
            getInvoiceDetailsBetweenDateResult.InvoiceDate = invoiceDate;
            getInvoiceDetailsBetweenDateResult.IncomeType = incomeType;
            getInvoiceDetailsBetweenDateResult.CustomerID = customerID;
            getInvoiceDetailsBetweenDateResult.CompanyName = companyName;
            return getInvoiceDetailsBetweenDateResult;
        }
    }
    #endregion
    
    #region GetInvoiceDetailsBetweenDateIncomeResult Data Entity Type
    /// <summary>
    /// The getinvoicedetailsbetweendateincomeresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetInvoiceDetailsBetweenDateIncomeResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetInvoiceDetailsBetweenDateIncomeResult : DataBase
    {
        
        private int _InvoiceID;
        
        private System.DateTime _InvoiceDate;
        
        private System.Nullable<System.DateTime> _PaymentDate;
        
        private string _IncomeType;
        
        private int _CustomerID;
        
        private string _CompanyName;
        
        private System.Nullable<System.Decimal> _Totals;
        
        private System.Nullable<System.Double> _PreGST;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetInvoiceDetailsBetweenDateIncomeResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the invoiceid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the invoiceid property for the object.")]
        [DataMemberAttribute(Name = "InvoiceID")]
        [XmlElementAttribute(ElementName = "InvoiceID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int InvoiceID
        {
            get
            {
                return this._InvoiceID;
            }
            set
            {
                if ((this._InvoiceID != value))
                {
                    this._InvoiceID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the invoicedate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the invoicedate property for the object.")]
        [DataMemberAttribute(Name = "InvoiceDate")]
        [XmlElementAttribute(ElementName = "InvoiceDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime InvoiceDate
        {
            get
            {
                return this._InvoiceDate;
            }
            set
            {
                if ((this._InvoiceDate != value))
                {
                    this._InvoiceDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the incometype property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the incometype property for the object.")]
        [DataMemberAttribute(Name = "IncomeType")]
        [XmlElementAttribute(ElementName = "IncomeType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string IncomeType
        {
            get
            {
                return this._IncomeType;
            }
            set
            {
                if ((this._IncomeType != value))
                {
                    this._IncomeType = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the customerid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the customerid property for the object.")]
        [DataMemberAttribute(Name = "CustomerID")]
        [XmlElementAttribute(ElementName = "CustomerID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                if ((this._CustomerID != value))
                {
                    this._CustomerID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companyname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the companyname property for the object.")]
        [DataMemberAttribute(Name = "CompanyName")]
        [XmlElementAttribute(ElementName = "CompanyName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                if ((this._CompanyName != value))
                {
                    this._CompanyName = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totals property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totals property for the object.")]
        [DataMemberAttribute(Name = "Totals")]
        [XmlElementAttribute(ElementName = "Totals", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Totals
        {
            get
            {
                return this._Totals;
            }
            set
            {
                if ((this._Totals != value))
                {
                    this._Totals = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the pregst property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the pregst property for the object.")]
        [DataMemberAttribute(Name = "PreGST")]
        [XmlElementAttribute(ElementName = "PreGST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Double> PreGST
        {
            get
            {
                return this._PreGST;
            }
            set
            {
                if ((this._PreGST != value))
                {
                    this._PreGST = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getinvoicedetailsbetweendateincomeresult data entity.
        /// </summary>
        /// <param name="invoiceID">Initial value of InvoiceID.</param>
        /// <param name="invoiceDate">Initial value of InvoiceDate.</param>
        /// <param name="incomeType">Initial value of IncomeType.</param>
        /// <param name="customerID">Initial value of CustomerID.</param>
        /// <param name="companyName">Initial value of CompanyName.</param>
        /// <returns>The Data.Extended.GetInvoiceDetailsBetweenDateIncomeResult entity.</returns>
        public static Data.Extended.GetInvoiceDetailsBetweenDateIncomeResult CreateGetInvoiceDetailsBetweenDateIncomeResult(int invoiceID, System.DateTime invoiceDate, string incomeType, int customerID, string companyName)
        {
            Data.Extended.GetInvoiceDetailsBetweenDateIncomeResult getInvoiceDetailsBetweenDateIncomeResult = new Data.Extended.GetInvoiceDetailsBetweenDateIncomeResult();
            getInvoiceDetailsBetweenDateIncomeResult.InvoiceID = invoiceID;
            getInvoiceDetailsBetweenDateIncomeResult.InvoiceDate = invoiceDate;
            getInvoiceDetailsBetweenDateIncomeResult.IncomeType = incomeType;
            getInvoiceDetailsBetweenDateIncomeResult.CustomerID = customerID;
            getInvoiceDetailsBetweenDateIncomeResult.CompanyName = companyName;
            return getInvoiceDetailsBetweenDateIncomeResult;
        }
    }
    #endregion
    
    #region GetInvoiceDetailsBetweenDateNotPaidResult Data Entity Type
    /// <summary>
    /// The getinvoicedetailsbetweendatenotpaidresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetInvoiceDetailsBetweenDateNotPaidResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetInvoiceDetailsBetweenDateNotPaidResult : DataBase
    {
        
        private int _InvoiceID;
        
        private System.DateTime _InvoiceDate;
        
        private string _IncomeType;
        
        private int _CustomerID;
        
        private string _CompanyName;
        
        private System.Nullable<System.Decimal> _Totals;
        
        private System.Nullable<System.Double> _PreGST;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetInvoiceDetailsBetweenDateNotPaidResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the invoiceid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the invoiceid property for the object.")]
        [DataMemberAttribute(Name = "InvoiceID")]
        [XmlElementAttribute(ElementName = "InvoiceID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int InvoiceID
        {
            get
            {
                return this._InvoiceID;
            }
            set
            {
                if ((this._InvoiceID != value))
                {
                    this._InvoiceID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the invoicedate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the invoicedate property for the object.")]
        [DataMemberAttribute(Name = "InvoiceDate")]
        [XmlElementAttribute(ElementName = "InvoiceDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime InvoiceDate
        {
            get
            {
                return this._InvoiceDate;
            }
            set
            {
                if ((this._InvoiceDate != value))
                {
                    this._InvoiceDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the incometype property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the incometype property for the object.")]
        [DataMemberAttribute(Name = "IncomeType")]
        [XmlElementAttribute(ElementName = "IncomeType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string IncomeType
        {
            get
            {
                return this._IncomeType;
            }
            set
            {
                if ((this._IncomeType != value))
                {
                    this._IncomeType = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the customerid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the customerid property for the object.")]
        [DataMemberAttribute(Name = "CustomerID")]
        [XmlElementAttribute(ElementName = "CustomerID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                if ((this._CustomerID != value))
                {
                    this._CustomerID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companyname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the companyname property for the object.")]
        [DataMemberAttribute(Name = "CompanyName")]
        [XmlElementAttribute(ElementName = "CompanyName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                if ((this._CompanyName != value))
                {
                    this._CompanyName = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totals property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totals property for the object.")]
        [DataMemberAttribute(Name = "Totals")]
        [XmlElementAttribute(ElementName = "Totals", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Totals
        {
            get
            {
                return this._Totals;
            }
            set
            {
                if ((this._Totals != value))
                {
                    this._Totals = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the pregst property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the pregst property for the object.")]
        [DataMemberAttribute(Name = "PreGST")]
        [XmlElementAttribute(ElementName = "PreGST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Double> PreGST
        {
            get
            {
                return this._PreGST;
            }
            set
            {
                if ((this._PreGST != value))
                {
                    this._PreGST = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getinvoicedetailsbetweendatenotpaidresult data entity.
        /// </summary>
        /// <param name="invoiceID">Initial value of InvoiceID.</param>
        /// <param name="invoiceDate">Initial value of InvoiceDate.</param>
        /// <param name="incomeType">Initial value of IncomeType.</param>
        /// <param name="customerID">Initial value of CustomerID.</param>
        /// <param name="companyName">Initial value of CompanyName.</param>
        /// <returns>The Data.Extended.GetInvoiceDetailsBetweenDateNotPaidResult entity.</returns>
        public static Data.Extended.GetInvoiceDetailsBetweenDateNotPaidResult CreateGetInvoiceDetailsBetweenDateNotPaidResult(int invoiceID, System.DateTime invoiceDate, string incomeType, int customerID, string companyName)
        {
            Data.Extended.GetInvoiceDetailsBetweenDateNotPaidResult getInvoiceDetailsBetweenDateNotPaidResult = new Data.Extended.GetInvoiceDetailsBetweenDateNotPaidResult();
            getInvoiceDetailsBetweenDateNotPaidResult.InvoiceID = invoiceID;
            getInvoiceDetailsBetweenDateNotPaidResult.InvoiceDate = invoiceDate;
            getInvoiceDetailsBetweenDateNotPaidResult.IncomeType = incomeType;
            getInvoiceDetailsBetweenDateNotPaidResult.CustomerID = customerID;
            getInvoiceDetailsBetweenDateNotPaidResult.CompanyName = companyName;
            return getInvoiceDetailsBetweenDateNotPaidResult;
        }
    }
    #endregion
    
    #region GetInvoiceDetailsBetweenDatePaymentResult Data Entity Type
    /// <summary>
    /// The getinvoicedetailsbetweendatepaymentresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetInvoiceDetailsBetweenDatePaymentResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetInvoiceDetailsBetweenDatePaymentResult : DataBase
    {
        
        private int _InvoiceID;
        
        private System.DateTime _InvoiceDate;
        
        private System.Nullable<System.DateTime> _PaymentDate;
        
        private string _IncomeType;
        
        private int _CustomerID;
        
        private string _CompanyName;
        
        private System.Nullable<System.Decimal> _Totals;
        
        private System.Nullable<System.Double> _PreGST;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetInvoiceDetailsBetweenDatePaymentResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the invoiceid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the invoiceid property for the object.")]
        [DataMemberAttribute(Name = "InvoiceID")]
        [XmlElementAttribute(ElementName = "InvoiceID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int InvoiceID
        {
            get
            {
                return this._InvoiceID;
            }
            set
            {
                if ((this._InvoiceID != value))
                {
                    this._InvoiceID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the invoicedate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the invoicedate property for the object.")]
        [DataMemberAttribute(Name = "InvoiceDate")]
        [XmlElementAttribute(ElementName = "InvoiceDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime InvoiceDate
        {
            get
            {
                return this._InvoiceDate;
            }
            set
            {
                if ((this._InvoiceDate != value))
                {
                    this._InvoiceDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the incometype property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the incometype property for the object.")]
        [DataMemberAttribute(Name = "IncomeType")]
        [XmlElementAttribute(ElementName = "IncomeType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string IncomeType
        {
            get
            {
                return this._IncomeType;
            }
            set
            {
                if ((this._IncomeType != value))
                {
                    this._IncomeType = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the customerid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the customerid property for the object.")]
        [DataMemberAttribute(Name = "CustomerID")]
        [XmlElementAttribute(ElementName = "CustomerID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                if ((this._CustomerID != value))
                {
                    this._CustomerID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companyname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the companyname property for the object.")]
        [DataMemberAttribute(Name = "CompanyName")]
        [XmlElementAttribute(ElementName = "CompanyName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                if ((this._CompanyName != value))
                {
                    this._CompanyName = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totals property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totals property for the object.")]
        [DataMemberAttribute(Name = "Totals")]
        [XmlElementAttribute(ElementName = "Totals", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Totals
        {
            get
            {
                return this._Totals;
            }
            set
            {
                if ((this._Totals != value))
                {
                    this._Totals = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the pregst property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the pregst property for the object.")]
        [DataMemberAttribute(Name = "PreGST")]
        [XmlElementAttribute(ElementName = "PreGST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Double> PreGST
        {
            get
            {
                return this._PreGST;
            }
            set
            {
                if ((this._PreGST != value))
                {
                    this._PreGST = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getinvoicedetailsbetweendatepaymentresult data entity.
        /// </summary>
        /// <param name="invoiceID">Initial value of InvoiceID.</param>
        /// <param name="invoiceDate">Initial value of InvoiceDate.</param>
        /// <param name="incomeType">Initial value of IncomeType.</param>
        /// <param name="customerID">Initial value of CustomerID.</param>
        /// <param name="companyName">Initial value of CompanyName.</param>
        /// <returns>The Data.Extended.GetInvoiceDetailsBetweenDatePaymentResult entity.</returns>
        public static Data.Extended.GetInvoiceDetailsBetweenDatePaymentResult CreateGetInvoiceDetailsBetweenDatePaymentResult(int invoiceID, System.DateTime invoiceDate, string incomeType, int customerID, string companyName)
        {
            Data.Extended.GetInvoiceDetailsBetweenDatePaymentResult getInvoiceDetailsBetweenDatePaymentResult = new Data.Extended.GetInvoiceDetailsBetweenDatePaymentResult();
            getInvoiceDetailsBetweenDatePaymentResult.InvoiceID = invoiceID;
            getInvoiceDetailsBetweenDatePaymentResult.InvoiceDate = invoiceDate;
            getInvoiceDetailsBetweenDatePaymentResult.IncomeType = incomeType;
            getInvoiceDetailsBetweenDatePaymentResult.CustomerID = customerID;
            getInvoiceDetailsBetweenDatePaymentResult.CompanyName = companyName;
            return getInvoiceDetailsBetweenDatePaymentResult;
        }
    }
    #endregion
    
    #region GetInvoiceDetailsSummaryBetweenDateResult Data Entity Type
    /// <summary>
    /// The getinvoicedetailssummarybetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetInvoiceDetailsSummaryBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetInvoiceDetailsSummaryBetweenDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _Totals;
        
        private System.Nullable<System.Double> _PreGST;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetInvoiceDetailsSummaryBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totals property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totals property for the object.")]
        [DataMemberAttribute(Name = "Totals")]
        [XmlElementAttribute(ElementName = "Totals", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Totals
        {
            get
            {
                return this._Totals;
            }
            set
            {
                if ((this._Totals != value))
                {
                    this._Totals = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the pregst property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the pregst property for the object.")]
        [DataMemberAttribute(Name = "PreGST")]
        [XmlElementAttribute(ElementName = "PreGST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Double> PreGST
        {
            get
            {
                return this._PreGST;
            }
            set
            {
                if ((this._PreGST != value))
                {
                    this._PreGST = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getinvoicedetailssummarybetweendateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetInvoiceDetailsSummaryBetweenDateResult entity.</returns>
        public static Data.Extended.GetInvoiceDetailsSummaryBetweenDateResult CreateGetInvoiceDetailsSummaryBetweenDateResult()
        {
            Data.Extended.GetInvoiceDetailsSummaryBetweenDateResult getInvoiceDetailsSummaryBetweenDateResult = new Data.Extended.GetInvoiceDetailsSummaryBetweenDateResult();
            return getInvoiceDetailsSummaryBetweenDateResult;
        }
    }
    #endregion
    
    #region GetInvoiceDetailsSummaryBetweenDateIncomeResult Data Entity Type
    /// <summary>
    /// The getinvoicedetailssummarybetweendateincomeresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetInvoiceDetailsSummaryBetweenDateIncomeResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetInvoiceDetailsSummaryBetweenDateIncomeResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _Totals;
        
        private System.Nullable<System.Double> _PreGST;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetInvoiceDetailsSummaryBetweenDateIncomeResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totals property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totals property for the object.")]
        [DataMemberAttribute(Name = "Totals")]
        [XmlElementAttribute(ElementName = "Totals", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Totals
        {
            get
            {
                return this._Totals;
            }
            set
            {
                if ((this._Totals != value))
                {
                    this._Totals = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the pregst property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the pregst property for the object.")]
        [DataMemberAttribute(Name = "PreGST")]
        [XmlElementAttribute(ElementName = "PreGST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Double> PreGST
        {
            get
            {
                return this._PreGST;
            }
            set
            {
                if ((this._PreGST != value))
                {
                    this._PreGST = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getinvoicedetailssummarybetweendateincomeresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetInvoiceDetailsSummaryBetweenDateIncomeResult entity.</returns>
        public static Data.Extended.GetInvoiceDetailsSummaryBetweenDateIncomeResult CreateGetInvoiceDetailsSummaryBetweenDateIncomeResult()
        {
            Data.Extended.GetInvoiceDetailsSummaryBetweenDateIncomeResult getInvoiceDetailsSummaryBetweenDateIncomeResult = new Data.Extended.GetInvoiceDetailsSummaryBetweenDateIncomeResult();
            return getInvoiceDetailsSummaryBetweenDateIncomeResult;
        }
    }
    #endregion
    
    #region GetInvoiceDetailsSummaryNotPaidBetweenDateResult Data Entity Type
    /// <summary>
    /// The getinvoicedetailssummarynotpaidbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetInvoiceDetailsSummaryNotPaidBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetInvoiceDetailsSummaryNotPaidBetweenDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _Totals;
        
        private System.Nullable<System.Double> _PreGST;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetInvoiceDetailsSummaryNotPaidBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totals property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totals property for the object.")]
        [DataMemberAttribute(Name = "Totals")]
        [XmlElementAttribute(ElementName = "Totals", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Totals
        {
            get
            {
                return this._Totals;
            }
            set
            {
                if ((this._Totals != value))
                {
                    this._Totals = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the pregst property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the pregst property for the object.")]
        [DataMemberAttribute(Name = "PreGST")]
        [XmlElementAttribute(ElementName = "PreGST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Double> PreGST
        {
            get
            {
                return this._PreGST;
            }
            set
            {
                if ((this._PreGST != value))
                {
                    this._PreGST = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getinvoicedetailssummarynotpaidbetweendateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetInvoiceDetailsSummaryNotPaidBetweenDateResult entity.</returns>
        public static Data.Extended.GetInvoiceDetailsSummaryNotPaidBetweenDateResult CreateGetInvoiceDetailsSummaryNotPaidBetweenDateResult()
        {
            Data.Extended.GetInvoiceDetailsSummaryNotPaidBetweenDateResult getInvoiceDetailsSummaryNotPaidBetweenDateResult = new Data.Extended.GetInvoiceDetailsSummaryNotPaidBetweenDateResult();
            return getInvoiceDetailsSummaryNotPaidBetweenDateResult;
        }
    }
    #endregion
    
    #region GetInvoiceDetailsSummaryPaidBetweenDateResult Data Entity Type
    /// <summary>
    /// The getinvoicedetailssummarypaidbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetInvoiceDetailsSummaryPaidBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetInvoiceDetailsSummaryPaidBetweenDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _Totals;
        
        private System.Nullable<System.Double> _PreGST;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetInvoiceDetailsSummaryPaidBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totals property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totals property for the object.")]
        [DataMemberAttribute(Name = "Totals")]
        [XmlElementAttribute(ElementName = "Totals", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Totals
        {
            get
            {
                return this._Totals;
            }
            set
            {
                if ((this._Totals != value))
                {
                    this._Totals = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the pregst property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the pregst property for the object.")]
        [DataMemberAttribute(Name = "PreGST")]
        [XmlElementAttribute(ElementName = "PreGST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Double> PreGST
        {
            get
            {
                return this._PreGST;
            }
            set
            {
                if ((this._PreGST != value))
                {
                    this._PreGST = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getinvoicedetailssummarypaidbetweendateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetInvoiceDetailsSummaryPaidBetweenDateResult entity.</returns>
        public static Data.Extended.GetInvoiceDetailsSummaryPaidBetweenDateResult CreateGetInvoiceDetailsSummaryPaidBetweenDateResult()
        {
            Data.Extended.GetInvoiceDetailsSummaryPaidBetweenDateResult getInvoiceDetailsSummaryPaidBetweenDateResult = new Data.Extended.GetInvoiceDetailsSummaryPaidBetweenDateResult();
            return getInvoiceDetailsSummaryPaidBetweenDateResult;
        }
    }
    #endregion
    
    #region GetSelectedInvoiceDetailsResult Data Entity Type
    /// <summary>
    /// The getselectedinvoicedetailsresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetSelectedInvoiceDetailsResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetSelectedInvoiceDetailsResult : DataBase
    {
        
        private int _CompanyID;
        
        private string _CompanyName;
        
        private string _Firstname;
        
        private string _Surname;
        
        private string _Address;
        
        private string _Suburb;
        
        private string _State;
        
        private string _Postcode;
        
        private string _PhoneNumber;
        
        private string _FaxNumber;
        
        private string _MobileNumber;
        
        private string _EmailAddress;
        
        private string _WebSite;
        
        private string _ABN;
        
        private string _TFN;
        
        private string _PostalAddress;
        
        private string _PostalSuburb;
        
        private string _PostalState;
        
        private string _PostalPostcode;
        
        private string _Comments;
        
        private int _AccountID;
        
        private string _Firstname1;
        
        private string _Surname1;
        
        private string _Bank;
        
        private string _AccountName;
        
        private string _BSB;
        
        private string _AccountNumber;
        
        private string _AccountType;
        
        private string _Branch;
        
        private string _PhoneNumber1;
        
        private string _FaxNumber1;
        
        private string _EmailAddress1;
        
        private string _WebSite1;
        
        private string _Comments1;
        
        private System.Nullable<System.Decimal> _Balance;
        
        private int _InvoiceID;
        
        private int _CustomerID;
        
        private System.DateTime _InvoiceDate;
        
        private System.Nullable<System.DateTime> _PaymentDate;
        
        private string _OrderID;
        
        private string _Developer;
        
        private string _GSTIncluded;
        
        private string _Comments2;
        
        private string _IncomeType;
        
        private int _InvoiceDetailsID;
        
        private int _InvoiceID1;
        
        private double _Hours;
        
        private string _Description;
        
        private decimal _Rate;
        
        private decimal _Total;
        
        private decimal _GST;
        
        private string _Comments3;
        
        private int _CustomerID1;
        
        private string _CompanyName1;
        
        private string _Firstname2;
        
        private string _Surname2;
        
        private string _Address1;
        
        private string _Suburb1;
        
        private string _State1;
        
        private string _PostCode1;
        
        private string _PhoneNumber2;
        
        private string _FaxNumber2;
        
        private string _MobileNumber1;
        
        private string _EmailAddress2;
        
        private string _WebSite2;
        
        private string _ABN1;
        
        private string _PostalAddress1;
        
        private string _PostalSuburb1;
        
        private string _PostalState1;
        
        private string _PostalPostCode1;
        
        private string _Comments4;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetSelectedInvoiceDetailsResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the companyid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the companyid property for the object.")]
        [DataMemberAttribute(Name = "CompanyID")]
        [XmlElementAttribute(ElementName = "CompanyID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int CompanyID
        {
            get
            {
                return this._CompanyID;
            }
            set
            {
                if ((this._CompanyID != value))
                {
                    this._CompanyID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companyname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the companyname property for the object.")]
        [DataMemberAttribute(Name = "CompanyName")]
        [XmlElementAttribute(ElementName = "CompanyName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                if ((this._CompanyName != value))
                {
                    this._CompanyName = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the firstname property for the object.")]
        [DataMemberAttribute(Name = "Firstname")]
        [XmlElementAttribute(ElementName = "Firstname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Firstname
        {
            get
            {
                return this._Firstname;
            }
            set
            {
                if ((this._Firstname != value))
                {
                    this._Firstname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the surname property for the object.")]
        [DataMemberAttribute(Name = "Surname")]
        [XmlElementAttribute(ElementName = "Surname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if ((this._Surname != value))
                {
                    this._Surname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the address property for the object.")]
        [DataMemberAttribute(Name = "Address")]
        [XmlElementAttribute(ElementName = "Address", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this._Address = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suburb property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the suburb property for the object.")]
        [DataMemberAttribute(Name = "Suburb")]
        [XmlElementAttribute(ElementName = "Suburb", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Suburb
        {
            get
            {
                return this._Suburb;
            }
            set
            {
                if ((this._Suburb != value))
                {
                    this._Suburb = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the state property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the state property for the object.")]
        [DataMemberAttribute(Name = "State")]
        [XmlElementAttribute(ElementName = "State", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                if ((this._State != value))
                {
                    this._State = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postcode property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postcode property for the object.")]
        [DataMemberAttribute(Name = "Postcode")]
        [XmlElementAttribute(ElementName = "Postcode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Postcode
        {
            get
            {
                return this._Postcode;
            }
            set
            {
                if ((this._Postcode != value))
                {
                    this._Postcode = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the phonenumber property for the object.")]
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this._PhoneNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the faxnumber property for the object.")]
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this._FaxNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the mobilenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the mobilenumber property for the object.")]
        [DataMemberAttribute(Name = "MobileNumber")]
        [XmlElementAttribute(ElementName = "MobileNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this._MobileNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the emailaddress property for the object.")]
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this._EmailAddress = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the website property for the object.")]
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this._WebSite = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the abn property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the abn property for the object.")]
        [DataMemberAttribute(Name = "ABN")]
        [XmlElementAttribute(ElementName = "ABN", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string ABN
        {
            get
            {
                return this._ABN;
            }
            set
            {
                if ((this._ABN != value))
                {
                    this._ABN = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tfn property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the tfn property for the object.")]
        [DataMemberAttribute(Name = "TFN")]
        [XmlElementAttribute(ElementName = "TFN", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string TFN
        {
            get
            {
                return this._TFN;
            }
            set
            {
                if ((this._TFN != value))
                {
                    this._TFN = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postaladdress property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postaladdress property for the object.")]
        [DataMemberAttribute(Name = "PostalAddress")]
        [XmlElementAttribute(ElementName = "PostalAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PostalAddress
        {
            get
            {
                return this._PostalAddress;
            }
            set
            {
                if ((this._PostalAddress != value))
                {
                    this._PostalAddress = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalsuburb property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postalsuburb property for the object.")]
        [DataMemberAttribute(Name = "PostalSuburb")]
        [XmlElementAttribute(ElementName = "PostalSuburb", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PostalSuburb
        {
            get
            {
                return this._PostalSuburb;
            }
            set
            {
                if ((this._PostalSuburb != value))
                {
                    this._PostalSuburb = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalstate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postalstate property for the object.")]
        [DataMemberAttribute(Name = "PostalState")]
        [XmlElementAttribute(ElementName = "PostalState", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PostalState
        {
            get
            {
                return this._PostalState;
            }
            set
            {
                if ((this._PostalState != value))
                {
                    this._PostalState = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalpostcode property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postalpostcode property for the object.")]
        [DataMemberAttribute(Name = "PostalPostcode")]
        [XmlElementAttribute(ElementName = "PostalPostcode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PostalPostcode
        {
            get
            {
                return this._PostalPostcode;
            }
            set
            {
                if ((this._PostalPostcode != value))
                {
                    this._PostalPostcode = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountid property for the object.")]
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this._AccountID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the firstname1 property for the object.")]
        [DataMemberAttribute(Name = "Firstname1")]
        [XmlElementAttribute(ElementName = "Firstname1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Firstname1
        {
            get
            {
                return this._Firstname1;
            }
            set
            {
                if ((this._Firstname1 != value))
                {
                    this._Firstname1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the surname1 property for the object.")]
        [DataMemberAttribute(Name = "Surname1")]
        [XmlElementAttribute(ElementName = "Surname1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Surname1
        {
            get
            {
                return this._Surname1;
            }
            set
            {
                if ((this._Surname1 != value))
                {
                    this._Surname1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bank property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bank property for the object.")]
        [DataMemberAttribute(Name = "Bank")]
        [XmlElementAttribute(ElementName = "Bank", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string Bank
        {
            get
            {
                return this._Bank;
            }
            set
            {
                if ((this._Bank != value))
                {
                    this._Bank = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountname property for the object.")]
        [DataMemberAttribute(Name = "AccountName")]
        [XmlElementAttribute(ElementName = "AccountName", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string AccountName
        {
            get
            {
                return this._AccountName;
            }
            set
            {
                if ((this._AccountName != value))
                {
                    this._AccountName = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bsb property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bsb property for the object.")]
        [DataMemberAttribute(Name = "BSB")]
        [XmlElementAttribute(ElementName = "BSB", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string BSB
        {
            get
            {
                return this._BSB;
            }
            set
            {
                if ((this._BSB != value))
                {
                    this._BSB = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountnumber property for the object.")]
        [DataMemberAttribute(Name = "AccountNumber")]
        [XmlElementAttribute(ElementName = "AccountNumber", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this._AccountNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accounttype property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accounttype property for the object.")]
        [DataMemberAttribute(Name = "AccountType")]
        [XmlElementAttribute(ElementName = "AccountType", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string AccountType
        {
            get
            {
                return this._AccountType;
            }
            set
            {
                if ((this._AccountType != value))
                {
                    this._AccountType = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the branch property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the branch property for the object.")]
        [DataMemberAttribute(Name = "Branch")]
        [XmlElementAttribute(ElementName = "Branch", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Branch
        {
            get
            {
                return this._Branch;
            }
            set
            {
                if ((this._Branch != value))
                {
                    this._Branch = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the phonenumber1 property for the object.")]
        [DataMemberAttribute(Name = "PhoneNumber1")]
        [XmlElementAttribute(ElementName = "PhoneNumber1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PhoneNumber1
        {
            get
            {
                return this._PhoneNumber1;
            }
            set
            {
                if ((this._PhoneNumber1 != value))
                {
                    this._PhoneNumber1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the faxnumber1 property for the object.")]
        [DataMemberAttribute(Name = "FaxNumber1")]
        [XmlElementAttribute(ElementName = "FaxNumber1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string FaxNumber1
        {
            get
            {
                return this._FaxNumber1;
            }
            set
            {
                if ((this._FaxNumber1 != value))
                {
                    this._FaxNumber1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the emailaddress1 property for the object.")]
        [DataMemberAttribute(Name = "EmailAddress1")]
        [XmlElementAttribute(ElementName = "EmailAddress1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string EmailAddress1
        {
            get
            {
                return this._EmailAddress1;
            }
            set
            {
                if ((this._EmailAddress1 != value))
                {
                    this._EmailAddress1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the website1 property for the object.")]
        [DataMemberAttribute(Name = "WebSite1")]
        [XmlElementAttribute(ElementName = "WebSite1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string WebSite1
        {
            get
            {
                return this._WebSite1;
            }
            set
            {
                if ((this._WebSite1 != value))
                {
                    this._WebSite1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments1 property for the object.")]
        [DataMemberAttribute(Name = "Comments1")]
        [XmlElementAttribute(ElementName = "Comments1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments1
        {
            get
            {
                return this._Comments1;
            }
            set
            {
                if ((this._Comments1 != value))
                {
                    this._Comments1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the balance property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the balance property for the object.")]
        [DataMemberAttribute(Name = "Balance")]
        [XmlElementAttribute(ElementName = "Balance", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Balance
        {
            get
            {
                return this._Balance;
            }
            set
            {
                if ((this._Balance != value))
                {
                    this._Balance = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the invoiceid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the invoiceid property for the object.")]
        [DataMemberAttribute(Name = "InvoiceID")]
        [XmlElementAttribute(ElementName = "InvoiceID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int InvoiceID
        {
            get
            {
                return this._InvoiceID;
            }
            set
            {
                if ((this._InvoiceID != value))
                {
                    this._InvoiceID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the customerid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the customerid property for the object.")]
        [DataMemberAttribute(Name = "CustomerID")]
        [XmlElementAttribute(ElementName = "CustomerID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int CustomerID
        {
            get
            {
                return this._CustomerID;
            }
            set
            {
                if ((this._CustomerID != value))
                {
                    this._CustomerID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the invoicedate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the invoicedate property for the object.")]
        [DataMemberAttribute(Name = "InvoiceDate")]
        [XmlElementAttribute(ElementName = "InvoiceDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime InvoiceDate
        {
            get
            {
                return this._InvoiceDate;
            }
            set
            {
                if ((this._InvoiceDate != value))
                {
                    this._InvoiceDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.DateTime> PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the orderid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the orderid property for the object.")]
        [DataMemberAttribute(Name = "OrderID")]
        [XmlElementAttribute(ElementName = "OrderID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string OrderID
        {
            get
            {
                return this._OrderID;
            }
            set
            {
                if ((this._OrderID != value))
                {
                    this._OrderID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the developer property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the developer property for the object.")]
        [DataMemberAttribute(Name = "Developer")]
        [XmlElementAttribute(ElementName = "Developer", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Developer
        {
            get
            {
                return this._Developer;
            }
            set
            {
                if ((this._Developer != value))
                {
                    this._Developer = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gstincluded property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the gstincluded property for the object.")]
        [DataMemberAttribute(Name = "GSTIncluded")]
        [XmlElementAttribute(ElementName = "GSTIncluded", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string GSTIncluded
        {
            get
            {
                return this._GSTIncluded;
            }
            set
            {
                if ((this._GSTIncluded != value))
                {
                    this._GSTIncluded = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments2 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments2 property for the object.")]
        [DataMemberAttribute(Name = "Comments2")]
        [XmlElementAttribute(ElementName = "Comments2", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments2
        {
            get
            {
                return this._Comments2;
            }
            set
            {
                if ((this._Comments2 != value))
                {
                    this._Comments2 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the incometype property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the incometype property for the object.")]
        [DataMemberAttribute(Name = "IncomeType")]
        [XmlElementAttribute(ElementName = "IncomeType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string IncomeType
        {
            get
            {
                return this._IncomeType;
            }
            set
            {
                if ((this._IncomeType != value))
                {
                    this._IncomeType = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the invoicedetailsid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the invoicedetailsid property for the object.")]
        [DataMemberAttribute(Name = "InvoiceDetailsID")]
        [XmlElementAttribute(ElementName = "InvoiceDetailsID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int InvoiceDetailsID
        {
            get
            {
                return this._InvoiceDetailsID;
            }
            set
            {
                if ((this._InvoiceDetailsID != value))
                {
                    this._InvoiceDetailsID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the invoiceid1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the invoiceid1 property for the object.")]
        [DataMemberAttribute(Name = "InvoiceID1")]
        [XmlElementAttribute(ElementName = "InvoiceID1", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int InvoiceID1
        {
            get
            {
                return this._InvoiceID1;
            }
            set
            {
                if ((this._InvoiceID1 != value))
                {
                    this._InvoiceID1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the hours property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the hours property for the object.")]
        [DataMemberAttribute(Name = "Hours")]
        [XmlElementAttribute(ElementName = "Hours", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double Hours
        {
            get
            {
                return this._Hours;
            }
            set
            {
                if ((this._Hours != value))
                {
                    this._Hours = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the rate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the rate property for the object.")]
        [DataMemberAttribute(Name = "Rate")]
        [XmlElementAttribute(ElementName = "Rate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Rate
        {
            get
            {
                return this._Rate;
            }
            set
            {
                if ((this._Rate != value))
                {
                    this._Rate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the total property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the total property for the object.")]
        [DataMemberAttribute(Name = "Total")]
        [XmlElementAttribute(ElementName = "Total", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                if ((this._Total != value))
                {
                    this._Total = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the gst property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the gst property for the object.")]
        [DataMemberAttribute(Name = "GST")]
        [XmlElementAttribute(ElementName = "GST", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal GST
        {
            get
            {
                return this._GST;
            }
            set
            {
                if ((this._GST != value))
                {
                    this._GST = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments3 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments3 property for the object.")]
        [DataMemberAttribute(Name = "Comments3")]
        [XmlElementAttribute(ElementName = "Comments3", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments3
        {
            get
            {
                return this._Comments3;
            }
            set
            {
                if ((this._Comments3 != value))
                {
                    this._Comments3 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the customerid1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the customerid1 property for the object.")]
        [DataMemberAttribute(Name = "CustomerID1")]
        [XmlElementAttribute(ElementName = "CustomerID1", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int CustomerID1
        {
            get
            {
                return this._CustomerID1;
            }
            set
            {
                if ((this._CustomerID1 != value))
                {
                    this._CustomerID1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companyname1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the companyname1 property for the object.")]
        [DataMemberAttribute(Name = "CompanyName1")]
        [XmlElementAttribute(ElementName = "CompanyName1", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string CompanyName1
        {
            get
            {
                return this._CompanyName1;
            }
            set
            {
                if ((this._CompanyName1 != value))
                {
                    this._CompanyName1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname2 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the firstname2 property for the object.")]
        [DataMemberAttribute(Name = "Firstname2")]
        [XmlElementAttribute(ElementName = "Firstname2", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Firstname2
        {
            get
            {
                return this._Firstname2;
            }
            set
            {
                if ((this._Firstname2 != value))
                {
                    this._Firstname2 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname2 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the surname2 property for the object.")]
        [DataMemberAttribute(Name = "Surname2")]
        [XmlElementAttribute(ElementName = "Surname2", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Surname2
        {
            get
            {
                return this._Surname2;
            }
            set
            {
                if ((this._Surname2 != value))
                {
                    this._Surname2 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the address1 property for the object.")]
        [DataMemberAttribute(Name = "Address1")]
        [XmlElementAttribute(ElementName = "Address1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Address1
        {
            get
            {
                return this._Address1;
            }
            set
            {
                if ((this._Address1 != value))
                {
                    this._Address1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suburb1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the suburb1 property for the object.")]
        [DataMemberAttribute(Name = "Suburb1")]
        [XmlElementAttribute(ElementName = "Suburb1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Suburb1
        {
            get
            {
                return this._Suburb1;
            }
            set
            {
                if ((this._Suburb1 != value))
                {
                    this._Suburb1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the state1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the state1 property for the object.")]
        [DataMemberAttribute(Name = "State1")]
        [XmlElementAttribute(ElementName = "State1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string State1
        {
            get
            {
                return this._State1;
            }
            set
            {
                if ((this._State1 != value))
                {
                    this._State1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postcode1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postcode1 property for the object.")]
        [DataMemberAttribute(Name = "PostCode1")]
        [XmlElementAttribute(ElementName = "PostCode1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PostCode1
        {
            get
            {
                return this._PostCode1;
            }
            set
            {
                if ((this._PostCode1 != value))
                {
                    this._PostCode1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber2 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the phonenumber2 property for the object.")]
        [DataMemberAttribute(Name = "PhoneNumber2")]
        [XmlElementAttribute(ElementName = "PhoneNumber2", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PhoneNumber2
        {
            get
            {
                return this._PhoneNumber2;
            }
            set
            {
                if ((this._PhoneNumber2 != value))
                {
                    this._PhoneNumber2 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber2 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the faxnumber2 property for the object.")]
        [DataMemberAttribute(Name = "FaxNumber2")]
        [XmlElementAttribute(ElementName = "FaxNumber2", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string FaxNumber2
        {
            get
            {
                return this._FaxNumber2;
            }
            set
            {
                if ((this._FaxNumber2 != value))
                {
                    this._FaxNumber2 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the mobilenumber1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the mobilenumber1 property for the object.")]
        [DataMemberAttribute(Name = "MobileNumber1")]
        [XmlElementAttribute(ElementName = "MobileNumber1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string MobileNumber1
        {
            get
            {
                return this._MobileNumber1;
            }
            set
            {
                if ((this._MobileNumber1 != value))
                {
                    this._MobileNumber1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress2 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the emailaddress2 property for the object.")]
        [DataMemberAttribute(Name = "EmailAddress2")]
        [XmlElementAttribute(ElementName = "EmailAddress2", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string EmailAddress2
        {
            get
            {
                return this._EmailAddress2;
            }
            set
            {
                if ((this._EmailAddress2 != value))
                {
                    this._EmailAddress2 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website2 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the website2 property for the object.")]
        [DataMemberAttribute(Name = "WebSite2")]
        [XmlElementAttribute(ElementName = "WebSite2", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string WebSite2
        {
            get
            {
                return this._WebSite2;
            }
            set
            {
                if ((this._WebSite2 != value))
                {
                    this._WebSite2 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the abn1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the abn1 property for the object.")]
        [DataMemberAttribute(Name = "ABN1")]
        [XmlElementAttribute(ElementName = "ABN1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string ABN1
        {
            get
            {
                return this._ABN1;
            }
            set
            {
                if ((this._ABN1 != value))
                {
                    this._ABN1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postaladdress1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postaladdress1 property for the object.")]
        [DataMemberAttribute(Name = "PostalAddress1")]
        [XmlElementAttribute(ElementName = "PostalAddress1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PostalAddress1
        {
            get
            {
                return this._PostalAddress1;
            }
            set
            {
                if ((this._PostalAddress1 != value))
                {
                    this._PostalAddress1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalsuburb1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postalsuburb1 property for the object.")]
        [DataMemberAttribute(Name = "PostalSuburb1")]
        [XmlElementAttribute(ElementName = "PostalSuburb1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PostalSuburb1
        {
            get
            {
                return this._PostalSuburb1;
            }
            set
            {
                if ((this._PostalSuburb1 != value))
                {
                    this._PostalSuburb1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalstate1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postalstate1 property for the object.")]
        [DataMemberAttribute(Name = "PostalState1")]
        [XmlElementAttribute(ElementName = "PostalState1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PostalState1
        {
            get
            {
                return this._PostalState1;
            }
            set
            {
                if ((this._PostalState1 != value))
                {
                    this._PostalState1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalpostcode1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postalpostcode1 property for the object.")]
        [DataMemberAttribute(Name = "PostalPostCode1")]
        [XmlElementAttribute(ElementName = "PostalPostCode1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PostalPostCode1
        {
            get
            {
                return this._PostalPostCode1;
            }
            set
            {
                if ((this._PostalPostCode1 != value))
                {
                    this._PostalPostCode1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments4 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments4 property for the object.")]
        [DataMemberAttribute(Name = "Comments4")]
        [XmlElementAttribute(ElementName = "Comments4", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments4
        {
            get
            {
                return this._Comments4;
            }
            set
            {
                if ((this._Comments4 != value))
                {
                    this._Comments4 = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getselectedinvoicedetailsresult data entity.
        /// </summary>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="companyName">Initial value of CompanyName.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="bank">Initial value of Bank.</param>
        /// <param name="bSB">Initial value of BSB.</param>
        /// <param name="accountNumber">Initial value of AccountNumber.</param>
        /// <param name="invoiceID">Initial value of InvoiceID.</param>
        /// <param name="customerID">Initial value of CustomerID.</param>
        /// <param name="invoiceDate">Initial value of InvoiceDate.</param>
        /// <param name="orderID">Initial value of OrderID.</param>
        /// <param name="incomeType">Initial value of IncomeType.</param>
        /// <param name="invoiceDetailsID">Initial value of InvoiceDetailsID.</param>
        /// <param name="invoiceID1">Initial value of InvoiceID1.</param>
        /// <param name="hours">Initial value of Hours.</param>
        /// <param name="description">Initial value of Description.</param>
        /// <param name="rate">Initial value of Rate.</param>
        /// <param name="total">Initial value of Total.</param>
        /// <param name="gST">Initial value of GST.</param>
        /// <param name="customerID1">Initial value of CustomerID1.</param>
        /// <param name="companyName1">Initial value of CompanyName1.</param>
        /// <returns>The Data.Extended.GetSelectedInvoiceDetailsResult entity.</returns>
        public static Data.Extended.GetSelectedInvoiceDetailsResult CreateGetSelectedInvoiceDetailsResult(
                    int companyID, 
                    string companyName, 
                    int accountID, 
                    string bank, 
                    string bSB, 
                    string accountNumber, 
                    int invoiceID, 
                    int customerID, 
                    System.DateTime invoiceDate, 
                    string orderID, 
                    string incomeType, 
                    int invoiceDetailsID, 
                    int invoiceID1, 
                    double hours, 
                    string description, 
                    decimal rate, 
                    decimal total, 
                    decimal gST, 
                    int customerID1, 
                    string companyName1)
        {
            Data.Extended.GetSelectedInvoiceDetailsResult getSelectedInvoiceDetailsResult = new Data.Extended.GetSelectedInvoiceDetailsResult();
            getSelectedInvoiceDetailsResult.CompanyID = companyID;
            getSelectedInvoiceDetailsResult.CompanyName = companyName;
            getSelectedInvoiceDetailsResult.AccountID = accountID;
            getSelectedInvoiceDetailsResult.Bank = bank;
            getSelectedInvoiceDetailsResult.BSB = bSB;
            getSelectedInvoiceDetailsResult.AccountNumber = accountNumber;
            getSelectedInvoiceDetailsResult.InvoiceID = invoiceID;
            getSelectedInvoiceDetailsResult.CustomerID = customerID;
            getSelectedInvoiceDetailsResult.InvoiceDate = invoiceDate;
            getSelectedInvoiceDetailsResult.OrderID = orderID;
            getSelectedInvoiceDetailsResult.IncomeType = incomeType;
            getSelectedInvoiceDetailsResult.InvoiceDetailsID = invoiceDetailsID;
            getSelectedInvoiceDetailsResult.InvoiceID1 = invoiceID1;
            getSelectedInvoiceDetailsResult.Hours = hours;
            getSelectedInvoiceDetailsResult.Description = description;
            getSelectedInvoiceDetailsResult.Rate = rate;
            getSelectedInvoiceDetailsResult.Total = total;
            getSelectedInvoiceDetailsResult.GST = gST;
            getSelectedInvoiceDetailsResult.CustomerID1 = customerID1;
            getSelectedInvoiceDetailsResult.CompanyName1 = companyName1;
            return getSelectedInvoiceDetailsResult;
        }
    }
    #endregion
}

#pragma warning restore 169
