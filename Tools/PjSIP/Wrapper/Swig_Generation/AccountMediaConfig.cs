//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class AccountMediaConfig : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal AccountMediaConfig(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(AccountMediaConfig obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~AccountMediaConfig() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          pjsua2PINVOKE.delete_AccountMediaConfig(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_TransportConfig transportConfig {
    set {
      pjsua2PINVOKE.AccountMediaConfig_transportConfig_set(swigCPtr, SWIGTYPE_p_TransportConfig.getCPtr(value));
      if (pjsua2PINVOKE.SWIGPendingException.Pending) throw pjsua2PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_TransportConfig ret = new SWIGTYPE_p_TransportConfig(pjsua2PINVOKE.AccountMediaConfig_transportConfig_get(swigCPtr), true);
      if (pjsua2PINVOKE.SWIGPendingException.Pending) throw pjsua2PINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool lockCodecEnabled {
    set {
      pjsua2PINVOKE.AccountMediaConfig_lockCodecEnabled_set(swigCPtr, value);
    } 
    get {
      bool ret = pjsua2PINVOKE.AccountMediaConfig_lockCodecEnabled_get(swigCPtr);
      return ret;
    } 
  }

  public bool streamKaEnabled {
    set {
      pjsua2PINVOKE.AccountMediaConfig_streamKaEnabled_set(swigCPtr, value);
    } 
    get {
      bool ret = pjsua2PINVOKE.AccountMediaConfig_streamKaEnabled_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_pjmedia_srtp_use srtpUse {
    set {
      pjsua2PINVOKE.AccountMediaConfig_srtpUse_set(swigCPtr, SWIGTYPE_p_pjmedia_srtp_use.getCPtr(value));
      if (pjsua2PINVOKE.SWIGPendingException.Pending) throw pjsua2PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_pjmedia_srtp_use ret = new SWIGTYPE_p_pjmedia_srtp_use(pjsua2PINVOKE.AccountMediaConfig_srtpUse_get(swigCPtr), true);
      if (pjsua2PINVOKE.SWIGPendingException.Pending) throw pjsua2PINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int srtpSecureSignaling {
    set {
      pjsua2PINVOKE.AccountMediaConfig_srtpSecureSignaling_set(swigCPtr, value);
    } 
    get {
      int ret = pjsua2PINVOKE.AccountMediaConfig_srtpSecureSignaling_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_pjsua_ipv6_use ipv6Use {
    set {
      pjsua2PINVOKE.AccountMediaConfig_ipv6Use_set(swigCPtr, SWIGTYPE_p_pjsua_ipv6_use.getCPtr(value));
      if (pjsua2PINVOKE.SWIGPendingException.Pending) throw pjsua2PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_pjsua_ipv6_use ret = new SWIGTYPE_p_pjsua_ipv6_use(pjsua2PINVOKE.AccountMediaConfig_ipv6Use_get(swigCPtr), true);
      if (pjsua2PINVOKE.SWIGPendingException.Pending) throw pjsua2PINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public virtual void readObject(SWIGTYPE_p_ContainerNode node) {
    pjsua2PINVOKE.AccountMediaConfig_readObject(swigCPtr, SWIGTYPE_p_ContainerNode.getCPtr(node));
    if (pjsua2PINVOKE.SWIGPendingException.Pending) throw pjsua2PINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void writeObject(SWIGTYPE_p_ContainerNode node) {
    pjsua2PINVOKE.AccountMediaConfig_writeObject(swigCPtr, SWIGTYPE_p_ContainerNode.getCPtr(node));
    if (pjsua2PINVOKE.SWIGPendingException.Pending) throw pjsua2PINVOKE.SWIGPendingException.Retrieve();
  }

  public AccountMediaConfig() : this(pjsua2PINVOKE.new_AccountMediaConfig(), true) {
  }

}
