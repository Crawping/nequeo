<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>Untitled Page</title>
    <style type="text/css">
.Opera form,.IE form{margin:0;}input,select,textarea{font-size:1em;}body,input,select,textarea{font-family:"Segoe UI","Microsoft Sans Serif",Arial,Geneva,Sans-Serif;color:#253340;}#header{background-color:#F0F1F4;height:100%;height:39px;}#header_wrap{background-color:#F0F1F4;margin:0 auto;width:985px;}#header_wrap{padding:0 15px 0 15px;}.row{position:relative;}.clearfix,.row{display:block;}p#logo{float:left;font:27px 'Segoe UI Light',Segoe UI,Tahoma Light,Arial Light,Helvetica,sans-serif;font-weight:lighter;margin-bottom:1px;position:relative;margin-right:10px;}p,dl,hr,h1,h2,h3,h4,h5,h6,ol,ul,pre,table,address,fieldset{margin-bottom:20px;}p{font:1em/1.462em 'Segoe UI',Tahoma,Arial,Helvetica,sans-serif;color:#253340;}p{margin-top:1em;margin-bottom:1em;}p#logo a{color:#6a747e;text-decoration:none;}a,a:link,a:visited{text-decoration:none;color:#2E8BCC;}a{color:#2e8bcc;text-decoration:none;}.semi{font:27px 'Segoe UI Semibold','Segoe-Semibold',Segoe UI,Tahoma,Arial,Helvetica,sans-serif;}span#tagline{color:#6a747e;font-size:0.50em;padding-left:16px;overflow:hidden;}ul#nav{float:right;position:relative;top:10px;padding-right:267px;}ul{list-style:square;}ol,ul{list-style:none;}ul{margin-left:0em;padding-left:2em;list-style-type:square;list-style-image:url('http://i2.codeplex.com/Images/v19252/bullet_square.gif');}ul#nav li{border-right:1px #b7c3ce solid;float:left;height:9px;font-size:13px;line-height:19px;list-style-type:none;padding-bottom:10px;padding-left:10px;padding-right:10px;}li{margin-left:0;margin-bottom:.1em;margin-top:.1em;}ul#nav li a{color:#6a747e;text-decoration:none;}.IE7 .ZoomFix{zoom:100%;}ul#nav li.last{border:none;}ul li.last{border:none !important;}.rss_site_icon{-moz-transition:opacity .25s ease-in-out;-webkit-transition:opacity .25s ease-in-out;background:url('http://i2.codeplex.com/Images/v19252/sprite.png') no-repeat 0 -120px;display:inline-block;height:13px;width:13px;margin-top:4px;margin-right:0px;}#searchsite{border-bottom:3px #7e8998 solid;border-left:none;border-right:none;border-top:none;color:#7a848e;float:right;height:34px;left:735px;padding-left:10px;position:absolute;width:240px;width:208px;}#search_mag{border-bottom:3px #7e8998 solid;border-left:none;border-right:none;border-top:none;color:#7a848e;background-color:white;float:right;height:36px;left:952px;padding-left:10px;position:absolute;width:22px;z-index:20;}a.magnify{background:url('http://i2.codeplex.com/Images/v19252/sprite.png') no-repeat 0 -56px;display:block;height:15px;position:relative;text-indent:-9999px;top:12px;width:15px;float:right;right:10px;}#wrap{padding:0 15px 0 15px;}#wrap{margin:0 auto;width:985px;height:100%;}#sub_heading{height:100%;}#project_title_row{display:table;width:100%;}#project_logo{display:table-cell;padding:15px 0px 15px 0px;}h1{font-weight:normal;margin:0;}h1{font-size:1.6em;margin-bottom:.7em;}.logo_alternate{padding-top:5px;padding-bottom:5px;}#project_title_links{display:table-cell;vertical-align:bottom;padding-bottom:5px;text-align:right;}.IE #RssContainer .HoverPanel{margin-left:-2px;margin-top:-1px;}#RssContainer .HoverPanel{display:none;z-index:15;position:absolute;width:200px;}.AlignLeft{text-align:left !important;}.SideBarControl,.InnerBox{background-color:#fff;clear:both;border:solid 0.1em #ccc;margin:0.3em 0.3em 0.1em 0.3em;padding:.5em;}.Header{margin:0;}#RssContainer #rssHoverTitle{float:right;}a.rss_icon{-moz-transition:opacity .25s ease-in-out;-webkit-transition:opacity .25s ease-in-out;background:url('http://i2.codeplex.com/Images/v19252/sprite.png') no-repeat 0 -120px;height:13px;text-indent:-9999px;top:-16px;transition:opacity .25s ease-in-out;width:13px;float:right;margin-top:3px;text-align:left;}a.rss_link{margin-right:5px;}.clear{clear:both;}.StandardPadding,table.StandardPadding td,table.StandardPadding th{padding:.2em 10px;}.RssFeedsPanel{margin-top:0;margin-bottom:0;padding-top:0;padding-bottom:0;cursor:pointer;text-align:left;z-index:999999;list-style-image:none;list-style-type:none;padding:0 0 0 0;white-space:normal;}.ArrowSmall{background-image:url(http://i2.codeplex.com/Images/v19252/arrow_sm.gif);background-position:.2em .5em;background-repeat:no-repeat;padding-left:1em;}.NoUnderline,.NoUnderline a:active,.NoUnderline a:link,.NoUnderline a:visited{text-decoration:none !important;}ul#page_box_links{width:100%;height:20px;text-align:justify;}ul#page_box_links li{float:none;position:relative;margin-bottom:10px;white-space:nowrap;display:inline-block;*display:inline;margin-right:10px;}ul#page_box_links li a{background-color:#F0F1F4;border-bottom:3px #d8d9dc solid;color:#253340;display:block;font-family:'Segoe UI',Tahoma,Arial,Helvetica,sans-serif;text-transform:uppercase;letter-spacing:.7px;width:100%;height:100%;padding-top:5px;padding-right:5px;padding-bottom:5px;padding-left:10px;}ul#page_box_links li a.documentation_active{background-color:#b8d544;border-bottom:3px #b8d544 solid;color:#fff;}.stretch{width:100%;display:inline-block;font-size:0;line-height:0;}.modal{width:550px;background-color:#fff;border:1px #cdcfd5 solid;margin:0 auto;position:relative;}h2{color:#253340;font:1.308em/1.923em 'Segoe UI Semibold','Segoe-Semibold',Tahoma,Arial,Helvetica,sans-serif;font-variant:small-caps;text-transform:lowercase;}h2{color:Black;}h2{font-size:1.2em;padding-top:.7em;padding-bottom:.7em;}.modal_buttons{float:right;padding-top:20px;margin:0;position:relative;left:20px;}input.cancel{font:13px 'Segoe UI Semibold','Segoe-Semibold','Segoe UI',Tahoma,Arial,Helvetica,sans-serif;font-weight:600;text-transform:uppercase;display:block;min-width:135px;float:left;text-align:center;padding:5px 10px 5px 10px;margin-right:10px;color:#575f69;background-color:#F0F1F4;border:none;cursor:pointer;}input.ok{font:13px 'Segoe UI Semibold','Segoe-Semibold','Segoe UI',Tahoma,Arial,Helvetica,sans-serif;font-weight:600;text-transform:uppercase;color:#fff;display:block;min-width:135px;background-color:#7b4f9d;float:left;text-align:center;padding:5px 10px 5px 10px;position:relative;border:none;cursor:pointer;margin-top:0;}.ClearBoth{clear:both;}.ClearBoth{clear:both;}ul.page_box_sublinks{height:100%;margin-left:0px;margin-bottom:0;}p.subtab_right{margin:0;padding:0;right:0px;bottom:0px;position:absolute;}.subtab_right{float:right;}.IE .RatingStar{padding:0 16px 0 0;}.IE .RatingStar{padding:0 12px 0 0;}.EmptyRatingStar{background-image:url('http://i2.codeplex.com/Images/v19252/star_empty.png');}.RatingStar{background-position:center;background-repeat:no-repeat;height:15px;padding-right:16px;width:16px;}.EmptyRatingStar{background-image:url(http://i2.codeplex.com/Images/v19252/star_empty.png);}.RatingStar{width:12px;height:12px;padding:0 9px 0 0;background-repeat:no-repeat;background-position:center;}#left_column{border-top:1px #ccc solid;float:left;width:650px;height:100%;margin-top:10px;}#breadcrumbs{padding-top:20px;font-weight:bold;font-size:.85em;}
        .WikiHolder
        {
            margin: 0 1em 0 0;
        }
        #WikiContent
        {
            margin-top: 15px;
        }
        .IE .WikiContent{padding-bottom:1.5em;}.WikiContent{width:650px;word-wrap:break-word;}#left_column h2,h2.full_heading{background-color:#F0F1F4;color:#253340;font:1.308em/1.923em 'Segoe UI Semibold','Segoe-Semibold',Tahoma,Arial,Helvetica,sans-serif;font-variant:small-caps;letter-spacing:1px;padding:1px 0px 3px 14px;width:636px;height:100%;}#left_column h2{background-color:#F0F1F4;color:#253340;font:1.308em/1.923em 'Segoe UI Semibold','Segoe-Semibold',Tahoma,Arial,Helvetica,sans-serif;font-variant:small-caps;letter-spacing:1px;padding:1px 0px 3px 14px;width:636px;height:100%;}#left_column h3{font:1.1em/1.4em 'Segoe UI Semibold','Segoe-Semibold',Tahoma,Arial,Helvetica,sans-serif;letter-spacing:1px;}#left_column h3{font:1.1em/1.4em 'Segoe UI Semibold','Segoe-Semibold',Tahoma,Arial,Helvetica,sans-serif;letter-spacing:1px;}h3,h5{color:#253340;font:13px 'Segoe UI Semibold','Segoe-Semibold','Segoe UI',Tahoma,Arial,Helvetica,sans-serif;font-weight:600;text-transform:uppercase;letter-spacing:1px;}h3{font-size:1em;padding-bottom:0;}.SubText{color:#6a747e;font-size:.9em;}#comments p{margin-top:10px;}#right_sidebar{border-top:1px #d1d2d5 solid;float:right;padding-top:15px;position:relative;width:300px;height:100%;margin-top:10px;}#wiki_search{border:1px #ced5e0 solid;color:#7a848e;font:11px/18px 'Segoe UI',Tahoma,Arial,Helvetica,sans-serif;height:30px;padding-left:10px;margin-bottom:10px;width:252px;}.EmptyTextBox{color:#2E8BCC;font-style:italic;}a.wiki_magnify{background:url('http://i2.codeplex.com/Images/v19252/sprite.png') no-repeat 0 -56px;display:block;height:15px;left:275px;position:absolute;text-indent:-9999px;top:25px;width:15px;}#right_sidebar h2,#right_sidebar_noborder h2{background-color:#F0F1F4;color:#253340;font:1.308em/1.923em 'Segoe UI Semibold','Segoe-Semibold',Tahoma,Arial,Helvetica,sans-serif;font-variant:small-caps;letter-spacing:1px;padding-top:1px;padding-bottom:3px;padding-left:14px;width:286px;height:100%;}#footer{color:#6a747e;left:0;margin:0 auto;position:relative;width:985px;}#footer hr{margin-top:25px;margin-bottom:10px;}hr{border:0 #ccc solid;border-top-width:1px;clear:both;height:0;}hr{margin-top:10px;margin-bottom:10px;margin-top:1em;margin-bottom:1em;}#footer ul{margin-left:76px;}#footer ul li{float:left;list-style-type:none;padding-right:24px;}#footer ul li a{color:#6a747e;text-decoration:none;}.ui-dialog{position:absolute;overflow:hidden;}.ui-helper-clearfix{display:block;}.ui-helper-clearfix{display:inline-block;}.loading_animation{width:550px;height:100px;background-color:#8ebd40;}.anim_h2{margin-top:40px;color:#fff;font:24px 'Segoe UI Light',Tahoma Light,Arial Light,Helvetica,sans-serif;font-weight:lighter;text-align:center;position:relative;top:35px;}.anim_img{float:right;position:relative;top:-35px;}
        .style1 {
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style2 {
            display: none;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style3 {
            width: 70%;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style4 {
            text-align: left;
            color: rgb(0, 0, 255);
            font-family: arial;
            display: none;
            position: absolute;
            z-index: 1000;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style5 {
            list-style-type: none;
            font-size: 100%;
            cursor: pointer;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style6 {
            width: 100%;
            text-align: right;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style7 {
            width: 63px;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style8 {
            width: 112px;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style9 {
            width: 143px;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style10 {
            width: 124px;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style11 {
            width: 117px;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style12 {
            width: 71px;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style13 {
            width: 96px;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style14 {
            cursor: pointer;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style15 {
            color: black;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style16 {
            color: blue;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style17 {
            color: rgb(163, 21, 21);
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style18 {
            display: none;
            position: absolute;
            z-index: 1000;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style19 {
            z-index: 1001;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style20 {
            z-index: 1002;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style21 {
            z-index: 1003;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
        .style22 {
            z-index: 1004;
            font-size: 100%;
            vertical-align: baseline;
            border-style: none;
            border-color: inherit;
            border-width: 0;
            margin: 0;
            padding: 0;
            background:;
        }
    </style>
</head>
<body>

    <form id="aspnetForm" 
    action="http://mef.codeplex.com/wikipage?title=Exports%20and%20Metadata" 
    autocomplete="off" class="style1" enctype="multipart/form-data" method="POST" 
    name="aspnetForm" style="outline: 0;">
    <div class="style1" style="outline: 0;">
        <input id="__VIEWSTATE" name="__VIEWSTATE" type="hidden" 
            value="/wEPDwULLTExNDE1NDgzNTgPZBYCZg9kFgJmD2QWBGYPZBYIZg8WAh4HY29udGVudAUHSUU9ZWRnZWQCAg8WAh4EaHJlZgU6aHR0cDovL2kxLmNvZGVwbGV4LmNvbS9jc3MvdjE5MjUyL2kyMDM2NzQzL1N0eWxlU2hlZXQuYXNoeGQCBA9kFgRmDxYCHglpbm5lcmh0bWwFygIuU2l0ZUhlYWRlciwuU2l0ZUhlYWRlckxlZnR7aGVpZ2h0OjQ1cHggIWltcG9ydGFudDtvdmVyZmxvdzpoaWRkZW47fS5TaXRlQ29udGVudHtwYWRkaW5nOjAgMCAxZW0gMDttYXJnaW4tdG9wOjA7bWluLWhlaWdodDoyMjVweDtib3JkZXItcmlnaHQ6MXB4IHNvbGlkIGxpZ2h0Z3JleTtib3JkZXItbGVmdDoxcHggc29saWQgbGlnaHRncmV5O2JvcmRlci1ib3R0b206MXB4IHNvbGlkIGxpZ2h0Z3JleTt9LklFNiAuUHJvamVjdFRpdGxlQ29udHJvbHtwb3NpdGlvbjpyZWxhdGl2ZTt9LklFIHRhYmxlLk1pbldpZHRoQ29udGVudHt0YWJsZS1sYXlvdXQ6YXV0byAhaW1wb3J0YW50O31kAgMPFgQfAAUDTUVGHgdWaXNpYmxlZ2QCBQ8WBB8AZB8DZ2QCAQ9kFgZmDxYCHgRUZXh0BWU8c2NyaXB0IHNyYz0iaHR0cHM6Ly9zaXRlcmVjcnVpdC5jb21zY29yZS5jb20vc3IvY29kZXBsZXgvYnJva2VyLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0PmQCAQ8PFgIeCEltYWdlVXJsBS5odHRwOi8vaTMuY29kZXBsZXguY29tL0ltYWdlcy92MTkyNTIvYmxhbmsucG5nFgIeBm9ubG9hZAUZc2VsZi5sb2dvSW1hZ2VMb2FkZWQ9dHJ1ZWQCBQ9kFggCAQ9kFgYCAw9kFgxmDxYCHwNnFgICAQ8PFgIeC05hdmlnYXRlVXJsBRhodHRwOi8vbWVmLmNvZGVwbGV4LmNvbS9kFgJmDw8WBB4NQWx0ZXJuYXRlVGV4dAUfTWFuYWdlZCBFeHRlbnNpYmlsaXR5IEZyYW1ld29yax8FBV5odHRwOi8vZG93bmxvYWQtY29kZXBsZXguc2VjLnMtbXNmdC5jb20vRG93bmxvYWQ/UHJvamVjdE5hbWU9bWVmJkRvd25sb2FkSWQ9MzE2MDE0JkJ1aWxkPTE5MjUyZGQCAg9kFgICAQ8PFgIfBwUYaHR0cDovL21lZi5jb2RlcGxleC5jb20vZBYCAgEPDxYCHwQFH01hbmFnZWQgRXh0ZW5zaWJpbGl0eSBGcmFtZXdvcmtkZAIED2QWBAIBDw8WAh8HBRhodHRwOi8vbWVmLmNvZGVwbGV4LmNvbS9kFgJmDw8WBB8IBR9NYW5hZ2VkIEV4dGVuc2liaWxpdHkgRnJhbWV3b3JrHwUFXmh0dHA6Ly9kb3dubG9hZC1jb2RlcGxleC5zZWMucy1tc2Z0LmNvbS9Eb3dubG9hZD9Qcm9qZWN0TmFtZT1tZWYmRG93bmxvYWRJZD0zMTYwMTQmQnVpbGQ9MTkyNTJkZAIDDw8WAh8HBRhodHRwOi8vbWVmLmNvZGVwbGV4LmNvbS9kFgICAQ8PFgIfBAUfTWFuYWdlZCBFeHRlbnNpYmlsaXR5IEZyYW1ld29ya2RkAgYPZBYEAgEPDxYCHwcFGGh0dHA6Ly9tZWYuY29kZXBsZXguY29tL2QWAmYPDxYEHwgFH01hbmFnZWQgRXh0ZW5zaWJpbGl0eSBGcmFtZXdvcmsfBQVeaHR0cDovL2Rvd25sb2FkLWNvZGVwbGV4LnNlYy5zLW1zZnQuY29tL0Rvd25sb2FkP1Byb2plY3ROYW1lPW1lZiZEb3dubG9hZElkPTMxNjAxNCZCdWlsZD0xOTI1MmRkAgMPDxYCHwcFGGh0dHA6Ly9tZWYuY29kZXBsZXguY29tL2QWAgIBDw8WAh8EBR9NYW5hZ2VkIEV4dGVuc2liaWxpdHkgRnJhbWV3b3JrZGQCCA8PFgIfBwUYaHR0cDovL21lZi5jb2RlcGxleC5jb20vZBYCZg8PFgQfCAUfTWFuYWdlZCBFeHRlbnNpYmlsaXR5IEZyYW1ld29yax8FBV5odHRwOi8vZG93bmxvYWQtY29kZXBsZXguc2VjLnMtbXNmdC5jb20vRG93bmxvYWQ/UHJvamVjdE5hbWU9bWVmJkRvd25sb2FkSWQ9MzE2MDE0JkJ1aWxkPTE5MjUyZGQCDA9kFgICAQ8PFgIfBwUYaHR0cDovL21lZi5jb2RlcGxleC5jb20vZBYCAgEPDxYCHwQFH01hbmFnZWQgRXh0ZW5zaWJpbGl0eSBGcmFtZXdvcmtkZAIFD2QWAmYPFgIfA2gWAgIBDw8WAh8HBSRodHRwOi8vbWVmLmNvZGVwbGV4LmNvbS9wcm9qZWN0L2VkaXRkZAIHD2QWAgIBD2QWAgIDD2QWAgIBD2QWAgIBD2QWAgIBD2QWDgIBD2QWAgIBDw8WAh8HBSlodHRwOi8vbWVmLmNvZGVwbGV4LmNvbS9wcm9qZWN0L2ZlZWRzL3Jzc2RkAgMPZBYCAgEPDxYCHwcFVWh0dHA6Ly9tZWYuY29kZXBsZXguY29tL3Byb2plY3QvZmVlZHMvcnNzP1Byb2plY3RSU1NGZWVkPWNvZGVwbGV4JTNhJTJmJTJmZm9ydW0lMmZtZWZkZAIFD2QWAgIBDw8WAh8HBVhodHRwOi8vbWVmLmNvZGVwbGV4LmNvbS9wcm9qZWN0L2ZlZWRzL3Jzcz9Qcm9qZWN0UlNTRmVlZD1jb2RlcGxleCUzYSUyZiUyZndvcmtpdGVtJTJmbWVmZGQCBw9kFgICAQ8PFgIfBwVXaHR0cDovL21lZi5jb2RlcGxleC5jb20vcHJvamVjdC9mZWVkcy9yc3M/UHJvamVjdFJTU0ZlZWQ9Y29kZXBsZXglM2ElMmYlMmZyZWxlYXNlJTJmbWVmZGQCCQ9kFgICAQ8PFgIfBwVWaHR0cDovL21lZi5jb2RlcGxleC5jb20vcHJvamVjdC9mZWVkcy9yc3M/UHJvamVjdFJTU0ZlZWQ9Y29kZXBsZXglM2ElMmYlMmZyZXZpZXclMmZtZWZkZAILD2QWAgIBDw8WAh8HBV1odHRwOi8vbWVmLmNvZGVwbGV4LmNvbS9wcm9qZWN0L2ZlZWRzL3Jzcz9Qcm9qZWN0UlNTRmVlZD1jb2RlcGxleCUzYSUyZiUyZnNvdXJjZWNvbnRyb2wlMmZtZWZkZAIND2QWAgIBDw8WAh8HBVRodHRwOi8vbWVmLmNvZGVwbGV4LmNvbS9wcm9qZWN0L2ZlZWRzL3Jzcz9Qcm9qZWN0UlNTRmVlZD1jb2RlcGxleCUzYSUyZiUyZndpa2klMmZtZWZkZAIDD2QWAgIBD2QWBGYPDxYCHwNoZBYCAgMPZBYCZg9kFgICAQ9kFgQCBQ8PFgIfA2hkZAIHDw8WAh8DaGRkAgEPZBYCAgMPZBYCAgEPZBYCAgEPZBYCAgEPZBYCAgEPFgIfAQU9aHR0cDovL21lZi5jb2RlcGxleC5jb20vcHJvamVjdC9lZGl0P0ZvY3VzRWxlbWVudD1EZXNjcmlwdGlvbmQCBQ9kFhACAQ9kFgJmDw8WAh8HBRhodHRwOi8vbWVmLmNvZGVwbGV4LmNvbS8WAh4FY2xhc3MFCGJveF9ob21lZAIDD2QWAmYPDxYCHwcFIGh0dHA6Ly9tZWYuY29kZXBsZXguY29tL3JlbGVhc2VzFgIfCQUNYm94X2Rvd25sb2Fkc2QCBQ9kFgJmDw8WAh8HBSVodHRwOi8vbWVmLmNvZGVwbGV4LmNvbS9kb2N1bWVudGF0aW9uFgIfCQUUZG9jdW1lbnRhdGlvbl9hY3RpdmVkAgcPZBYCZg8PFgIfBwUjaHR0cDovL21lZi5jb2RlcGxleC5jb20vZGlzY3Vzc2lvbnMWAh8JBQ9ib3hfZGlzY3Vzc2lvbnNkAgkPZBYCZg8PFgIfBwUraHR0cDovL21lZi5jb2RlcGxleC5jb20vd29ya2l0ZW0vbGlzdC9iYXNpYxYCHwkFCWJveF9pc3N1ZWQCCw9kFgJmDw8WAh8HBTVodHRwOi8vbWVmLmNvZGVwbGV4LmNvbS9Tb3VyY2VDb250cm9sL2xpc3QvY2hhbmdlc2V0cxYCHwkFCmJveF9zb3VyY2VkAg0PZBYCZg8PFgIfBwUhaHR0cDovL21lZi5jb2RlcGxleC5jb20vdGVhbS92aWV3FgIfCQUKYm94X3Blb3BsZWQCDw9kFgJmDw8WAh8HBR9odHRwOi8vbWVmLmNvZGVwbGV4LmNvbS9saWNlbnNlFgIfCQULYm94X2xpY2Vuc2VkAgkPDxYCHwNoZGRk0bPmopcpKeZLvzs9fUYtu2WPFR4=" />
    </div>
    <!--
    Third party scripts and code linked to or referenced from this website are licensed to you by the parties that own such code,
    not by Microsoft.  See ASP.NET Ajax CDN Terms of Use – http://www.asp.net/ajaxlibrary/CDN.ashx.
    -->
<SCRIPT type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/jquery/jquery-1.4.4.min.js"></SCRIPT>

<SCRIPT type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.6/jquery-ui.min.js"></SCRIPT>

<SCRIPT type="text/javascript" src="http://i1.codeplex.com/scripts/v19252/i7/ScriptLoader.ashx"></SCRIPT>
    <div class="style2" 
        style="outline-width: 0; outline-style: none; outline-color: invert;">
        <div id="Analytics" class="style3" 
            style="outline-width: 0; outline-style: none; outline-color: invert;">
<SCRIPT type="text/javascript" src="https://siterecruit.comscore.com/sr/codeplex/broker.js"></SCRIPT>
            <img id="ctl00_ctl00_BlankImage" onload="self.logoImageLoaded=true" 
                src="http://i3.codeplex.com/Images/v19252/blank.png" />
<SCRIPT language="javascript" type="text/javascript">
            var date = new Date();
            var timezoneOffset = date.getTimezoneOffset() / 60 * -1;
            var timezoneOffsetCookie = getCookie("TimezoneOffset");
            var firstTimeSetTimezoneCookie = false;

            if (timezoneOffsetCookie == null || timezoneOffsetCookie != timezoneOffset) {
                firstTimeSetTimezoneCookie = true;
                document.cookie = "TimezoneOffset=" + timezoneOffset + '; domain=.codeplex.com';
            }
        </SCRIPT>
            <noscript>
&lt;a href="http://www.omniture.com" title="Web Analytics"&gt;                &lt;img src="http://msstonojstemp.112.2O7.net/b/ss/msstonojstemp/1/H.20.2--NS/0" height="1" width="1" border="0" alt="" /&gt;            &lt;/a&gt;
            </noscript>
        </div>
    </div>
    <div id="header" class="style1" style="outline: 0;">
        <div id="header_wrap" class="style1" style="outline: 0;">
            <p id="logo" class="style1" style="outline: 0;">
                <a class="style1" href="http://www.codeplex.com" style="outline: 0;">Code<span 
                    class="style1" style="outline: 0;">Plex</span></a><span id="tagline" 
                    class="style1" style="outline: 0;">Project Hosting for Open Source Software</span></p>
            <ul id="nav" class="style1" style="outline: 0;">
                <li class="style1" style="outline: 0;"><a id="registerLink" class="style1" 
                        href="http://mef.codeplex.com/site/register/new" style="outline: 0;">
                    Register</a></li>
                <li class="style1" style="outline: 0;"><a id="signInLink" class="style1" 
                        href="https://www.codeplex.com/site/login?RedirectUrl=http%3a%2f%2fmef.codeplex.com%2fwikipage%3ftitle%3dExports%20and%20Metadata%26ProjectName%3dmef" 
                        style="outline: 0;">Sign In</a></li>
                <li class="style1" style="outline: 0;"><a class="style1" 
                        href="http://www.codeplex.com/site/feeds/rss" rel="Alternate" 
                        style="outline: 0;" title="CodePlex Site Activity" type="application/rss+xml">
                    </a></li>
            </ul>
            <input id="searchsite" autocomplete="off" maxlength="500" name="searchsite" 
                style="color: rgb(170, 170, 170); font-style: italic;" 
                title="Search all projects" type="text" value="" /><span id="search_mag" 
                class="style1" style="outline: 0;"><a id="submitSearch" class="style1" 
                href="#" name="submitSearch" style="outline: 0;" title="Search all projects"></a></span>
<SCRIPT>
	$(document).ready(function() {
    $loadScript('http://i4.services.social.microsoft.com/search/Widgets/SearchBox.jss?appid=1000&scopeid=1&boxId=searchsite&btnId=submitSearch&watermark=Search%20all%20projects&overrideWatermark=true&searchLocation=%2fsite%2fsearch&allowEmptySearch=true&focusOnInit=False&minimumTermLength=3');
    if (typeof epx_loaded === 'undefined' || !epx_loaded) {
        $('#submitSearch').bind('click', doProjectSearch);
        $('#searchsite').bind('keypress', function(e) { if ($keyCode(e) === 13) { doProjectSearch(); return false; } });
    }
})
function doProjectSearch() {
    
    var url = '/site/search';

    //If search term is not same as watermark
    if($('#searchsite').val() != 'Search all projects')    
    {        
        url = url + '?query=' + encodeURIComponent($('#searchsite').val());
    }

    
    var callback = '';
    if (callback.length > 0 && eval('typeof ' + callback) != 'undefined')
        url += eval(callback + '()');
    window.location.href = url;
    return false;
}
</SCRIPT>
            <div id="SearchFlyoutContainer" class="style4" 
                style="outline-width: 0; outline-style: none; outline-color: invert;">
                <div id="SuggestionContainer" class="style1" style="outline: 0;">
                    <ul class="style5" 
                        style="outline-width: 0; outline-style: none; outline-color: invert;">
                    </ul>
                </div>
                <div id="FooterContainer" class="style6" 
                    style="outline-width: 0; outline-style: none; outline-color: invert;">
                    <a class="style1" href="#" style="outline: 0;">Close</a></div>
            </div>
            <div id="SearchFlyoutContainer0" class="style4" 
                style="outline-width: 0; outline-style: none; outline-color: invert;">
                <div id="SuggestionContainer0" class="style1" style="outline: 0;">
                    <ul class="style5" 
                        style="outline-width: 0; outline-style: none; outline-color: invert;">
                    </ul>
                </div>
                <div id="FooterContainer0" class="style6" 
                    style="outline-width: 0; outline-style: none; outline-color: invert;">
                    <a class="style1" href="#" style="outline: 0;">Close</a></div>
            </div>
        </div>
    </div>
    <div id="wrap" class="style1" style="outline: 0;">
        <div id="sub_heading" class="style1" style="outline: 0;">
            <div id="ctl00_ctl00_MasterContent_ProjectHeader" class="style1" 
                style="outline: 0;">
                <div id="project_title_row" class="style1" style="outline: 0;">
                    <div id="project_logo" class="style1" style="outline: 0;">
                        <h1 class="style1" style="outline: 0;">
                            <a id="ctl00_ctl00_MasterContent_ProjectTitleControl1_ProjectLogoLink1" 
                                class="style1" href="http://mef.codeplex.com/" style="outline: 0;">
                            <img id="ctl00_ctl00_MasterContent_ProjectTitleControl1_ProjectLogo1" 
                                alt="Managed Extensibility Framework" class="style1" 
                                src="http://download-codeplex.sec.s-msft.com/Download?ProjectName=mef&amp;DownloadId=316014&amp;Build=19252" 
                                style="outline-width: 0; outline-style: none; outline-color: invert; max-width: 440px; max-height: 100px;" /></a></h1>
                    </div>
                    <div id="project_title_links" class="style1" style="outline: 0;">
                        <div id="RssContainer" class="style1" style="outline: 0;">
<SCRIPT type="text/javascript">
    $(document).ready(function() {
        $('#rssHoverTitle a').click(function() {
            allowUnsavedDataAlert();
            $('#rssHoverDiv').hide();
            return false;
        });

        $('#rssHoverLink a').click(function () {
            var pos = $('#rssHoverLink .rss_link').position();
            $("#rssHoverDiv").css({
                top: (pos.top - 11) + "px",
                left: (pos.left - 55) + "px"
            }).show();
            $('#rssHoverDiv').show();
            return false;
        });
    })
</SCRIPT>
                            <div id="rssHoverDiv" class="style1" style="outline: 0;">
                                <div id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel" 
                                    class="style1" style="outline: 0;">
                                    <div id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_headerPanel" 
                                        class="style1" style="outline: 0;">
                                        <div id="rssHoverTitle" class="style1" style="outline: 0;">
                                            <a class="style1" href="#" style="outline: 0;">RSSSubscribe to Project</a></div>
                                        <div class="style1" style="outline: 0;">
                                        </div>
                                    </div>
                                    <div id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_contentPanel" 
                                        class="style1" style="outline: 0;">
                                        <ul id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_FeedsPanel" 
                                            class="style1" style="outline: 0;">
                                            <div id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_ProjectPanel" 
                                                class="style1" style="outline: 0;">
                                                <li class="style1" style="outline: 0;">
                                                    <a id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_ProjectRssLink" 
                                                        class="style1" href="http://mef.codeplex.com/project/feeds/rss" 
                                                        style="outline: 0;" title="All Project Updates">All Project Updates</a></li>
                                            </div>
                                            <div id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_DiscussionsPanel" 
                                                class="style1" style="outline: 0;">
                                                <li class="style1" style="outline: 0;">
                                                    <a id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_DiscussionsRssLink" 
                                                        class="style1" 
                                                        href="http://mef.codeplex.com/project/feeds/rss?ProjectRSSFeed=codeplex%3a%2f%2fforum%2fmef" 
                                                        style="outline: 0;" title="New threads and posts">Discussions</a></li>
                                            </div>
                                            <div id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_IssueTrackerPanel" 
                                                class="style1" style="outline: 0;">
                                                <li class="style1" style="outline: 0;">
                                                    <a id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_IssueTrackerRssLink" 
                                                        class="style1" 
                                                        href="http://mef.codeplex.com/project/feeds/rss?ProjectRSSFeed=codeplex%3a%2f%2fworkitem%2fmef" 
                                                        style="outline: 0;" title="New and updated work items">Issue Tracker</a></li>
                                            </div>
                                            <div id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_ReleasesPanel" 
                                                class="style1" style="outline: 0;">
                                                <li class="style1" style="outline: 0;">
                                                    <a id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_ReleasesRssLink" 
                                                        class="style1" 
                                                        href="http://mef.codeplex.com/project/feeds/rss?ProjectRSSFeed=codeplex%3a%2f%2frelease%2fmef" 
                                                        style="outline: 0;" title="New and updated releases">Releases</a></li>
                                            </div>
                                            <div id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_ReviewsPanel" 
                                                class="style1" style="outline: 0;">
                                                <li class="style1" style="outline: 0;">
                                                    <a id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_ReviewsRssLink" 
                                                        class="style1" 
                                                        href="http://mef.codeplex.com/project/feeds/rss?ProjectRSSFeed=codeplex%3a%2f%2freview%2fmef" 
                                                        style="outline: 0;" title="New and updated reviews">Reviews</a></li>
                                            </div>
                                            <div id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_SourceControlPanel" 
                                                class="style1" style="outline: 0;">
                                                <li class="style1" style="outline: 0;">
                                                    <a id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_SourceControlRssLink" 
                                                        class="style1" 
                                                        href="http://mef.codeplex.com/project/feeds/rss?ProjectRSSFeed=codeplex%3a%2f%2fsourcecontrol%2fmef" 
                                                        style="outline: 0;" title="New check-ins">Source Code</a></li>
                                            </div>
                                            <div id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_WikiPanel" 
                                                class="style1" style="outline: 0;">
                                                <li class="style1" style="outline: 0;">
                                                    <a id="ctl00_ctl00_MasterContent_rssFeeds_RssHoverContentPanel_WikiRssLink" 
                                                        class="style1" 
                                                        href="http://mef.codeplex.com/project/feeds/rss?ProjectRSSFeed=codeplex%3a%2f%2fwiki%2fmef" 
                                                        style="outline: 0;" title="New and updated wiki pages">Wiki &amp; Documentation</a></li>
                                            </div>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            <div id="rssHoverLink" class="style1" style="outline: 0;">
                                <a class="style1" href="#" style="outline: 0;">RSSSubscribe to Project</a></div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="ctl00_ctl00_MasterContent_ProjectDetailsDiv" class="style1" 
                style="outline: 0;">
<SCRIPT type="text/javascript">
    function VerifyProjectDeletion()
    {
        var result = confirm("Are you sure you want to delete this project?  You will not be able to recover it later");
        if (result)
            ShowUpdatingPanel();
        else
            allowUnsavedDataAlert();
        return result;
    }
    function ShowPublishPanel()
    {
        ShowUpdatingPanel();
    }
    function ShowUpdatingPanel()
    {
        var publishButton=$('#ctl00_ctl00_MasterContent_ProjectCountdown_PublishProject_PublishButton')[0];
        var deleteButton=$('#ctl00_ctl00_MasterContent_ProjectCountdown_PublishProject_DeleteButton')[0];

        setTimeout(function() { CodePlex.UpdateProgress.displayPanelAndDisableControls('Working...', publishButton, deleteButton) }, 1);
    }
</SCRIPT>
                <div class="style1" style="outline: 0;">
                </div>
<SCRIPT type="text/javascript">
    // replaces the smartdatecontrol's "Today" with "today" or "on {Date}" for this user control
    function formatDate() {
        var dateSpan = $('#ctl00_ctl00_MasterContent_ProjectCountdown_PublishProject_DeletionDateLiteral');
        if (dateSpan.text().toLowerCase() == "today")
            dateSpan.text("today");
        else
            dateSpan.text("on " + dateSpan.text());
    }
    formatDate();
</SCRIPT>
            </div>
            <div class="style1" style="outline: 0;">
            </div>
            <ul id="page_box_links" class="style1" style="outline: 0;">
                <li id="ctl00_ctl00_MasterContent_Tabs_homeTabCell" class="style7" 
                    style="outline-width: 0; outline-style: none; outline-color: invert;">
                    <a id="ctl00_ctl00_MasterContent_Tabs_homeTab" class="style1" 
                        href="http://mef.codeplex.com/" style="outline: 0;">home</a><div 
                        class="style1" style="outline: 0;">
                    </div>
                </li>
                <li id="ctl00_ctl00_MasterContent_Tabs_releasesTabCell" class="style8" 
                    style="outline-width: 0; outline-style: none; outline-color: invert;">
                    <a id="ctl00_ctl00_MasterContent_Tabs_releasesTab" class="style1" 
                        href="http://mef.codeplex.com/releases" style="outline: 0;">downloads</a><div 
                        class="style1" style="outline: 0;">
                    </div>
                </li>
                <li id="ctl00_ctl00_MasterContent_Tabs_documentationTabCell" class="style9" 
                    style="outline-width: 0; outline-style: none; outline-color: invert;">
                    <a id="ctl00_ctl00_MasterContent_Tabs_documentationTab" class="style1" 
                        href="http://mef.codeplex.com/documentation" style="outline: 0;">
                    documentation</a><div class="style1" style="outline: 0;">
                    </div>
                </li>
                <li id="ctl00_ctl00_MasterContent_Tabs_discussionTabCell" class="style8" 
                    style="outline-width: 0; outline-style: none; outline-color: invert;">
                    <a id="ctl00_ctl00_MasterContent_Tabs_discussionTab" class="style1" 
                        href="http://mef.codeplex.com/discussions" style="outline: 0;">discussions</a><div 
                        class="style1" style="outline: 0;">
                    </div>
                </li>
                <li id="ctl00_ctl00_MasterContent_Tabs_workItemsTabCell" class="style10" 
                    style="outline-width: 0; outline-style: none; outline-color: invert;">
                    <a id="ctl00_ctl00_MasterContent_Tabs_workItemsTab" class="style1" 
                        href="http://mef.codeplex.com/workitem/list/basic" style="outline: 0;">issue 
                    tracker</a><div class="style1" style="outline: 0;">
                    </div>
                </li>
                <li id="ctl00_ctl00_MasterContent_Tabs_sourceTabCell" class="style11" 
                    style="outline-width: 0; outline-style: none; outline-color: invert;">
                    <a id="ctl00_ctl00_MasterContent_Tabs_sourceTab" class="style1" 
                        href="http://mef.codeplex.com/SourceControl/list/changesets" 
                        style="outline: 0;">source code</a><div class="style1" style="outline: 0;">
                    </div>
                </li>
                <li id="ctl00_ctl00_MasterContent_Tabs_peopleTabCell" class="style12" 
                    style="outline-width: 0; outline-style: none; outline-color: invert;">
                    <a id="ctl00_ctl00_MasterContent_Tabs_peopleTab" class="style1" 
                        href="http://mef.codeplex.com/team/view" style="outline: 0;">people</a><div 
                        class="style1" style="outline: 0;">
                    </div>
                </li>
                <li id="ctl00_ctl00_MasterContent_Tabs_licenseTabCell" class="style13" 
                    style="outline-width: 0; outline-style: none; outline-color: invert;">
                    <a id="ctl00_ctl00_MasterContent_Tabs_licenseTab" class="style1" 
                        href="http://mef.codeplex.com/license" style="outline: 0;">license</a><div 
                        class="style1" style="outline: 0;">
                    </div>
                    <span class="style1" style="outline: 0;"></span></li>
            </ul>
<SCRIPT type="text/javascript">
        $(document).ready(function () {
            return resizeProjectTabs();
        });
    </SCRIPT>
            <div class="style1" style="outline: 0;">
            </div>
            <div id="DeleteWikiPagePanel" class="style2" 
                style="outline-width: 0; outline-style: none; outline-color: invert;">
                <div class="style1" style="outline: 0;">
                    <h2 class="style1" style="outline: 0;">
                        Are you Sure? <a class="style1" href="javascript:return false;" 
                            style="outline: 0;">X</a></h2>
                </div>
                <div class="style1" style="outline: 0;">
                    By clicking Delete, all history, comments and attachments for this page will be 
                    deleted and cannot be restored.
                    <div class="style1" style="outline: 0;">
                        <input id="CancelButton" class="cancel" type="button" value="Cancel" /><input 
                            id="DeleteButton" class="ok" type="button" value="Delete" /></div>
                    <div class="style1" style="outline: 0;">
                    </div>
                </div>
            </div>
            <ul class="style1" style="outline: 0;">
                <li class="style1" style="outline: 0;"><a id="pageInfoHyperLink" class="style1" 
                        href="http://mef.codeplex.com/wiki/PageInfo?title=Exports%20and%20Metadata" 
                        style="outline: 0;">Page Info</a></li>
                <li class="style1" style="outline: 0;"><a id="changesHyperlink" class="style1" 
                        href="http://mef.codeplex.com/wikipage/history" style="outline: 0;">Change 
                    History (all pages)</a></li>
            </ul>
<SCRIPT type="text/javascript">
    function toggleFavoriteProject() {
        
            location.href = 'https://www.codeplex.com/site/login?RedirectUrl=http%3a%2f%2fmef.codeplex.com%2f'
        
    }
</SCRIPT>
            <div id="favoriteProjectContainer" class="style1" style="outline: 0;">
                <p class="style1" style="outline: 0;">
                    <span class="style14" onclick="toggleFavoriteProject();return false;" 
                        style="outline-width: 0; outline-style: none; outline-color: invert;">
                    </span><a class="style1" href="http://mef.codeplex.com/team/view" 
                        style="outline: 0;">1261 people</a> following this project<a 
                        id="followLink" class="style1" href="#" 
                        onclick="toggleFavoriteProject();return false;" style="outline: 0;">(follow)</a></p>
            </div>
        </div>
        <div id="ctl00_ctl00_MasterContent_ProjectContentPanel" class="style1" 
            style="outline: 0;">
            <div id="left_column" class="style1" style="outline: 0;">
                <p id="breadcrumbs" class="style1" 
                    style="outline-width: 0; outline-style: none; outline-color: invert;">
                    <a class="style1" href="http://mef.codeplex.com/documentation" 
                        style="outline: 0;">Documentation</a><img alt="Go" 
                        src="http://i3.codeplex.com/Images/v19252/arrow_sm.gif" /><a class="style1" 
                        href="http://mef.codeplex.com/wikipage?title=Guide" style="outline: 0;">Guide</a><img 
                        alt="Go" src="http://i3.codeplex.com/Images/v19252/arrow_sm.gif" /><a 
                        class="style1" 
                        href="http://mef.codeplex.com/wikipage?title=Exports%20and%20Metadata" 
                        style="outline: 0;">Exports and Metadata</a></p>
                <div class="style1" style="outline: 0;">
                    <div id="WikiContent" class="style1" style="outline: 0;">
                        <div class="style1" style="outline: 0;">
                            <h1 class="style1" style="outline: 0;">
                                Exports and Metadata</h1>
                            <a class="style1" 
                                href="http://mef.codeplex.com/wikipage?title=Declaring%20Exports&amp;referringTitle=Exports%20and%20Metadata" 
                                style="outline: 0;">Declaring Exports</a> explained the basics of parts 
                            exporting services and values. In some cases it’s necessary to associate 
                            information with exports for a variety of reasons. Commonly it’s used to explain 
                            about the capabilities of an specific implementation of a common contract. This 
                            is useful to allow imports to either constraint the export that can satisfy it, 
                            or to import all available implementations at the time and check their 
                            capabilities in runtime before using the export.<br />
                            <h2 class="style1" style="outline: 0;">
                                Attaching Metadata to an Export</h2>
                            Consider the IMessageSender service introduced earlier. Suppose we have a few 
                            implementations, and they have differences that may be relevant to the consumer 
                            of the implementations. For our example the transport of the message and whether 
                            is secure are important information for a consumer (importer).<br />
                            <h3 class="style1" style="outline: 0;">
                                Using ExportMetadataAttribute</h3>
                            All we have to do to attach this information is to use the <b class="style1" 
                                style="outline: 0;"><span class="style1" style="outline: 0;">
                            [System.ComponentModel.Composition.ExportMetadataAttribute]</span></b>:<br />
                            <br />
                            <div class="style15" 
                                style="outline-width: 0; outline-style: none; outline-color: invert;">
                                <pre class="style1" style="outline: 0;"><span class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">interface</span> IMessageSender
{
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">void</span> Send(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">string</span> message);
}

[Export(<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">typeof</span>(IMessageSender))]
[ExportMetadata(<span class="style17" style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;transport&quot;</span>, <span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;smtp&quot;</span>)]
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">class</span> EmailSender : IMessageSender
{
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">void</span> Send(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">string</span> message)
    {
        Console.WriteLine(message);
    }
}

[Export(<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">typeof</span>(IMessageSender))]
[ExportMetadata(<span class="style17" style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;transport&quot;</span>, <span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;smtp&quot;</span>)]
[ExportMetadata(<span class="style17" style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;secure&quot;</span>, <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">null</span>)]
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">class</span> SecureEmailSender : IMessageSender
{
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">void</span> Send(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">string</span> message)
    {
        Console.WriteLine(message);
    }
}

[Export(<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">typeof</span>(IMessageSender))]
[ExportMetadata(<span class="style17" style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;transport&quot;</span>, <span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;phone_network&quot;</span>)]
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">class</span> SMSSender : IMessageSender
{
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">void</span> Send(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">string</span> message)
    {
        Console.WriteLine(message);
    }
}
</pre>
                            </div>
                            <div class="style15" 
                                style="outline-width: 0; outline-style: none; outline-color: invert;">
                                <pre class="style1" style="outline: 0;"><span class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Interface</span> IMessageSender
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span> Send(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">ByVal</span> message <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">As</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">String</span>) 
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Interface</span>

&lt;Export(<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">GetType</span>(IMessageSender)), ExportMetadata(<span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;transport&quot;</span>, <span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;smtp&quot;</span>)&gt;
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span> EmailSender
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Implements</span> IMessageSender
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span> Send(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">ByVal</span> message <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">As</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">String</span>) <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Implements</span> IMessageSender.Send
        Console.WriteLine(message) 
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span>
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span>

&lt;Export(<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">GetType</span>(IMessageSender)), ExportMetadata(<span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;transport&quot;</span>, <span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;smtp&quot;</span>), ExportMetadata(<span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;secure&quot;</span>, <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Nothing</span>)&gt; 
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span> SecureEmailSender
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Implements</span> IMessageSender
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span> Send(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">ByVal</span> message <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">As</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">String</span>) <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Implements</span> IMessageSender.Send
        Console.WriteLine(message) 
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span>
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span>

&lt;Export(<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">GetType</span>(IMessageSender)), ExportMetadata(<span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;transport&quot;</span>, <span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;phone_network&quot;</span>)&gt;
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span> SMSSender
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Implements</span> IMessageSender
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span> Send(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">ByVal</span> message <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">As</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">String</span>) <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Implements</span> IMessageSender.Send
        Console.WriteLine(message) 
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span>
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span>
</pre>
                            </div>
                            <h3 class="style1" style="outline: 0;">
                                Using a Custom Export Attribute</h3>
                            In order to do it more strongly typed than using the ExportMetadataAttribute, 
                            you need to create your own attribute and decorate it with <b class="style1" 
                                style="outline: 0;"><span class="style1" style="outline: 0;">
                            [System.ComponentModel.Composition.MetadataAttribute]</span></b>. In this 
                            example we also derive from ExportAttribute, thus creating a custom Export 
                            attribute that also specifies metadata.
                            <br />
                            <br />
                            <div class="style15" 
                                style="outline-width: 0; outline-style: none; outline-color: invert;">
                                <pre class="style1" style="outline: 0;">[MetadataAttribute]
[AttributeUsage(AttributeTargets.Class, AllowMultiple=<span class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">false</span>)]
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">class</span> MessageSenderAttribute : ExportAttribute
{
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> MessageSenderAttribute() : <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">base</span>(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">typeof</span>(IMessageSender)) { }
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> MessageTransport Transport { <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">get</span>; <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">set</span>; }
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">bool</span> IsSecure { <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">get</span>; <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">set</span>; }
}

<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">enum</span> MessageTransport
{
    Undefined,
    Smtp,
    PhoneNetwork,
    Other
}
</pre>
                            </div>
                            <div class="style15" 
                                style="outline-width: 0; outline-style: none; outline-color: invert;">
                                <pre class="style1" style="outline: 0;">&lt;MetadataAttribute(), AttributeUsage(AttributeTargets.<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span>, AllowMultiple:=<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">False</span>)&gt; 
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span> MessageSenderAttribute
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Inherits</span> ExportAttribute
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">New</span>()
        <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">MyBase</span>.<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">New</span>(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">GetType</span>(IMessageSender)) 
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span>
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Property</span> Transport() <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">As</span> MessageTransport
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Property</span> IsSecure() <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">As</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Boolean</span>
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span>

<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Enum</span> MessageTransport
    Undefined
    Smtp
    PhoneNetwork
    Other
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Enum</span>
</pre>
                            </div>
                            <br />
                            Above, the MetadataAttribute is applied to our custom export attribute. The next 
                            step is to apply the attribute to our IMessageSender implementations:<br />
                            <br />
                            <div class="style15" 
                                style="outline-width: 0; outline-style: none; outline-color: invert;">
                                <pre class="style1" style="outline: 0;">[MessageSender(Transport=MessageTransport.Smtp)]
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">class</span> EmailSender : IMessageSender
{
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">void</span> Send(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">string</span> message)
    {
        Console.WriteLine(message);
    }
}

[MessageSender(Transport=MessageTransport.Smtp, IsSecure=<span class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">true</span>)]
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">class</span> SecureEmailSender : IMessageSender
{
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">void</span> Send(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">string</span> message)
    {
        Console.WriteLine(message);
    }
}

[MessageSender(Transport=MessageTransport.PhoneNetwork)]
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">class</span> SMSSender : IMessageSender
{
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">void</span> Send(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">string</span> message)
    {
        Console.WriteLine(message);
    }
}
</pre>
                            </div>
                            <br />
                            <div class="style15" 
                                style="outline-width: 0; outline-style: none; outline-color: invert;">
                                <pre class="style1" style="outline: 0;">&lt;MessageSender(Transport:=MessageTransport.Smtp)&gt; 
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span> EmailSender
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Implements</span> IMessageSender
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span> Send(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">ByVal</span> message <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">As</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">String</span>) <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Implements</span> IMessageSender.Send
        Console.WriteLine(message) 
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span>
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span>

&lt;MessageSender(Transport:=MessageTransport.Smtp, IsSecure:=<span class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">True</span>)&gt; 
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span> SecureEmailSender
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Implements</span> IMessageSender
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span> Send(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">ByVal</span> message <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">As</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">String</span>) <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Implements</span> IMessageSender.Send
        Console.WriteLine(message) 
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span>
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span>

&lt;MessageSender(Transport:=MessageTransport.PhoneNetwork)&gt; 
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span> SMSSender
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Implements</span> IMessageSender
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span> Send(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">ByVal</span> message <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">As</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">String</span>) <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Implements</span> IMessageSender.Send
        Console.WriteLine(message) 
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span>
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span>
</pre>
                            </div>
                            <br />
                            That’s all that is required on the export side. Under the hood, MEF is still 
                            populating a dictionary, but this fact becomes invisible to you.<br />
                            <br />
                            <b class="style1" style="outline: 0;">Note:</b> You can also create metadata 
                            attributes that are not themselves exports, by creating an attribute which is 
                            decorated with MetadataAttributeAttribute. In these cases the metadata will be 
                            added to Exports on the same member where the custom metadata attribute was 
                            applied.<br />
                            <h2 class="style1" style="outline: 0;">
                                Importing Metadata</h2>
                            Importers can access the metadata attached to the exports.<h3 class="style1" 
                                style="outline: 0;">
                                Using Strongly-typed Metadata</h3>
                            To access metadata in a strongly-typed fashion created a metadata view by 
                            definining an interface with matching read only properties (names and types). 
                            For our sample it would be an interface like the following:<br />
                            <br />
                            <div class="style15" 
                                style="outline-width: 0; outline-style: none; outline-color: invert;">
                                <pre class="style1" style="outline: 0;"><span class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">interface</span> IMessageSenderCapabilities
{
    MessageTransport Transport { <span class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">get</span>; }
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">bool</span> IsSecure { <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">get</span>; }
}
</pre>
                            </div>
                            <div class="style15" 
                                style="outline-width: 0; outline-style: none; outline-color: invert;">
                                <pre class="style1" style="outline: 0;"><span class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Interface</span> IMessageSenderCapabilities
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">ReadOnly</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Property</span> Transport() <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">As</span> MessageTransport
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">ReadOnly</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Property</span> IsSecure() <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">As</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Boolean</span>
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Interface</span>
</pre>
                            </div>
                            <br />
                            Then you can start importing using the type <b class="style1" 
                                style="outline: 0;"><span class="style1" style="outline: 0;">System.Lazy&lt;T, 
                            TMetadata&gt;</span></b> where T is the contract type and TMetadata is the 
                            interface you’ve created.
                            <br />
                            <br />
                            <div class="style15" 
                                style="outline-width: 0; outline-style: none; outline-color: invert;">
                                <pre class="style1" style="outline: 0;">[Export]
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">class</span> HttpServerHealthMonitor
{
    [ImportMany]
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> Lazy&lt;IMessageSender, IMessageSenderCapabilities&gt;[] Senders { <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">get</span>; <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">set</span>; }

    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">void</span> SendNotification()
    {
        <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">foreach</span>(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">var</span> sender <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">in</span> Senders)
        {
            <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">if</span> (sender.Metadata.Transport == MessageTransport.Smtp &amp;&amp; 
                sender.Metadata.IsSecure)
            {
                <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">var</span> messageSender = sender.Value;
                messageSender.Send(<span class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;Server is fine&quot;</span>);
                
                <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">break</span>;
            }
        }
    }
}
</pre>
                            </div>
                            <div class="style15" 
                                style="outline-width: 0; outline-style: none; outline-color: invert;">
                                <pre class="style1" style="outline: 0;">&lt;Export()&gt;
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span> HttpServerHealthMonitor
    &lt;ImportMany()&gt;
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Property</span> Senders() <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">As</span> Lazy(Of IMessageSender, IMessageSenderCapabilities)() 

    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span> SendNotification()
        <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">For</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Each</span> sender <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">In</span> Senders
            <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">If</span> sender.Metadata.Transport = MessageTransport.Smtp <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">AndAlso</span> sender.Metadata.IsSecure <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Then</span>
                <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Dim</span> messageSender = sender.Value
                messageSender.Send(<span class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;Server is fine&quot;</span>)

                <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Exit</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">For</span>
            <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">If</span>
        <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Next</span> sender
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span>
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span>
</pre>
                            </div>
                            <h3 class="style1" style="outline: 0;">
                                Using Weakly-typed metadata</h3>
                            To access metadata in a weakly-typed fashion, you import uisng the type
                            <b class="style1" style="outline: 0;"><span class="style1" style="outline: 0;">
                            System.Lazy&lt;T, TMetadata&gt;</span></b> passing IDictionary&lt;string,object&gt; for the 
                            metadata. You can then access the metadata through the Metadata property which 
                            will be a dictionary.<br />
                            <br />
                            <b class="style1" style="outline: 0;">Note:</b> In general we recommend the 
                            strongly-typed method for accessing metadata, however there are systems that 
                            need to access the metadata in a dynamic fashion, which this allows.<br />
                            <br />
                            <div class="style15" 
                                style="outline-width: 0; outline-style: none; outline-color: invert;">
                                <pre class="style1" style="outline: 0;">[Export]
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">class</span> HttpServerHealthMonitor
{
    [ImportMany]
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> Lazy&lt;IMessageSender, IDictionary&lt;<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">string</span>,<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">object</span>&gt;&gt;[] Senders { <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">get</span>; <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">set</span>; }

    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">void</span> SendNotification()
    {
        <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">foreach</span>(<span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">var</span> sender <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">in</span> Senders)
        {
            <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">if</span> (sender.Metadata.ContainsKey(<span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;Transport&quot;</span>) &amp;&amp; sender.Metadata[<span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;Transport&quot;</span>] == MessageTransport.Smtp &amp;&amp; 
                sender.Metadata.ContainsKey(<span class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;Issecure&quot;</span>) &amp;&amp; Metadata[<span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;IsSecure&quot;</span>] == <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">true</span>)
            {
                <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">var</span> messageSender = sender.Value;
                messageSender.Send(<span class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;Server is fine&quot;</span>);
                
                <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">break</span>;
            }
        }
    }
}
</pre>
                            </div>
                            <div class="style15" 
                                style="outline-width: 0; outline-style: none; outline-color: invert;}
</pre>
                            </div>
                            <div class="style15" 
                                style="outline-width: 0; outline-style: none; outline-color: invert;">
                                <pre class="style1" style="outline: 0;">&lt;Export()&gt;
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span> HttpServerHealthMonitor
    &lt;ImportMany()&gt;
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Property</span> Senders() <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">As</span> Lazy(Of IMessageSender, IDictionary(Of <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">String</span>, <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Object</span>))() 

    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span> SendNotification()
        <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">For</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Each</span> sender <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">In</span> Senders
            <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">If</span> sender.Metadata.ContainsKey(<span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;Transport&quot;</span>) <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">AndAlso</span> sender.Metadata(<span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;Transport&quot;</span>) = MessageTransport.Smtp </pre>
                                <pre class="style1" style="outline: 0;"> <span class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">AndAlso</span> sender.Metadata.ContainsKey(<span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;Issecure&quot;</span>) <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">AndAlso</span> sender.Metadata(<span 
                                    class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;IsSecure&quot;</span>) = <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">True</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Then</span>
                <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Dim</span> messageSender = sender.Value
                messageSender.Send(<span class="style17" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">&quot;Server is fine&quot;</span>)

                <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Exit</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">For</span>
            <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">If</span>
        <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">Next</span> sender
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Sub</span>
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Class</span>
</pre>
                            </div>
                            <h3 class="style1" style="outline: 0;">
                                Metadata filtering and DefaultValueAttributerts which contain the 
                            metadata properties defined in the view. You can specify on the metadata view 
                            that a property is not required, by using the <span class="style1" 
                                style="outline: 0;">System.ComponentModel.DefaultValueAttribute</span>. 
                            Below you can see where we have specified a default value of false on IsSecure. 
                            This means if a part exports IMessageSender, but does not supply IsSecure 
                            metadata, then it will still be matched.<br />
                            <br />
                            <div class="style15" 
                                style="outline-width: 0; outline-style: none; outline-color: invert;">
                                <pre class="style1" style="outline: 0;"><span class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">interface</span> IMessageSenderCapabilities
{
    MessageTransport Transport { <span class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">get</span>; }
    [DefaultValue(<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">false</span>)];
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">bool</span> IsSecure { <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">get</span>; }
}
</pre>
                            </div>
                            <div class="style15" 
                                style="outline-width: 0; outline-style: none; outline-color: invert;">
                                <pre class="style1" style="outline: 0;"><span class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Public</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Interface</span> IMessageSenderCapabilities
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">ReadOnly</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Property</span> Transport() <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">As</span> MessageTransport
    &lt;DefaultValue(<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">False</span>)&gt; 
    <span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">ReadOnly</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Property</span> IsSecure() <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">As</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Boolean</span>
<span class="style16" style="outline-width: 0; outline-style: none; outline-color: invert;">End</span> <span 
                                    class="style16" 
                                    style="outline-width: 0; outline-style: none; outline-color: invert;">Interface</span>
</pre>
                            </div>
                        </div>
                        <div class="style1" style="outline: 0;">
                        </div>
                    </div>
                    <p class="style1" style="outline: 0;">
                        Last edited <span class="style1" localtimeticks="1281399647" style="outline: 0;" 
                            title="9/08/2010 5:20:47 PM">Aug 9 2010 at 5:20 PM</span> by
                        <a id="wikiEditByLink" class="style1" 
                            href="http://www.codeplex.com/site/users/view/haveriss" style="outline: 0;">
                        haveriss</a>, version 13</p>
                    <div id="Comments" class="style1" style="outline: 0;">
<SCRIPT type="text/javascript">
    var commentCount = 10;
    function addComment() {
        var input = $('#Comment');
        input.val($.trim(input.val()));
        if (MvcValidation_Validate('AddComment')) {
            CodePlex.UpdateProgress.show();
            $.post('http://mef.codeplex.com/wikipage/comment', { Comment: input.val(), title: $('#WikiTitle').val() }, function(data, textStatus) {
                if (textStatus == 'success') {
                    if(commentCount++ == 0)
                        $('#wikiCommentsEmpty').empty();
                    $('#wikiComments').append(data);
                    input.val('');
                }
                CodePlex.UpdateProgress.hide();
            });
        }
    }
    function deleteComment(id) {
        if (confirm('Are you sure you want to delete this comment?')) {
            CodePlex.UpdateProgress.show();
            $.ajax({
                type: 'DELETE',
                url: 'http://mef.codeplex.com/wikipage/comment' + '/' + id,
                success: function() {
                    $('#comment' + id).empty();
                    CodePlex.UpdateProgress.hide();
                },
                error: function() { CodePlex.UpdateProgress.hide(); }
            });
        }
    }
</SCRIPT>
                        <div id="CommentsAnchor" class="style1" style="outline: 0;">
                            <h2 class="style1" style="outline: 0;">
                                Comments</h2>
                            <div id="wikiComments" class="style1" style="outline: 0;">
                                <div id="comment21300" class="style1" style="outline: 0;">
                                    <div class="style1" style="outline: 0;">
                                        <a class="style1" name="C21300" style="outline: 0;"></a><a class="style1" 
                                            href="http://www.codeplex.com/site/users/view/hype8912" style="outline: 0;">
                                        hype8912</a><span class="style1" localtimeticks="1319054856" 
                                            style="outline: 0;" title="19/10/2011 1:07:36 PM">Oct 19 2011 at 1:07 PM</span>
                                    </div>
                                    I&#39;d like to note that when looking up the Metadata key in the Export Metadata 
                                    Dictionary that the Key is case sensitive. It would be nice if it wasn&#39;t case 
                                    sensitive or gave an option to disable that but no where in the documentation 
                                    did I find that the key lookups were case sensitive.<p class="style1" 
                                        style="outline: 0;">
                                    </p>
                                </div>
                                <div id="comment16654" class="style1" style="outline: 0;">
                                    <div class="style1" style="outline: 0;">
                                        <a class="style1" name="C16654" style="outline: 0;"></a><a class="style1" 
                                            href="http://www.codeplex.com/site/users/view/kayub" style="outline: 0;">
                                        kayub</a><span class="style1" localtimeticks="1281592792" style="outline: 0;" 
                                            title="11/08/2010 10:59:52 PM">Aug 11 2010 at 10:59 PM</span>
                                    </div>
                                    OK, so it took me a few hours, but I figured it out. In your attribute class, it 
                                    has to call the base constructor passing in the type of your metadata attribute: 
                                    base(typeof(IMessageSenderCapa<WBR>bilities))<br />
                                    <br />
                                    Furthermore, you cannot access the Imported property inside of the importer 
                                    class&#39; constructor, it will throw a TargetInvocation exception.<br />
                                    <br />
                                    Hope this helps someone else.<p class="style1" style="outline: 0;">
                                    </p>
                                </div>
                                <div id="comment14134" class="style1" style="outline: 0;">
                                    <div class="style1" style="outline: 0;">
                                        <a class="style1" name="C14134" style="outline: 0;"></a><a class="style1" 
                                            href="http://www.codeplex.com/site/users/view/kfitzie" style="outline: 0;">
                                        kfitzie</a><span class="style1" localtimeticks="1257385509" style="outline: 0;" 
                                            title="4/11/2009 5:45:09 PM">Nov 4 2009 at 5:45 PM</span>
                                    </div>
                                    Why can&#39;t I have IEnumerable&lt;IMessageSender, IMessageSenderCapabilities&gt; ?<p 
                                        class="style1" style="outline: 0;">
                                    </p>
                                </div>
                                <div id="comment13665" class="style1" style="outline: 0;">
                                    <div class="style1" style="outline: 0;">
                                        <a class="style1" name="C13665" style="outline: 0;"></a><a class="style1" 
                                            href="http://www.codeplex.com/site/users/view/Eshva" style="outline: 0;">
                                        Eshva</a><span class="style1" localtimeticks="1251401971" style="outline: 0;" 
                                            title="27/08/2009 12:39:31 PM">Aug 27 2009 at 12:39 PM</span>
                                    </div>
                                    The same as previous: {{System.Lazy&lt;T, TMetadata&gt;}}<p class="style1" 
                                        style="outline: 0;">
                                    </p>
                                </div>
                                <div id="comment13664" class="style1" style="outline: 0;">
                                    <div class="style1" style="outline: 0;">
                                        <a class="style1" name="C13664" style="outline: 0;"></a><a class="style1" 
                                            href="http://www.codeplex.com/site/users/view/Eshva" style="outline: 0;">
                                        Eshva</a><span class="style1" localtimeticks="1251401825" style="outline: 0;" 
                                            title="27/08/2009 12:37:05 PM">Aug 27 2009 at 12:37 PM</span>
                                    </div>
                                    Are you sure you need so many different brackets in: {[{System.Lazy&lt;T, 
                                    TMetadata&gt;}}] :)<br />
                                    I guess you need just [System.Lazy&lt;T, TMetadata&gt;].<p class="style1" 
                                        style="outline: 0;">
                                    </p>
                                </div>
                                <div id="comment13499" class="style1" style="outline: 0;">
                                    <div class="style1" style="outline: 0;">
                                        <a class="style1" name="C13499" style="outline: 0;"></a><a class="style1" 
                                            href="http://www.codeplex.com/site/users/view/nblumhardt" style="outline: 0;">
                                        nblumhardt</a><span class="style1" localtimeticks="1248992961" 
                                            style="outline: 0;" title="30/07/2009 3:29:21 PM">Jul 30 2009 at 3:29 PM</span>
                                    </div>
                                    Thanks for the correction.<p class="style1" style="outline: 0;">
                                    </p>
                                </div>
                                <div id="comment12877" class="style1" style="outline: 0;">
                                    <div class="style1" style="outline: 0;">
                                        <a class="style1" name="C12877" style="outline: 0;"></a><a class="style1" 
                                            href="http://www.codeplex.com/site/users/view/danielearwicker" 
                                            style="outline: 0;">danielearwicker</a><span class="style1" 
                                            localtimeticks="1242274529" style="outline: 0;" title="13/05/2009 9:15:29 PM">May 
                                        13 2009 at 9:15 PM</span>
                                    </div>
                                    In preview 5 I&#39;m trying ExportCollection&lt;MyDelegate&gt; and my exports elsewhere 
                                    are static functions that export MyDelegate. I get an &quot;internal error&quot; inside 
                                    MEF, in ReflectionProperty.GetValue, Assumes.NotNull(this._getMetho<WBR>d); If I 
                                    use IEnumerable&lt;MyDelegate&gt; it works fine, but then I can&#39;t get the metadata - 
                                    at least, not the expected way. See http://mef.codeplex.com/Thread<WBR>/View.aspx?ThreadId=56225 
                                    for workaround.<p class="style1" style="outline: 0;">
                                    </p>
                                </div>
                                <div id="comment12849" class="style1" style="outline: 0;">
                                    <div class="style1" style="outline: 0;">
                                        <a class="style1" name="C12849" style="outline: 0;"></a><a class="style1" 
                                            href="http://www.codeplex.com/site/users/view/joshtwist" style="outline: 0;">
                                        joshtwist</a><span class="style1" localtimeticks="1241824374" 
                                            style="outline: 0;" title="8/05/2009 4:12:54 PM">May 8 2009 at 4:12 PM</span>
                                    </div>
                                    Can we get this updated - I just spent a while looking for 
                                    ImportRequiredMetadata (which has obviously been removed). Replacing this with 
                                    an example showing the best way to achieve the same would be good.<p 
                                        class="style1" style="outline: 0;">
                                    </p>
                                </div>
                                <div id="comment12758" class="style1" style="outline: 0;">
                                    <div class="style1" style="outline: 0;">
                                        <a class="style1" name="C12758" style="outline: 0;"></a><a class="style1" 
                                            href="http://www.codeplex.com/site/users/view/NathanRidley" style="outline: 0;">
                                        NathanRidley</a><span class="style1" localtimeticks="1240946153" 
                                            style="outline: 0;" title="28/04/2009 12:15:53 PM">Apr 28 2009 at 12:15 PM</span>
                                    </div>
                                    ImportRequiredMetadata appears to have been completely removed in preview 5. How 
                                    do we statically qualify the import now?<br />
                                    <p class="style1" style="outline: 0;">
                                    </p>
                                </div>
                                <div id="comment12603" class="style1" style="outline: 0;">
                                    <div class="style1" style="outline: 0;">
                                        <a class="style1" name="C12603" style="outline: 0;"></a><a class="style1" 
                                            href="http://www.codeplex.com/site/users/view/rodrigoCatalano" 
                                            style="outline: 0;">rodrigoCatalano</a><span class="style1" 
                                            localtimeticks="1238563036" style="outline: 0;" title="31/03/2009 10:17:16 PM">Mar 
                                        31 2009 at 10:17 PM</span>
                                    </div>
                                    With respect to the importation dynamic I believe that should not be the 
                                    responsibility of the consumer to search in all and than match one or n, the 
                                    catalog should be able to make one prefilter.<p class="style1" 
                                        style="outline: 0;">
                                    </p>
                                </div>
                            </div>
                            <div id="addComment" class="style1" style="outline: 0;">
                                <a id="SignInToAddCommentLink" class="style1" 
                                    href="https://www.codeplex.com/site/login?RedirectUrl=http%3a%2f%2fmef.codeplex.com%2fwikipage%3ftitle%3dExports%2520and%2520Metadata%26FocusElement%3dComment" 
                                    style="outline: 0;">Sign in to add a comment</a></div>
                        </div>
                    </div>
                </div>
<SCRIPT type="text/javascript">

        $(document).ready(function () {
            $('#deleteWikiHyperLink').click(function () {
                OpenDialog('#DeleteWikiPagePanel', true, '30em');
            });
            $('#DeleteButton').click(function () {
                OpenDialog('#DeleteWikiPagePanel', false);
                CodePlex.UpdateProgress.show();
                $.ajax({
                    type: 'DELETE',
                    url: 'http://mef.codeplex.com/wikipage?title=Exports%20and%20Metadata',
                    data: {title: $('#WikiTitle').val()},
                    success: function (data) {
                        CodePlex.UpdateProgress.hide();
                        window.location = data;
                    },
                    error: function (data) {
                        CodePlex.UpdateProgress.hide();
                    }
                });
            });
            $('#CancelButton').click(function () {
                OpenDialog('#DeleteWikiPagePanel', false);
            });
            
            
        });
    </SCRIPT>
            </div>
            <div id="right_sidebar" class="style1" style="outline: 0;">
                <input id="wiki_search" class="EmptyTextBox" maxlength="500" type="text" /><a 
                    id="SearchButton" class="style1" href="#" style="outline: 0;"></a>
<SCRIPT type="text/javascript">

    $(function () {

        $('#wiki_search').keypress(function (e) {
            if (e.keyCode == 13) {
                wikiSearch();
                return false;
            }
        });

        $('#SearchButton').click(function () {
            wikiSearch();
            return false;
        });

        $('#wiki_search').promptBox('Search Wiki & Documentation');

    });
    function setWikiCommentTextBoxFocus() {
        $('#Comment').focus();
        return false;
    }

    function wikiSearch() {
        var $textbox = $('#wiki_search');
        if($textbox.attr('dirty') != 'true')
            return;
        var searchText = encodeURIComponent(jQuery.trim($textbox.val()));
        if(searchText != null & searchText.length > 0)
            window.location.href = 'http://mef.codeplex.com/wiki/search?tab=Documentation&SearchText=' + searchText;
    }

</SCRIPT>

<SCRIPT type="text/javascript">
    var requirementsActionUri = 'http://mef.codeplex.com/documentation/requirements';
    var requirementsToDelete = [];
    
    

    function LoadRequirements(json) {
        var html = '';
        if (json === undefined || !json.length) {
            html = '<div id="NoRequirementsDefined">There are currently no defined requirements.</div>';
        } else {
            for (var i = 0; i < json.length; i++) {
               var requirementType = json[i];
                html += '<h3>' + requirementType.Caption + '</h3><ul>';
                for (var j = 0; j < requirementType.Requirements.length; j++) {
                    var requirement = requirementType.Requirements[j];
                    html += '<li>' + requirement.DisplayTitle + '</li>';
                }
                html += '</ul>';
            }
        }
        
        $('#RequirementsBody').html(html);
    }

    $(document).ready(function() {
        LoadRequirements();
    });
</SCRIPT>
                <div id="RequirementsContainer" class="style1" style="outline: 0;">
                    <h2 class="style1" style="outline: 0;">
                        System Requirements
                    </h2>
                    <div class="style1" style="outline: 0;">
                    </div>
                    <div id="RequirementsBody" class="style1" style="outline: 0;">
                        <div id="NoRequirementsDefined" class="style1" style="outline: 0;">
                            There are currently no defined requirements.</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="style1" style="outline: 0;">
        </div>
        <!--keep footer down-->
        <div id="footer" class="style1" style="outline: 0;">
            <div class="style1" style="outline: 0;">
                <hr />
                <ul class="style1" style="outline: 0;">
                    <li class="style1" style="outline: 0;">© 2006-2012 Microsoft</li>
                    <li class="style1" style="outline: 0;"><a class="style1" 
                            href="http://www.codeplex.com/site/help" style="outline: 0;">Get Help</a></li>
                    <li class="style1" style="outline: 0;"><a class="style1" 
                            href="http://mef.codeplex.com/site/legal/privacy" style="outline: 0;">
                        Privacy Statement</a></li>
                    <li class="style1" style="outline: 0;"><a class="style1" 
                            href="http://www.codeplex.com/site/legal/terms" style="outline: 0;">Terms of 
                        Use</a></li>
                    <li class="style1" style="outline: 0;"><a class="style1" 
                            href="http://www.codeplex.com/site/legal/conduct" style="outline: 0;">Code 
                        of Conduct</a></li>
                    <li class="style1" style="outline: 0;"><a class="style1" 
                            href="http://www.lakequincy.com" style="outline: 0;" target="_blank">
                        Advertise With Us</a></li>
                    <li class="style1" style="outline: 0;">Version 8.9.2012.19252</li>
                </ul>
            </div>
        </div>
    </div>
    </form>
    <div aria-labelledby="ui-dialog-title-UpdateProgressPanel" class="style18" 
        role="dialog" style="outline: 0 none invert;" tabindex="-1">
        <div class="style1" style="outline: 0;">
            <span id="ui-dialog-title-UpdateProgressPanel" class="style1" 
                style="outline: 0;"></span><a class="style1" href="#" role="button" 
                style="outline: 0;"><span class="style1" style="outline: 0;">close</span></a></div>
        <div id="UpdateProgressPanel" class="style1" style="outline: 0;">
            <div class="style1" style="outline: 0;">
                <h2 class="style1" style="outline: 0;">
                    <span id="UpdateProgressText" class="style1" style="outline: 0;">Working...</span><span 
                        id="animatedLoadingIconContainer" class="style1" style="outline: 0;"><img 
                        id="animatedLoadingIcon" class="style1" 
                        src="http://i3.codeplex.com/Images/v19252/loading_animation.gif" 
                        style="outline-width: 0; outline-style: none; outline-color: invert;" /></span></h2>
            </div>
        </div>
        <div class="style1" style="outline: 0;">
        </div>
        <div class="style1" style="outline: 0;">
        </div>
        <div class="style1" style="outline: 0;">
        </div>
        <div class="style1" style="outline: 0;">
        </div>
        <div class="style19" 
            style="outline-width: 0; outline-style: none; outline-color: invert;">
        </div>
        <div class="style20" 
            style="outline-width: 0; outline-style: none; outline-color: invert;">
        </div>
        <div class="style21" 
            style="outline-width: 0; outline-style: none; outline-color: invert;">
        </div>
        <div class="style22" 
            style="outline-width: 0; outline-style: none; outline-color: invert;">
        </div>
    </div>
<SCRIPT src="https://siterecruit.comscore.com/sr/codeplex/broker-config.js?1344899041079"></SCRIPT>

</body>
</html>
