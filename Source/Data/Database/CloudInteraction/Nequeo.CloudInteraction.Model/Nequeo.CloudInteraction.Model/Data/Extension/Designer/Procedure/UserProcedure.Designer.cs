// Warning 169 (Disables the 'Never used' warning)
#pragma warning disable 169
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nequeo.DataAccess.CloudInteraction.Data.Extension
{
    using System;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Data.Linq;
    using System.Data.Linq.SqlClient;
    using System.Data.Linq.Mapping;
    using Nequeo.Data.DataType;
    using Nequeo.Data;
    using Nequeo.Data.Linq;
    using Nequeo.Data.Control;
    using Nequeo.Data.Custom;
    using Nequeo.Data.LinqToSql;
    using Nequeo.Data.DataSet;
    using Nequeo.Data.Edm;
    using Nequeo.ComponentModel;
    
    
    /// <summary>
    /// The user object class.
    /// </summary>
    public partial class User
    {
        
        #region Public Function Methods
        /// <summary>
        /// Execute the getactiveloggedonusercontacts routine.
        /// </summary>
        /// <param name="lastActiveDate">Initial value of LastActiveDate.</param>
        /// <param name="userID">Initial value of UserID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetActiveLoggedOnUserContacts", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetActiveLoggedOnUserContactsResult> GetActiveLoggedOnUserContacts([FunctionParameterAttribute("@LastActiveDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> lastActiveDate, [FunctionParameterAttribute("@UserID", "bigint", 8, ParameterDirection.Input, true)] System.Nullable<System.Int64> userID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lastActiveDate, userID);
            return ((List<Data.Extended.GetActiveLoggedOnUserContactsResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getactiveloggedonusers routine.
        /// </summary>
        /// <param name="lastActiveDate">Initial value of LastActiveDate.</param>
        /// <param name="userID">Initial value of UserID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetActiveLoggedOnUsers", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetActiveLoggedOnUsersResult> GetActiveLoggedOnUsers([FunctionParameterAttribute("@LastActiveDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> lastActiveDate, [FunctionParameterAttribute("@UserID", "bigint", 8, ParameterDirection.Input, true)] System.Nullable<System.Int64> userID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lastActiveDate, userID);
            return ((List<Data.Extended.GetActiveLoggedOnUsersResult>)(result.ReturnValue));
        }
        #endregion
    }
}
namespace Nequeo.DataAccess.CloudInteraction.Data.Extended
{
    using System;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Data.Linq;
    using System.Data.Linq.SqlClient;
    using System.Data.Linq.Mapping;
    using Nequeo.Data.DataType;
    using Nequeo.Data;
    using Nequeo.Data.Linq;
    using Nequeo.Data.Control;
    using Nequeo.Data.Custom;
    using Nequeo.Data.LinqToSql;
    using Nequeo.Data.DataSet;
    using Nequeo.Data.Edm;
    using Nequeo.ComponentModel;
    
    
    #region GetActiveLoggedOnUserContactsResult Data Entity Type
    /// <summary>
    /// The getactiveloggedonusercontactsresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetActiveLoggedOnUserContactsResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetActiveLoggedOnUserContactsResult : DataBase
    {
        
        private long _UserID;
        
        private string _Username;
        
        private string _Password;
        
        private long _ApplicationLoginUserID;
        
        private bool _UserSuspended;
        
        private bool _LoggedIn;
        
        private System.DateTime _LastLoginDate;
        
        private string _Email;
        
        private string _PasswordQuestion;
        
        private string _PasswordAnswer;
        
        private string _ApplicationName;
        
        private int _FailedPasswordAttemptCount;
        
        private System.DateTime _FailedPasswordAttemptWindowStart;
        
        private int _FailedPasswordAnswerAttemptCount;
        
        private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        
        private System.DateTime _UserSuspendedDate;
        
        private System.DateTime _LastPasswordChangedDate;
        
        private System.DateTime _LastActivityDate;
        
        private System.DateTime _CreationDate;
        
        private bool _IsApproved;
        
        private string _Comments;
        
        private System.Nullable<System.Int64> _RoleID;
        
        private System.Nullable<System.Int64> _ProfileID;
        
        private long _CodeID;
        
        private string _Name;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetActiveLoggedOnUserContactsResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the userid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the userid property for the object.")]
        [DataMemberAttribute(Name = "UserID")]
        [XmlElementAttribute(ElementName = "UserID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public long UserID
        {
            get
            {
                return this._UserID;
            }
            set
            {
                if ((this._UserID != value))
                {
                    this._UserID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the username property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the username property for the object.")]
        [DataMemberAttribute(Name = "Username")]
        [XmlElementAttribute(ElementName = "Username", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string Username
        {
            get
            {
                return this._Username;
            }
            set
            {
                if ((this._Username != value))
                {
                    this._Username = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the password property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the password property for the object.")]
        [DataMemberAttribute(Name = "Password")]
        [XmlElementAttribute(ElementName = "Password", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string Password
        {
            get
            {
                return this._Password;
            }
            set
            {
                if ((this._Password != value))
                {
                    this._Password = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationloginuserid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the applicationloginuserid property for the object.")]
        [DataMemberAttribute(Name = "ApplicationLoginUserID")]
        [XmlElementAttribute(ElementName = "ApplicationLoginUserID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public long ApplicationLoginUserID
        {
            get
            {
                return this._ApplicationLoginUserID;
            }
            set
            {
                if ((this._ApplicationLoginUserID != value))
                {
                    this._ApplicationLoginUserID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the usersuspended property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the usersuspended property for the object.")]
        [DataMemberAttribute(Name = "UserSuspended")]
        [XmlElementAttribute(ElementName = "UserSuspended", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public bool UserSuspended
        {
            get
            {
                return this._UserSuspended;
            }
            set
            {
                if ((this._UserSuspended != value))
                {
                    this._UserSuspended = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the loggedin property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the loggedin property for the object.")]
        [DataMemberAttribute(Name = "LoggedIn")]
        [XmlElementAttribute(ElementName = "LoggedIn", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public bool LoggedIn
        {
            get
            {
                return this._LoggedIn;
            }
            set
            {
                if ((this._LoggedIn != value))
                {
                    this._LoggedIn = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the lastlogindate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the lastlogindate property for the object.")]
        [DataMemberAttribute(Name = "LastLoginDate")]
        [XmlElementAttribute(ElementName = "LastLoginDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime LastLoginDate
        {
            get
            {
                return this._LastLoginDate;
            }
            set
            {
                if ((this._LastLoginDate != value))
                {
                    this._LastLoginDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the email property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the email property for the object.")]
        [DataMemberAttribute(Name = "Email")]
        [XmlElementAttribute(ElementName = "Email", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if ((this._Email != value))
                {
                    this._Email = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the passwordquestion property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the passwordquestion property for the object.")]
        [DataMemberAttribute(Name = "PasswordQuestion")]
        [XmlElementAttribute(ElementName = "PasswordQuestion", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PasswordQuestion
        {
            get
            {
                return this._PasswordQuestion;
            }
            set
            {
                if ((this._PasswordQuestion != value))
                {
                    this._PasswordQuestion = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the passwordanswer property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the passwordanswer property for the object.")]
        [DataMemberAttribute(Name = "PasswordAnswer")]
        [XmlElementAttribute(ElementName = "PasswordAnswer", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PasswordAnswer
        {
            get
            {
                return this._PasswordAnswer;
            }
            set
            {
                if ((this._PasswordAnswer != value))
                {
                    this._PasswordAnswer = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the applicationname property for the object.")]
        [DataMemberAttribute(Name = "ApplicationName")]
        [XmlElementAttribute(ElementName = "ApplicationName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string ApplicationName
        {
            get
            {
                return this._ApplicationName;
            }
            set
            {
                if ((this._ApplicationName != value))
                {
                    this._ApplicationName = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the failedpasswordattemptcount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the failedpasswordattemptcount property for the object.")]
        [DataMemberAttribute(Name = "FailedPasswordAttemptCount")]
        [XmlElementAttribute(ElementName = "FailedPasswordAttemptCount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int FailedPasswordAttemptCount
        {
            get
            {
                return this._FailedPasswordAttemptCount;
            }
            set
            {
                if ((this._FailedPasswordAttemptCount != value))
                {
                    this._FailedPasswordAttemptCount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the failedpasswordattemptwindowstart property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the failedpasswordattemptwindowstart property for the object.")]
        [DataMemberAttribute(Name = "FailedPasswordAttemptWindowStart")]
        [XmlElementAttribute(ElementName = "FailedPasswordAttemptWindowStart", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return this._FailedPasswordAttemptWindowStart;
            }
            set
            {
                if ((this._FailedPasswordAttemptWindowStart != value))
                {
                    this._FailedPasswordAttemptWindowStart = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the failedpasswordanswerattemptcount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the failedpasswordanswerattemptcount property for the object.")]
        [DataMemberAttribute(Name = "FailedPasswordAnswerAttemptCount")]
        [XmlElementAttribute(ElementName = "FailedPasswordAnswerAttemptCount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int FailedPasswordAnswerAttemptCount
        {
            get
            {
                return this._FailedPasswordAnswerAttemptCount;
            }
            set
            {
                if ((this._FailedPasswordAnswerAttemptCount != value))
                {
                    this._FailedPasswordAnswerAttemptCount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the failedpasswordanswerattemptwindowstart property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the failedpasswordanswerattemptwindowstart property for the object.")]
        [DataMemberAttribute(Name = "FailedPasswordAnswerAttemptWindowStart")]
        [XmlElementAttribute(ElementName = "FailedPasswordAnswerAttemptWindowStart", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return this._FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                if ((this._FailedPasswordAnswerAttemptWindowStart != value))
                {
                    this._FailedPasswordAnswerAttemptWindowStart = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the usersuspendeddate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the usersuspendeddate property for the object.")]
        [DataMemberAttribute(Name = "UserSuspendedDate")]
        [XmlElementAttribute(ElementName = "UserSuspendedDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime UserSuspendedDate
        {
            get
            {
                return this._UserSuspendedDate;
            }
            set
            {
                if ((this._UserSuspendedDate != value))
                {
                    this._UserSuspendedDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the lastpasswordchangeddate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the lastpasswordchangeddate property for the object.")]
        [DataMemberAttribute(Name = "LastPasswordChangedDate")]
        [XmlElementAttribute(ElementName = "LastPasswordChangedDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime LastPasswordChangedDate
        {
            get
            {
                return this._LastPasswordChangedDate;
            }
            set
            {
                if ((this._LastPasswordChangedDate != value))
                {
                    this._LastPasswordChangedDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the lastactivitydate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the lastactivitydate property for the object.")]
        [DataMemberAttribute(Name = "LastActivityDate")]
        [XmlElementAttribute(ElementName = "LastActivityDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime LastActivityDate
        {
            get
            {
                return this._LastActivityDate;
            }
            set
            {
                if ((this._LastActivityDate != value))
                {
                    this._LastActivityDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the creationdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the creationdate property for the object.")]
        [DataMemberAttribute(Name = "CreationDate")]
        [XmlElementAttribute(ElementName = "CreationDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime CreationDate
        {
            get
            {
                return this._CreationDate;
            }
            set
            {
                if ((this._CreationDate != value))
                {
                    this._CreationDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the isapproved property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the isapproved property for the object.")]
        [DataMemberAttribute(Name = "IsApproved")]
        [XmlElementAttribute(ElementName = "IsApproved", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public bool IsApproved
        {
            get
            {
                return this._IsApproved;
            }
            set
            {
                if ((this._IsApproved != value))
                {
                    this._IsApproved = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the roleid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the roleid property for the object.")]
        [DataMemberAttribute(Name = "RoleID")]
        [XmlElementAttribute(ElementName = "RoleID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int64> RoleID
        {
            get
            {
                return this._RoleID;
            }
            set
            {
                if ((this._RoleID != value))
                {
                    this._RoleID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the profileid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the profileid property for the object.")]
        [DataMemberAttribute(Name = "ProfileID")]
        [XmlElementAttribute(ElementName = "ProfileID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int64> ProfileID
        {
            get
            {
                return this._ProfileID;
            }
            set
            {
                if ((this._ProfileID != value))
                {
                    this._ProfileID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the codeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the codeid property for the object.")]
        [DataMemberAttribute(Name = "CodeID")]
        [XmlElementAttribute(ElementName = "CodeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public long CodeID
        {
            get
            {
                return this._CodeID;
            }
            set
            {
                if ((this._CodeID != value))
                {
                    this._CodeID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the name property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the name property for the object.")]
        [DataMemberAttribute(Name = "Name")]
        [XmlElementAttribute(ElementName = "Name", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this._Name = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getactiveloggedonusercontactsresult data entity.
        /// </summary>
        /// <param name="userID">Initial value of UserID.</param>
        /// <param name="username">Initial value of Username.</param>
        /// <param name="password">Initial value of Password.</param>
        /// <param name="applicationLoginUserID">Initial value of ApplicationLoginUserID.</param>
        /// <param name="userSuspended">Initial value of UserSuspended.</param>
        /// <param name="loggedIn">Initial value of LoggedIn.</param>
        /// <param name="lastLoginDate">Initial value of LastLoginDate.</param>
        /// <param name="email">Initial value of Email.</param>
        /// <param name="applicationName">Initial value of ApplicationName.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of FailedPasswordAttemptCount.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of FailedPasswordAttemptWindowStart.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of FailedPasswordAnswerAttemptCount.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of FailedPasswordAnswerAttemptWindowStart.</param>
        /// <param name="userSuspendedDate">Initial value of UserSuspendedDate.</param>
        /// <param name="lastPasswordChangedDate">Initial value of LastPasswordChangedDate.</param>
        /// <param name="lastActivityDate">Initial value of LastActivityDate.</param>
        /// <param name="creationDate">Initial value of CreationDate.</param>
        /// <param name="isApproved">Initial value of IsApproved.</param>
        /// <param name="codeID">Initial value of CodeID.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <returns>The Data.Extended.GetActiveLoggedOnUserContactsResult entity.</returns>
        public static Data.Extended.GetActiveLoggedOnUserContactsResult CreateGetActiveLoggedOnUserContactsResult(
                    long userID, 
                    string username, 
                    string password, 
                    long applicationLoginUserID, 
                    bool userSuspended, 
                    bool loggedIn, 
                    System.DateTime lastLoginDate, 
                    string email, 
                    string applicationName, 
                    int failedPasswordAttemptCount, 
                    System.DateTime failedPasswordAttemptWindowStart, 
                    int failedPasswordAnswerAttemptCount, 
                    System.DateTime failedPasswordAnswerAttemptWindowStart, 
                    System.DateTime userSuspendedDate, 
                    System.DateTime lastPasswordChangedDate, 
                    System.DateTime lastActivityDate, 
                    System.DateTime creationDate, 
                    bool isApproved, 
                    long codeID, 
                    string name)
        {
            Data.Extended.GetActiveLoggedOnUserContactsResult getActiveLoggedOnUserContactsResult = new Data.Extended.GetActiveLoggedOnUserContactsResult();
            getActiveLoggedOnUserContactsResult.UserID = userID;
            getActiveLoggedOnUserContactsResult.Username = username;
            getActiveLoggedOnUserContactsResult.Password = password;
            getActiveLoggedOnUserContactsResult.ApplicationLoginUserID = applicationLoginUserID;
            getActiveLoggedOnUserContactsResult.UserSuspended = userSuspended;
            getActiveLoggedOnUserContactsResult.LoggedIn = loggedIn;
            getActiveLoggedOnUserContactsResult.LastLoginDate = lastLoginDate;
            getActiveLoggedOnUserContactsResult.Email = email;
            getActiveLoggedOnUserContactsResult.ApplicationName = applicationName;
            getActiveLoggedOnUserContactsResult.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            getActiveLoggedOnUserContactsResult.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            getActiveLoggedOnUserContactsResult.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            getActiveLoggedOnUserContactsResult.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            getActiveLoggedOnUserContactsResult.UserSuspendedDate = userSuspendedDate;
            getActiveLoggedOnUserContactsResult.LastPasswordChangedDate = lastPasswordChangedDate;
            getActiveLoggedOnUserContactsResult.LastActivityDate = lastActivityDate;
            getActiveLoggedOnUserContactsResult.CreationDate = creationDate;
            getActiveLoggedOnUserContactsResult.IsApproved = isApproved;
            getActiveLoggedOnUserContactsResult.CodeID = codeID;
            getActiveLoggedOnUserContactsResult.Name = name;
            return getActiveLoggedOnUserContactsResult;
        }
    }
    #endregion
    
    #region GetActiveLoggedOnUsersResult Data Entity Type
    /// <summary>
    /// The getactiveloggedonusersresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetActiveLoggedOnUsersResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetActiveLoggedOnUsersResult : DataBase
    {
        
        private long _UserID;
        
        private string _Username;
        
        private string _Password;
        
        private long _ApplicationLoginUserID;
        
        private bool _UserSuspended;
        
        private bool _LoggedIn;
        
        private System.DateTime _LastLoginDate;
        
        private string _Email;
        
        private string _PasswordQuestion;
        
        private string _PasswordAnswer;
        
        private string _ApplicationName;
        
        private int _FailedPasswordAttemptCount;
        
        private System.DateTime _FailedPasswordAttemptWindowStart;
        
        private int _FailedPasswordAnswerAttemptCount;
        
        private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        
        private System.DateTime _UserSuspendedDate;
        
        private System.DateTime _LastPasswordChangedDate;
        
        private System.DateTime _LastActivityDate;
        
        private System.DateTime _CreationDate;
        
        private bool _IsApproved;
        
        private string _Comments;
        
        private System.Nullable<System.Int64> _RoleID;
        
        private System.Nullable<System.Int64> _ProfileID;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetActiveLoggedOnUsersResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the userid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the userid property for the object.")]
        [DataMemberAttribute(Name = "UserID")]
        [XmlElementAttribute(ElementName = "UserID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public long UserID
        {
            get
            {
                return this._UserID;
            }
            set
            {
                if ((this._UserID != value))
                {
                    this._UserID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the username property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the username property for the object.")]
        [DataMemberAttribute(Name = "Username")]
        [XmlElementAttribute(ElementName = "Username", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string Username
        {
            get
            {
                return this._Username;
            }
            set
            {
                if ((this._Username != value))
                {
                    this._Username = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the password property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the password property for the object.")]
        [DataMemberAttribute(Name = "Password")]
        [XmlElementAttribute(ElementName = "Password", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string Password
        {
            get
            {
                return this._Password;
            }
            set
            {
                if ((this._Password != value))
                {
                    this._Password = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationloginuserid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the applicationloginuserid property for the object.")]
        [DataMemberAttribute(Name = "ApplicationLoginUserID")]
        [XmlElementAttribute(ElementName = "ApplicationLoginUserID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public long ApplicationLoginUserID
        {
            get
            {
                return this._ApplicationLoginUserID;
            }
            set
            {
                if ((this._ApplicationLoginUserID != value))
                {
                    this._ApplicationLoginUserID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the usersuspended property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the usersuspended property for the object.")]
        [DataMemberAttribute(Name = "UserSuspended")]
        [XmlElementAttribute(ElementName = "UserSuspended", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public bool UserSuspended
        {
            get
            {
                return this._UserSuspended;
            }
            set
            {
                if ((this._UserSuspended != value))
                {
                    this._UserSuspended = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the loggedin property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the loggedin property for the object.")]
        [DataMemberAttribute(Name = "LoggedIn")]
        [XmlElementAttribute(ElementName = "LoggedIn", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public bool LoggedIn
        {
            get
            {
                return this._LoggedIn;
            }
            set
            {
                if ((this._LoggedIn != value))
                {
                    this._LoggedIn = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the lastlogindate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the lastlogindate property for the object.")]
        [DataMemberAttribute(Name = "LastLoginDate")]
        [XmlElementAttribute(ElementName = "LastLoginDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime LastLoginDate
        {
            get
            {
                return this._LastLoginDate;
            }
            set
            {
                if ((this._LastLoginDate != value))
                {
                    this._LastLoginDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the email property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the email property for the object.")]
        [DataMemberAttribute(Name = "Email")]
        [XmlElementAttribute(ElementName = "Email", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if ((this._Email != value))
                {
                    this._Email = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the passwordquestion property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the passwordquestion property for the object.")]
        [DataMemberAttribute(Name = "PasswordQuestion")]
        [XmlElementAttribute(ElementName = "PasswordQuestion", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PasswordQuestion
        {
            get
            {
                return this._PasswordQuestion;
            }
            set
            {
                if ((this._PasswordQuestion != value))
                {
                    this._PasswordQuestion = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the passwordanswer property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the passwordanswer property for the object.")]
        [DataMemberAttribute(Name = "PasswordAnswer")]
        [XmlElementAttribute(ElementName = "PasswordAnswer", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PasswordAnswer
        {
            get
            {
                return this._PasswordAnswer;
            }
            set
            {
                if ((this._PasswordAnswer != value))
                {
                    this._PasswordAnswer = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the applicationname property for the object.")]
        [DataMemberAttribute(Name = "ApplicationName")]
        [XmlElementAttribute(ElementName = "ApplicationName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string ApplicationName
        {
            get
            {
                return this._ApplicationName;
            }
            set
            {
                if ((this._ApplicationName != value))
                {
                    this._ApplicationName = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the failedpasswordattemptcount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the failedpasswordattemptcount property for the object.")]
        [DataMemberAttribute(Name = "FailedPasswordAttemptCount")]
        [XmlElementAttribute(ElementName = "FailedPasswordAttemptCount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int FailedPasswordAttemptCount
        {
            get
            {
                return this._FailedPasswordAttemptCount;
            }
            set
            {
                if ((this._FailedPasswordAttemptCount != value))
                {
                    this._FailedPasswordAttemptCount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the failedpasswordattemptwindowstart property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the failedpasswordattemptwindowstart property for the object.")]
        [DataMemberAttribute(Name = "FailedPasswordAttemptWindowStart")]
        [XmlElementAttribute(ElementName = "FailedPasswordAttemptWindowStart", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return this._FailedPasswordAttemptWindowStart;
            }
            set
            {
                if ((this._FailedPasswordAttemptWindowStart != value))
                {
                    this._FailedPasswordAttemptWindowStart = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the failedpasswordanswerattemptcount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the failedpasswordanswerattemptcount property for the object.")]
        [DataMemberAttribute(Name = "FailedPasswordAnswerAttemptCount")]
        [XmlElementAttribute(ElementName = "FailedPasswordAnswerAttemptCount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int FailedPasswordAnswerAttemptCount
        {
            get
            {
                return this._FailedPasswordAnswerAttemptCount;
            }
            set
            {
                if ((this._FailedPasswordAnswerAttemptCount != value))
                {
                    this._FailedPasswordAnswerAttemptCount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the failedpasswordanswerattemptwindowstart property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the failedpasswordanswerattemptwindowstart property for the object.")]
        [DataMemberAttribute(Name = "FailedPasswordAnswerAttemptWindowStart")]
        [XmlElementAttribute(ElementName = "FailedPasswordAnswerAttemptWindowStart", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return this._FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                if ((this._FailedPasswordAnswerAttemptWindowStart != value))
                {
                    this._FailedPasswordAnswerAttemptWindowStart = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the usersuspendeddate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the usersuspendeddate property for the object.")]
        [DataMemberAttribute(Name = "UserSuspendedDate")]
        [XmlElementAttribute(ElementName = "UserSuspendedDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime UserSuspendedDate
        {
            get
            {
                return this._UserSuspendedDate;
            }
            set
            {
                if ((this._UserSuspendedDate != value))
                {
                    this._UserSuspendedDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the lastpasswordchangeddate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the lastpasswordchangeddate property for the object.")]
        [DataMemberAttribute(Name = "LastPasswordChangedDate")]
        [XmlElementAttribute(ElementName = "LastPasswordChangedDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime LastPasswordChangedDate
        {
            get
            {
                return this._LastPasswordChangedDate;
            }
            set
            {
                if ((this._LastPasswordChangedDate != value))
                {
                    this._LastPasswordChangedDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the lastactivitydate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the lastactivitydate property for the object.")]
        [DataMemberAttribute(Name = "LastActivityDate")]
        [XmlElementAttribute(ElementName = "LastActivityDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime LastActivityDate
        {
            get
            {
                return this._LastActivityDate;
            }
            set
            {
                if ((this._LastActivityDate != value))
                {
                    this._LastActivityDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the creationdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the creationdate property for the object.")]
        [DataMemberAttribute(Name = "CreationDate")]
        [XmlElementAttribute(ElementName = "CreationDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime CreationDate
        {
            get
            {
                return this._CreationDate;
            }
            set
            {
                if ((this._CreationDate != value))
                {
                    this._CreationDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the isapproved property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the isapproved property for the object.")]
        [DataMemberAttribute(Name = "IsApproved")]
        [XmlElementAttribute(ElementName = "IsApproved", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public bool IsApproved
        {
            get
            {
                return this._IsApproved;
            }
            set
            {
                if ((this._IsApproved != value))
                {
                    this._IsApproved = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the roleid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the roleid property for the object.")]
        [DataMemberAttribute(Name = "RoleID")]
        [XmlElementAttribute(ElementName = "RoleID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int64> RoleID
        {
            get
            {
                return this._RoleID;
            }
            set
            {
                if ((this._RoleID != value))
                {
                    this._RoleID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the profileid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the profileid property for the object.")]
        [DataMemberAttribute(Name = "ProfileID")]
        [XmlElementAttribute(ElementName = "ProfileID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int64> ProfileID
        {
            get
            {
                return this._ProfileID;
            }
            set
            {
                if ((this._ProfileID != value))
                {
                    this._ProfileID = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getactiveloggedonusersresult data entity.
        /// </summary>
        /// <param name="userID">Initial value of UserID.</param>
        /// <param name="username">Initial value of Username.</param>
        /// <param name="password">Initial value of Password.</param>
        /// <param name="applicationLoginUserID">Initial value of ApplicationLoginUserID.</param>
        /// <param name="userSuspended">Initial value of UserSuspended.</param>
        /// <param name="loggedIn">Initial value of LoggedIn.</param>
        /// <param name="lastLoginDate">Initial value of LastLoginDate.</param>
        /// <param name="email">Initial value of Email.</param>
        /// <param name="applicationName">Initial value of ApplicationName.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of FailedPasswordAttemptCount.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of FailedPasswordAttemptWindowStart.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of FailedPasswordAnswerAttemptCount.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of FailedPasswordAnswerAttemptWindowStart.</param>
        /// <param name="userSuspendedDate">Initial value of UserSuspendedDate.</param>
        /// <param name="lastPasswordChangedDate">Initial value of LastPasswordChangedDate.</param>
        /// <param name="lastActivityDate">Initial value of LastActivityDate.</param>
        /// <param name="creationDate">Initial value of CreationDate.</param>
        /// <param name="isApproved">Initial value of IsApproved.</param>
        /// <returns>The Data.Extended.GetActiveLoggedOnUsersResult entity.</returns>
        public static Data.Extended.GetActiveLoggedOnUsersResult CreateGetActiveLoggedOnUsersResult(
                    long userID, 
                    string username, 
                    string password, 
                    long applicationLoginUserID, 
                    bool userSuspended, 
                    bool loggedIn, 
                    System.DateTime lastLoginDate, 
                    string email, 
                    string applicationName, 
                    int failedPasswordAttemptCount, 
                    System.DateTime failedPasswordAttemptWindowStart, 
                    int failedPasswordAnswerAttemptCount, 
                    System.DateTime failedPasswordAnswerAttemptWindowStart, 
                    System.DateTime userSuspendedDate, 
                    System.DateTime lastPasswordChangedDate, 
                    System.DateTime lastActivityDate, 
                    System.DateTime creationDate, 
                    bool isApproved)
        {
            Data.Extended.GetActiveLoggedOnUsersResult getActiveLoggedOnUsersResult = new Data.Extended.GetActiveLoggedOnUsersResult();
            getActiveLoggedOnUsersResult.UserID = userID;
            getActiveLoggedOnUsersResult.Username = username;
            getActiveLoggedOnUsersResult.Password = password;
            getActiveLoggedOnUsersResult.ApplicationLoginUserID = applicationLoginUserID;
            getActiveLoggedOnUsersResult.UserSuspended = userSuspended;
            getActiveLoggedOnUsersResult.LoggedIn = loggedIn;
            getActiveLoggedOnUsersResult.LastLoginDate = lastLoginDate;
            getActiveLoggedOnUsersResult.Email = email;
            getActiveLoggedOnUsersResult.ApplicationName = applicationName;
            getActiveLoggedOnUsersResult.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            getActiveLoggedOnUsersResult.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            getActiveLoggedOnUsersResult.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            getActiveLoggedOnUsersResult.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            getActiveLoggedOnUsersResult.UserSuspendedDate = userSuspendedDate;
            getActiveLoggedOnUsersResult.LastPasswordChangedDate = lastPasswordChangedDate;
            getActiveLoggedOnUsersResult.LastActivityDate = lastActivityDate;
            getActiveLoggedOnUsersResult.CreationDate = creationDate;
            getActiveLoggedOnUsersResult.IsApproved = isApproved;
            return getActiveLoggedOnUsersResult;
        }
    }
    #endregion
}

#pragma warning restore 169
