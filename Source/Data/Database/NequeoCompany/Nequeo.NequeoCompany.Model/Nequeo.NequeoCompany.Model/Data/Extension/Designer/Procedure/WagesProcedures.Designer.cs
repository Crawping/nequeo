// Warning 169 (Disables the 'Never used' warning)
#pragma warning disable 169
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nequeo.DataAccess.NequeoCompany.Data.Extension
{
    using System;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Data.Linq;
    using System.Data.Linq.SqlClient;
    using System.Data.Linq.Mapping;
    using Nequeo.Data.DataType;
    using Nequeo.Data;
    using Nequeo.Data.Linq;
    using Nequeo.Data.Control;
    using Nequeo.Data.Custom;
    using Nequeo.Data.LinqToSql;
    using Nequeo.Data.DataSet;
    using Nequeo.Data.Edm;
    using Nequeo.ComponentModel;
    
    
    /// <summary>
    /// The wages object class.
    /// </summary>
    public partial class Wages
    {
        
        #region Public Function Methods
        /// <summary>
        /// Execute the getemployeewagesbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetEmployeeWagesBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetEmployeeWagesBetweenDateResult> GetEmployeeWagesBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetEmployeeWagesBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getemployeewagesubtotal routine.
        /// </summary>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetEmployeeWageSubtotal", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetEmployeeWageSubtotalResult> GetEmployeeWageSubtotal([FunctionParameterAttribute("@PaymentDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> paymentDate, [FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), paymentDate, employeeID);
            return ((List<Data.Extended.GetEmployeeWageSubtotalResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getemployeewagesubtotalbyemployeeid routine.
        /// </summary>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetEmployeeWageSubtotalByEmployeeID", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetEmployeeWageSubtotalByEmployeeIDResult> GetEmployeeWageSubtotalByEmployeeID([FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employeeID);
            return ((List<Data.Extended.GetEmployeeWageSubtotalByEmployeeIDResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getemployeewagesubtotalbypaymentdate routine.
        /// </summary>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetEmployeeWageSubtotalByPaymentDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetEmployeeWageSubtotalByPaymentDateResult> GetEmployeeWageSubtotalByPaymentDate([FunctionParameterAttribute("@PaymentDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> paymentDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), paymentDate);
            return ((List<Data.Extended.GetEmployeeWageSubtotalByPaymentDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getselectedemployeebankwagebetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetSelectedEmployeeBankWageBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetSelectedEmployeeBankWageBetweenDateResult> GetSelectedEmployeeBankWageBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID, [FunctionParameterAttribute("@AccountID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> accountID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, employeeID, accountID);
            return ((List<Data.Extended.GetSelectedEmployeeBankWageBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getselectedemployeewagebetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetSelectedEmployeeWageBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetSelectedEmployeeWageBetweenDateResult> GetSelectedEmployeeWageBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, employeeID);
            return ((List<Data.Extended.GetSelectedEmployeeWageBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getselectedemployeewagespaymentslipbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetSelectedEmployeeWagesPaymentSlipBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenDateResult> GetSelectedEmployeeWagesPaymentSlipBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID, [FunctionParameterAttribute("@CompanyID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> companyID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, employeeID, companyID);
            return ((List<Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getselectedemployeewagespaymentslipbetweendateall routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetSelectedEmployeeWagesPaymentSlipBetweenDateALL", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenDateALLResult> GetSelectedEmployeeWagesPaymentSlipBetweenDateALL([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID, [FunctionParameterAttribute("@CompanyID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> companyID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, employeeID, companyID);
            return ((List<Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenDateALLResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getselectedemployeewagespaymentslipbetweenyear routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetSelectedEmployeeWagesPaymentSlipBetweenYear", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenYearResult> GetSelectedEmployeeWagesPaymentSlipBetweenYear([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@EmployeeID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> employeeID, [FunctionParameterAttribute("@CompanyID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> companyID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, employeeID, companyID);
            return ((List<Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenYearResult>)(result.ReturnValue));
        }
        #endregion
    }
}
namespace Nequeo.DataAccess.NequeoCompany.Data.Extended
{
    using System;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Data.Linq;
    using System.Data.Linq.SqlClient;
    using System.Data.Linq.Mapping;
    using Nequeo.Data.DataType;
    using Nequeo.Data;
    using Nequeo.Data.Linq;
    using Nequeo.Data.Control;
    using Nequeo.Data.Custom;
    using Nequeo.Data.LinqToSql;
    using Nequeo.Data.DataSet;
    using Nequeo.Data.Edm;
    using Nequeo.ComponentModel;
    
    
    #region GetEmployeeWagesBetweenDateResult Data Entity Type
    /// <summary>
    /// The getemployeewagesbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetEmployeeWagesBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetEmployeeWagesBetweenDateResult : DataBase
    {
        
        private int _WageID;
        
        private int _EmployeeID;
        
        private int _AccountID;
        
        private System.DateTime _PaymentDate;
        
        private double _Hours;
        
        private decimal _Rate;
        
        private decimal _Amount;
        
        private decimal _PAYG;
        
        private string _Description;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetEmployeeWagesBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the wageid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the wageid property for the object.")]
        [DataMemberAttribute(Name = "WageID")]
        [XmlElementAttribute(ElementName = "WageID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int WageID
        {
            get
            {
                return this._WageID;
            }
            set
            {
                if ((this._WageID != value))
                {
                    this._WageID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this._EmployeeID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountid property for the object.")]
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this._AccountID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the hours property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the hours property for the object.")]
        [DataMemberAttribute(Name = "Hours")]
        [XmlElementAttribute(ElementName = "Hours", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double Hours
        {
            get
            {
                return this._Hours;
            }
            set
            {
                if ((this._Hours != value))
                {
                    this._Hours = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the rate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the rate property for the object.")]
        [DataMemberAttribute(Name = "Rate")]
        [XmlElementAttribute(ElementName = "Rate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Rate
        {
            get
            {
                return this._Rate;
            }
            set
            {
                if ((this._Rate != value))
                {
                    this._Rate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amount property for the object.")]
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this._Amount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the payg property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the payg property for the object.")]
        [DataMemberAttribute(Name = "PAYG")]
        [XmlElementAttribute(ElementName = "PAYG", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal PAYG
        {
            get
            {
                return this._PAYG;
            }
            set
            {
                if ((this._PAYG != value))
                {
                    this._PAYG = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getemployeewagesbetweendateresult data entity.
        /// </summary>
        /// <param name="wageID">Initial value of WageID.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="hours">Initial value of Hours.</param>
        /// <param name="rate">Initial value of Rate.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <param name="pAYG">Initial value of PAYG.</param>
        /// <returns>The Data.Extended.GetEmployeeWagesBetweenDateResult entity.</returns>
        public static Data.Extended.GetEmployeeWagesBetweenDateResult CreateGetEmployeeWagesBetweenDateResult(int wageID, int employeeID, int accountID, System.DateTime paymentDate, double hours, decimal rate, decimal amount, decimal pAYG)
        {
            Data.Extended.GetEmployeeWagesBetweenDateResult getEmployeeWagesBetweenDateResult = new Data.Extended.GetEmployeeWagesBetweenDateResult();
            getEmployeeWagesBetweenDateResult.WageID = wageID;
            getEmployeeWagesBetweenDateResult.EmployeeID = employeeID;
            getEmployeeWagesBetweenDateResult.AccountID = accountID;
            getEmployeeWagesBetweenDateResult.PaymentDate = paymentDate;
            getEmployeeWagesBetweenDateResult.Hours = hours;
            getEmployeeWagesBetweenDateResult.Rate = rate;
            getEmployeeWagesBetweenDateResult.Amount = amount;
            getEmployeeWagesBetweenDateResult.PAYG = pAYG;
            return getEmployeeWagesBetweenDateResult;
        }
    }
    #endregion
    
    #region GetEmployeeWageSubtotalResult Data Entity Type
    /// <summary>
    /// The getemployeewagesubtotalresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetEmployeeWageSubtotalResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetEmployeeWageSubtotalResult : DataBase
    {
        
        private System.DateTime _PaymentDate;
        
        private int _EmployeeID;
        
        private System.Nullable<System.Decimal> _Subtotal;
        
        private System.Nullable<System.Decimal> _PAYGSubTotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetEmployeeWageSubtotalResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this._EmployeeID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the subtotal property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the subtotal property for the object.")]
        [DataMemberAttribute(Name = "Subtotal")]
        [XmlElementAttribute(ElementName = "Subtotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Subtotal
        {
            get
            {
                return this._Subtotal;
            }
            set
            {
                if ((this._Subtotal != value))
                {
                    this._Subtotal = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paygsubtotal property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paygsubtotal property for the object.")]
        [DataMemberAttribute(Name = "PAYGSubTotal")]
        [XmlElementAttribute(ElementName = "PAYGSubTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> PAYGSubTotal
        {
            get
            {
                return this._PAYGSubTotal;
            }
            set
            {
                if ((this._PAYGSubTotal != value))
                {
                    this._PAYGSubTotal = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getemployeewagesubtotalresult data entity.
        /// </summary>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <returns>The Data.Extended.GetEmployeeWageSubtotalResult entity.</returns>
        public static Data.Extended.GetEmployeeWageSubtotalResult CreateGetEmployeeWageSubtotalResult(System.DateTime paymentDate, int employeeID)
        {
            Data.Extended.GetEmployeeWageSubtotalResult getEmployeeWageSubtotalResult = new Data.Extended.GetEmployeeWageSubtotalResult();
            getEmployeeWageSubtotalResult.PaymentDate = paymentDate;
            getEmployeeWageSubtotalResult.EmployeeID = employeeID;
            return getEmployeeWageSubtotalResult;
        }
    }
    #endregion
    
    #region GetEmployeeWageSubtotalByEmployeeIDResult Data Entity Type
    /// <summary>
    /// The getemployeewagesubtotalbyemployeeidresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetEmployeeWageSubtotalByEmployeeIDResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetEmployeeWageSubtotalByEmployeeIDResult : DataBase
    {
        
        private System.DateTime _PaymentDate;
        
        private int _EmployeeID;
        
        private System.Nullable<System.Decimal> _Subtotal;
        
        private System.Nullable<System.Decimal> _PAYGSubTotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetEmployeeWageSubtotalByEmployeeIDResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this._EmployeeID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the subtotal property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the subtotal property for the object.")]
        [DataMemberAttribute(Name = "Subtotal")]
        [XmlElementAttribute(ElementName = "Subtotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Subtotal
        {
            get
            {
                return this._Subtotal;
            }
            set
            {
                if ((this._Subtotal != value))
                {
                    this._Subtotal = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paygsubtotal property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paygsubtotal property for the object.")]
        [DataMemberAttribute(Name = "PAYGSubTotal")]
        [XmlElementAttribute(ElementName = "PAYGSubTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> PAYGSubTotal
        {
            get
            {
                return this._PAYGSubTotal;
            }
            set
            {
                if ((this._PAYGSubTotal != value))
                {
                    this._PAYGSubTotal = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getemployeewagesubtotalbyemployeeidresult data entity.
        /// </summary>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <returns>The Data.Extended.GetEmployeeWageSubtotalByEmployeeIDResult entity.</returns>
        public static Data.Extended.GetEmployeeWageSubtotalByEmployeeIDResult CreateGetEmployeeWageSubtotalByEmployeeIDResult(System.DateTime paymentDate, int employeeID)
        {
            Data.Extended.GetEmployeeWageSubtotalByEmployeeIDResult getEmployeeWageSubtotalByEmployeeIDResult = new Data.Extended.GetEmployeeWageSubtotalByEmployeeIDResult();
            getEmployeeWageSubtotalByEmployeeIDResult.PaymentDate = paymentDate;
            getEmployeeWageSubtotalByEmployeeIDResult.EmployeeID = employeeID;
            return getEmployeeWageSubtotalByEmployeeIDResult;
        }
    }
    #endregion
    
    #region GetEmployeeWageSubtotalByPaymentDateResult Data Entity Type
    /// <summary>
    /// The getemployeewagesubtotalbypaymentdateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetEmployeeWageSubtotalByPaymentDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetEmployeeWageSubtotalByPaymentDateResult : DataBase
    {
        
        private System.DateTime _PaymentDate;
        
        private int _EmployeeID;
        
        private System.Nullable<System.Decimal> _Subtotal;
        
        private System.Nullable<System.Decimal> _PAYGSubTotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetEmployeeWageSubtotalByPaymentDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this._EmployeeID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the subtotal property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the subtotal property for the object.")]
        [DataMemberAttribute(Name = "Subtotal")]
        [XmlElementAttribute(ElementName = "Subtotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Subtotal
        {
            get
            {
                return this._Subtotal;
            }
            set
            {
                if ((this._Subtotal != value))
                {
                    this._Subtotal = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paygsubtotal property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paygsubtotal property for the object.")]
        [DataMemberAttribute(Name = "PAYGSubTotal")]
        [XmlElementAttribute(ElementName = "PAYGSubTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> PAYGSubTotal
        {
            get
            {
                return this._PAYGSubTotal;
            }
            set
            {
                if ((this._PAYGSubTotal != value))
                {
                    this._PAYGSubTotal = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getemployeewagesubtotalbypaymentdateresult data entity.
        /// </summary>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <returns>The Data.Extended.GetEmployeeWageSubtotalByPaymentDateResult entity.</returns>
        public static Data.Extended.GetEmployeeWageSubtotalByPaymentDateResult CreateGetEmployeeWageSubtotalByPaymentDateResult(System.DateTime paymentDate, int employeeID)
        {
            Data.Extended.GetEmployeeWageSubtotalByPaymentDateResult getEmployeeWageSubtotalByPaymentDateResult = new Data.Extended.GetEmployeeWageSubtotalByPaymentDateResult();
            getEmployeeWageSubtotalByPaymentDateResult.PaymentDate = paymentDate;
            getEmployeeWageSubtotalByPaymentDateResult.EmployeeID = employeeID;
            return getEmployeeWageSubtotalByPaymentDateResult;
        }
    }
    #endregion
    
    #region GetSelectedEmployeeBankWageBetweenDateResult Data Entity Type
    /// <summary>
    /// The getselectedemployeebankwagebetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetSelectedEmployeeBankWageBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetSelectedEmployeeBankWageBetweenDateResult : DataBase
    {
        
        private int _EmployeeID;
        
        private string _Firstname;
        
        private string _Surname;
        
        private string _DOB;
        
        private string _Address;
        
        private string _Suburb;
        
        private string _State;
        
        private string _Postcode;
        
        private string _HomeNumber;
        
        private string _FaxNumber;
        
        private string _MobileNumber;
        
        private string _EmailAddress;
        
        private string _Comments;
        
        private string _TFN;
        
        private decimal _AnnualWage;
        
        private double _SuperRate;
        
        private double _TaxRate;
        
        private double _BaseHours;
        
        private double _WageInclude;
        
        private double _BCoefficient;
        
        private string _PayInterval;
        
        private int _WageID;
        
        private int _EmployeeID1;
        
        private int _AccountID;
        
        private System.DateTime _PaymentDate;
        
        private double _Hours;
        
        private decimal _Rate;
        
        private decimal _Amount;
        
        private decimal _PAYG;
        
        private string _Description;
        
        private string _Comments1;
        
        private int _AccountID1;
        
        private int _EmployeeID2;
        
        private string _Bank;
        
        private string _AccountName;
        
        private string _BSB;
        
        private string _AccountNumber;
        
        private string _PhoneNumber;
        
        private string _WebSite;
        
        private string _Comments2;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetSelectedEmployeeBankWageBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this._EmployeeID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the firstname property for the object.")]
        [DataMemberAttribute(Name = "Firstname")]
        [XmlElementAttribute(ElementName = "Firstname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Firstname
        {
            get
            {
                return this._Firstname;
            }
            set
            {
                if ((this._Firstname != value))
                {
                    this._Firstname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the surname property for the object.")]
        [DataMemberAttribute(Name = "Surname")]
        [XmlElementAttribute(ElementName = "Surname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if ((this._Surname != value))
                {
                    this._Surname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the dob property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the dob property for the object.")]
        [DataMemberAttribute(Name = "DOB")]
        [XmlElementAttribute(ElementName = "DOB", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string DOB
        {
            get
            {
                return this._DOB;
            }
            set
            {
                if ((this._DOB != value))
                {
                    this._DOB = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the address property for the object.")]
        [DataMemberAttribute(Name = "Address")]
        [XmlElementAttribute(ElementName = "Address", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this._Address = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suburb property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the suburb property for the object.")]
        [DataMemberAttribute(Name = "Suburb")]
        [XmlElementAttribute(ElementName = "Suburb", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Suburb
        {
            get
            {
                return this._Suburb;
            }
            set
            {
                if ((this._Suburb != value))
                {
                    this._Suburb = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the state property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the state property for the object.")]
        [DataMemberAttribute(Name = "State")]
        [XmlElementAttribute(ElementName = "State", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                if ((this._State != value))
                {
                    this._State = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postcode property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postcode property for the object.")]
        [DataMemberAttribute(Name = "Postcode")]
        [XmlElementAttribute(ElementName = "Postcode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Postcode
        {
            get
            {
                return this._Postcode;
            }
            set
            {
                if ((this._Postcode != value))
                {
                    this._Postcode = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the homenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the homenumber property for the object.")]
        [DataMemberAttribute(Name = "HomeNumber")]
        [XmlElementAttribute(ElementName = "HomeNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string HomeNumber
        {
            get
            {
                return this._HomeNumber;
            }
            set
            {
                if ((this._HomeNumber != value))
                {
                    this._HomeNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the faxnumber property for the object.")]
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this._FaxNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the mobilenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the mobilenumber property for the object.")]
        [DataMemberAttribute(Name = "MobileNumber")]
        [XmlElementAttribute(ElementName = "MobileNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this._MobileNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the emailaddress property for the object.")]
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this._EmailAddress = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tfn property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the tfn property for the object.")]
        [DataMemberAttribute(Name = "TFN")]
        [XmlElementAttribute(ElementName = "TFN", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string TFN
        {
            get
            {
                return this._TFN;
            }
            set
            {
                if ((this._TFN != value))
                {
                    this._TFN = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the annualwage property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the annualwage property for the object.")]
        [DataMemberAttribute(Name = "AnnualWage")]
        [XmlElementAttribute(ElementName = "AnnualWage", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal AnnualWage
        {
            get
            {
                return this._AnnualWage;
            }
            set
            {
                if ((this._AnnualWage != value))
                {
                    this._AnnualWage = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the superrate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the superrate property for the object.")]
        [DataMemberAttribute(Name = "SuperRate")]
        [XmlElementAttribute(ElementName = "SuperRate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double SuperRate
        {
            get
            {
                return this._SuperRate;
            }
            set
            {
                if ((this._SuperRate != value))
                {
                    this._SuperRate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the taxrate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the taxrate property for the object.")]
        [DataMemberAttribute(Name = "TaxRate")]
        [XmlElementAttribute(ElementName = "TaxRate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double TaxRate
        {
            get
            {
                return this._TaxRate;
            }
            set
            {
                if ((this._TaxRate != value))
                {
                    this._TaxRate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the basehours property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the basehours property for the object.")]
        [DataMemberAttribute(Name = "BaseHours")]
        [XmlElementAttribute(ElementName = "BaseHours", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double BaseHours
        {
            get
            {
                return this._BaseHours;
            }
            set
            {
                if ((this._BaseHours != value))
                {
                    this._BaseHours = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the wageinclude property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the wageinclude property for the object.")]
        [DataMemberAttribute(Name = "WageInclude")]
        [XmlElementAttribute(ElementName = "WageInclude", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double WageInclude
        {
            get
            {
                return this._WageInclude;
            }
            set
            {
                if ((this._WageInclude != value))
                {
                    this._WageInclude = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bcoefficient property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bcoefficient property for the object.")]
        [DataMemberAttribute(Name = "BCoefficient")]
        [XmlElementAttribute(ElementName = "BCoefficient", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double BCoefficient
        {
            get
            {
                return this._BCoefficient;
            }
            set
            {
                if ((this._BCoefficient != value))
                {
                    this._BCoefficient = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the payinterval property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the payinterval property for the object.")]
        [DataMemberAttribute(Name = "PayInterval")]
        [XmlElementAttribute(ElementName = "PayInterval", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string PayInterval
        {
            get
            {
                return this._PayInterval;
            }
            set
            {
                if ((this._PayInterval != value))
                {
                    this._PayInterval = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the wageid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the wageid property for the object.")]
        [DataMemberAttribute(Name = "WageID")]
        [XmlElementAttribute(ElementName = "WageID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int WageID
        {
            get
            {
                return this._WageID;
            }
            set
            {
                if ((this._WageID != value))
                {
                    this._WageID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid1 property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID1")]
        [XmlElementAttribute(ElementName = "EmployeeID1", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID1
        {
            get
            {
                return this._EmployeeID1;
            }
            set
            {
                if ((this._EmployeeID1 != value))
                {
                    this._EmployeeID1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountid property for the object.")]
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this._AccountID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the hours property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the hours property for the object.")]
        [DataMemberAttribute(Name = "Hours")]
        [XmlElementAttribute(ElementName = "Hours", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double Hours
        {
            get
            {
                return this._Hours;
            }
            set
            {
                if ((this._Hours != value))
                {
                    this._Hours = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the rate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the rate property for the object.")]
        [DataMemberAttribute(Name = "Rate")]
        [XmlElementAttribute(ElementName = "Rate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Rate
        {
            get
            {
                return this._Rate;
            }
            set
            {
                if ((this._Rate != value))
                {
                    this._Rate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amount property for the object.")]
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this._Amount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the payg property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the payg property for the object.")]
        [DataMemberAttribute(Name = "PAYG")]
        [XmlElementAttribute(ElementName = "PAYG", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal PAYG
        {
            get
            {
                return this._PAYG;
            }
            set
            {
                if ((this._PAYG != value))
                {
                    this._PAYG = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments1 property for the object.")]
        [DataMemberAttribute(Name = "Comments1")]
        [XmlElementAttribute(ElementName = "Comments1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments1
        {
            get
            {
                return this._Comments1;
            }
            set
            {
                if ((this._Comments1 != value))
                {
                    this._Comments1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountid1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountid1 property for the object.")]
        [DataMemberAttribute(Name = "AccountID1")]
        [XmlElementAttribute(ElementName = "AccountID1", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountID1
        {
            get
            {
                return this._AccountID1;
            }
            set
            {
                if ((this._AccountID1 != value))
                {
                    this._AccountID1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid2 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid2 property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID2")]
        [XmlElementAttribute(ElementName = "EmployeeID2", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID2
        {
            get
            {
                return this._EmployeeID2;
            }
            set
            {
                if ((this._EmployeeID2 != value))
                {
                    this._EmployeeID2 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bank property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bank property for the object.")]
        [DataMemberAttribute(Name = "Bank")]
        [XmlElementAttribute(ElementName = "Bank", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string Bank
        {
            get
            {
                return this._Bank;
            }
            set
            {
                if ((this._Bank != value))
                {
                    this._Bank = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountname property for the object.")]
        [DataMemberAttribute(Name = "AccountName")]
        [XmlElementAttribute(ElementName = "AccountName", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string AccountName
        {
            get
            {
                return this._AccountName;
            }
            set
            {
                if ((this._AccountName != value))
                {
                    this._AccountName = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bsb property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bsb property for the object.")]
        [DataMemberAttribute(Name = "BSB")]
        [XmlElementAttribute(ElementName = "BSB", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string BSB
        {
            get
            {
                return this._BSB;
            }
            set
            {
                if ((this._BSB != value))
                {
                    this._BSB = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountnumber property for the object.")]
        [DataMemberAttribute(Name = "AccountNumber")]
        [XmlElementAttribute(ElementName = "AccountNumber", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this._AccountNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the phonenumber property for the object.")]
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this._PhoneNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the website property for the object.")]
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this._WebSite = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments2 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments2 property for the object.")]
        [DataMemberAttribute(Name = "Comments2")]
        [XmlElementAttribute(ElementName = "Comments2", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments2
        {
            get
            {
                return this._Comments2;
            }
            set
            {
                if ((this._Comments2 != value))
                {
                    this._Comments2 = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getselectedemployeebankwagebetweendateresult data entity.
        /// </summary>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="annualWage">Initial value of AnnualWage.</param>
        /// <param name="superRate">Initial value of SuperRate.</param>
        /// <param name="taxRate">Initial value of TaxRate.</param>
        /// <param name="baseHours">Initial value of BaseHours.</param>
        /// <param name="wageInclude">Initial value of WageInclude.</param>
        /// <param name="bCoefficient">Initial value of BCoefficient.</param>
        /// <param name="payInterval">Initial value of PayInterval.</param>
        /// <param name="wageID">Initial value of WageID.</param>
        /// <param name="employeeID1">Initial value of EmployeeID1.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="hours">Initial value of Hours.</param>
        /// <param name="rate">Initial value of Rate.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <param name="pAYG">Initial value of PAYG.</param>
        /// <param name="accountID1">Initial value of AccountID1.</param>
        /// <param name="employeeID2">Initial value of EmployeeID2.</param>
        /// <param name="bank">Initial value of Bank.</param>
        /// <param name="accountName">Initial value of AccountName.</param>
        /// <param name="bSB">Initial value of BSB.</param>
        /// <param name="accountNumber">Initial value of AccountNumber.</param>
        /// <returns>The Data.Extended.GetSelectedEmployeeBankWageBetweenDateResult entity.</returns>
        public static Data.Extended.GetSelectedEmployeeBankWageBetweenDateResult CreateGetSelectedEmployeeBankWageBetweenDateResult(
                    int employeeID, 
                    decimal annualWage, 
                    double superRate, 
                    double taxRate, 
                    double baseHours, 
                    double wageInclude, 
                    double bCoefficient, 
                    string payInterval, 
                    int wageID, 
                    int employeeID1, 
                    int accountID, 
                    System.DateTime paymentDate, 
                    double hours, 
                    decimal rate, 
                    decimal amount, 
                    decimal pAYG, 
                    int accountID1, 
                    int employeeID2, 
                    string bank, 
                    string accountName, 
                    string bSB, 
                    string accountNumber)
        {
            Data.Extended.GetSelectedEmployeeBankWageBetweenDateResult getSelectedEmployeeBankWageBetweenDateResult = new Data.Extended.GetSelectedEmployeeBankWageBetweenDateResult();
            getSelectedEmployeeBankWageBetweenDateResult.EmployeeID = employeeID;
            getSelectedEmployeeBankWageBetweenDateResult.AnnualWage = annualWage;
            getSelectedEmployeeBankWageBetweenDateResult.SuperRate = superRate;
            getSelectedEmployeeBankWageBetweenDateResult.TaxRate = taxRate;
            getSelectedEmployeeBankWageBetweenDateResult.BaseHours = baseHours;
            getSelectedEmployeeBankWageBetweenDateResult.WageInclude = wageInclude;
            getSelectedEmployeeBankWageBetweenDateResult.BCoefficient = bCoefficient;
            getSelectedEmployeeBankWageBetweenDateResult.PayInterval = payInterval;
            getSelectedEmployeeBankWageBetweenDateResult.WageID = wageID;
            getSelectedEmployeeBankWageBetweenDateResult.EmployeeID1 = employeeID1;
            getSelectedEmployeeBankWageBetweenDateResult.AccountID = accountID;
            getSelectedEmployeeBankWageBetweenDateResult.PaymentDate = paymentDate;
            getSelectedEmployeeBankWageBetweenDateResult.Hours = hours;
            getSelectedEmployeeBankWageBetweenDateResult.Rate = rate;
            getSelectedEmployeeBankWageBetweenDateResult.Amount = amount;
            getSelectedEmployeeBankWageBetweenDateResult.PAYG = pAYG;
            getSelectedEmployeeBankWageBetweenDateResult.AccountID1 = accountID1;
            getSelectedEmployeeBankWageBetweenDateResult.EmployeeID2 = employeeID2;
            getSelectedEmployeeBankWageBetweenDateResult.Bank = bank;
            getSelectedEmployeeBankWageBetweenDateResult.AccountName = accountName;
            getSelectedEmployeeBankWageBetweenDateResult.BSB = bSB;
            getSelectedEmployeeBankWageBetweenDateResult.AccountNumber = accountNumber;
            return getSelectedEmployeeBankWageBetweenDateResult;
        }
    }
    #endregion
    
    #region GetSelectedEmployeeWageBetweenDateResult Data Entity Type
    /// <summary>
    /// The getselectedemployeewagebetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetSelectedEmployeeWageBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetSelectedEmployeeWageBetweenDateResult : DataBase
    {
        
        private int _EmployeeID;
        
        private string _Firstname;
        
        private string _Surname;
        
        private string _DOB;
        
        private string _Address;
        
        private string _Suburb;
        
        private string _State;
        
        private string _Postcode;
        
        private string _HomeNumber;
        
        private string _FaxNumber;
        
        private string _MobileNumber;
        
        private string _EmailAddress;
        
        private string _Comments;
        
        private string _TFN;
        
        private decimal _AnnualWage;
        
        private double _SuperRate;
        
        private double _TaxRate;
        
        private double _BaseHours;
        
        private double _WageInclude;
        
        private double _BCoefficient;
        
        private string _PayInterval;
        
        private int _WageID;
        
        private int _EmployeeID1;
        
        private int _AccountID;
        
        private System.DateTime _PaymentDate;
        
        private double _Hours;
        
        private decimal _Rate;
        
        private decimal _Amount;
        
        private decimal _PAYG;
        
        private string _Description;
        
        private string _Comments1;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetSelectedEmployeeWageBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this._EmployeeID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the firstname property for the object.")]
        [DataMemberAttribute(Name = "Firstname")]
        [XmlElementAttribute(ElementName = "Firstname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Firstname
        {
            get
            {
                return this._Firstname;
            }
            set
            {
                if ((this._Firstname != value))
                {
                    this._Firstname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the surname property for the object.")]
        [DataMemberAttribute(Name = "Surname")]
        [XmlElementAttribute(ElementName = "Surname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if ((this._Surname != value))
                {
                    this._Surname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the dob property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the dob property for the object.")]
        [DataMemberAttribute(Name = "DOB")]
        [XmlElementAttribute(ElementName = "DOB", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string DOB
        {
            get
            {
                return this._DOB;
            }
            set
            {
                if ((this._DOB != value))
                {
                    this._DOB = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the address property for the object.")]
        [DataMemberAttribute(Name = "Address")]
        [XmlElementAttribute(ElementName = "Address", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this._Address = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suburb property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the suburb property for the object.")]
        [DataMemberAttribute(Name = "Suburb")]
        [XmlElementAttribute(ElementName = "Suburb", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Suburb
        {
            get
            {
                return this._Suburb;
            }
            set
            {
                if ((this._Suburb != value))
                {
                    this._Suburb = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the state property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the state property for the object.")]
        [DataMemberAttribute(Name = "State")]
        [XmlElementAttribute(ElementName = "State", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                if ((this._State != value))
                {
                    this._State = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postcode property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postcode property for the object.")]
        [DataMemberAttribute(Name = "Postcode")]
        [XmlElementAttribute(ElementName = "Postcode", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Postcode
        {
            get
            {
                return this._Postcode;
            }
            set
            {
                if ((this._Postcode != value))
                {
                    this._Postcode = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the homenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the homenumber property for the object.")]
        [DataMemberAttribute(Name = "HomeNumber")]
        [XmlElementAttribute(ElementName = "HomeNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string HomeNumber
        {
            get
            {
                return this._HomeNumber;
            }
            set
            {
                if ((this._HomeNumber != value))
                {
                    this._HomeNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the faxnumber property for the object.")]
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this._FaxNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the mobilenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the mobilenumber property for the object.")]
        [DataMemberAttribute(Name = "MobileNumber")]
        [XmlElementAttribute(ElementName = "MobileNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this._MobileNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the emailaddress property for the object.")]
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this._EmailAddress = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tfn property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the tfn property for the object.")]
        [DataMemberAttribute(Name = "TFN")]
        [XmlElementAttribute(ElementName = "TFN", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string TFN
        {
            get
            {
                return this._TFN;
            }
            set
            {
                if ((this._TFN != value))
                {
                    this._TFN = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the annualwage property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the annualwage property for the object.")]
        [DataMemberAttribute(Name = "AnnualWage")]
        [XmlElementAttribute(ElementName = "AnnualWage", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal AnnualWage
        {
            get
            {
                return this._AnnualWage;
            }
            set
            {
                if ((this._AnnualWage != value))
                {
                    this._AnnualWage = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the superrate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the superrate property for the object.")]
        [DataMemberAttribute(Name = "SuperRate")]
        [XmlElementAttribute(ElementName = "SuperRate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double SuperRate
        {
            get
            {
                return this._SuperRate;
            }
            set
            {
                if ((this._SuperRate != value))
                {
                    this._SuperRate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the taxrate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the taxrate property for the object.")]
        [DataMemberAttribute(Name = "TaxRate")]
        [XmlElementAttribute(ElementName = "TaxRate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double TaxRate
        {
            get
            {
                return this._TaxRate;
            }
            set
            {
                if ((this._TaxRate != value))
                {
                    this._TaxRate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the basehours property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the basehours property for the object.")]
        [DataMemberAttribute(Name = "BaseHours")]
        [XmlElementAttribute(ElementName = "BaseHours", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double BaseHours
        {
            get
            {
                return this._BaseHours;
            }
            set
            {
                if ((this._BaseHours != value))
                {
                    this._BaseHours = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the wageinclude property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the wageinclude property for the object.")]
        [DataMemberAttribute(Name = "WageInclude")]
        [XmlElementAttribute(ElementName = "WageInclude", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double WageInclude
        {
            get
            {
                return this._WageInclude;
            }
            set
            {
                if ((this._WageInclude != value))
                {
                    this._WageInclude = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bcoefficient property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bcoefficient property for the object.")]
        [DataMemberAttribute(Name = "BCoefficient")]
        [XmlElementAttribute(ElementName = "BCoefficient", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double BCoefficient
        {
            get
            {
                return this._BCoefficient;
            }
            set
            {
                if ((this._BCoefficient != value))
                {
                    this._BCoefficient = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the payinterval property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the payinterval property for the object.")]
        [DataMemberAttribute(Name = "PayInterval")]
        [XmlElementAttribute(ElementName = "PayInterval", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string PayInterval
        {
            get
            {
                return this._PayInterval;
            }
            set
            {
                if ((this._PayInterval != value))
                {
                    this._PayInterval = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the wageid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the wageid property for the object.")]
        [DataMemberAttribute(Name = "WageID")]
        [XmlElementAttribute(ElementName = "WageID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int WageID
        {
            get
            {
                return this._WageID;
            }
            set
            {
                if ((this._WageID != value))
                {
                    this._WageID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid1 property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID1")]
        [XmlElementAttribute(ElementName = "EmployeeID1", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID1
        {
            get
            {
                return this._EmployeeID1;
            }
            set
            {
                if ((this._EmployeeID1 != value))
                {
                    this._EmployeeID1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountid property for the object.")]
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this._AccountID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the hours property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the hours property for the object.")]
        [DataMemberAttribute(Name = "Hours")]
        [XmlElementAttribute(ElementName = "Hours", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double Hours
        {
            get
            {
                return this._Hours;
            }
            set
            {
                if ((this._Hours != value))
                {
                    this._Hours = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the rate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the rate property for the object.")]
        [DataMemberAttribute(Name = "Rate")]
        [XmlElementAttribute(ElementName = "Rate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Rate
        {
            get
            {
                return this._Rate;
            }
            set
            {
                if ((this._Rate != value))
                {
                    this._Rate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amount property for the object.")]
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this._Amount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the payg property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the payg property for the object.")]
        [DataMemberAttribute(Name = "PAYG")]
        [XmlElementAttribute(ElementName = "PAYG", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal PAYG
        {
            get
            {
                return this._PAYG;
            }
            set
            {
                if ((this._PAYG != value))
                {
                    this._PAYG = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments1 property for the object.")]
        [DataMemberAttribute(Name = "Comments1")]
        [XmlElementAttribute(ElementName = "Comments1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments1
        {
            get
            {
                return this._Comments1;
            }
            set
            {
                if ((this._Comments1 != value))
                {
                    this._Comments1 = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getselectedemployeewagebetweendateresult data entity.
        /// </summary>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="annualWage">Initial value of AnnualWage.</param>
        /// <param name="superRate">Initial value of SuperRate.</param>
        /// <param name="taxRate">Initial value of TaxRate.</param>
        /// <param name="baseHours">Initial value of BaseHours.</param>
        /// <param name="wageInclude">Initial value of WageInclude.</param>
        /// <param name="bCoefficient">Initial value of BCoefficient.</param>
        /// <param name="payInterval">Initial value of PayInterval.</param>
        /// <param name="wageID">Initial value of WageID.</param>
        /// <param name="employeeID1">Initial value of EmployeeID1.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="hours">Initial value of Hours.</param>
        /// <param name="rate">Initial value of Rate.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <param name="pAYG">Initial value of PAYG.</param>
        /// <returns>The Data.Extended.GetSelectedEmployeeWageBetweenDateResult entity.</returns>
        public static Data.Extended.GetSelectedEmployeeWageBetweenDateResult CreateGetSelectedEmployeeWageBetweenDateResult(
                    int employeeID, 
                    decimal annualWage, 
                    double superRate, 
                    double taxRate, 
                    double baseHours, 
                    double wageInclude, 
                    double bCoefficient, 
                    string payInterval, 
                    int wageID, 
                    int employeeID1, 
                    int accountID, 
                    System.DateTime paymentDate, 
                    double hours, 
                    decimal rate, 
                    decimal amount, 
                    decimal pAYG)
        {
            Data.Extended.GetSelectedEmployeeWageBetweenDateResult getSelectedEmployeeWageBetweenDateResult = new Data.Extended.GetSelectedEmployeeWageBetweenDateResult();
            getSelectedEmployeeWageBetweenDateResult.EmployeeID = employeeID;
            getSelectedEmployeeWageBetweenDateResult.AnnualWage = annualWage;
            getSelectedEmployeeWageBetweenDateResult.SuperRate = superRate;
            getSelectedEmployeeWageBetweenDateResult.TaxRate = taxRate;
            getSelectedEmployeeWageBetweenDateResult.BaseHours = baseHours;
            getSelectedEmployeeWageBetweenDateResult.WageInclude = wageInclude;
            getSelectedEmployeeWageBetweenDateResult.BCoefficient = bCoefficient;
            getSelectedEmployeeWageBetweenDateResult.PayInterval = payInterval;
            getSelectedEmployeeWageBetweenDateResult.WageID = wageID;
            getSelectedEmployeeWageBetweenDateResult.EmployeeID1 = employeeID1;
            getSelectedEmployeeWageBetweenDateResult.AccountID = accountID;
            getSelectedEmployeeWageBetweenDateResult.PaymentDate = paymentDate;
            getSelectedEmployeeWageBetweenDateResult.Hours = hours;
            getSelectedEmployeeWageBetweenDateResult.Rate = rate;
            getSelectedEmployeeWageBetweenDateResult.Amount = amount;
            getSelectedEmployeeWageBetweenDateResult.PAYG = pAYG;
            return getSelectedEmployeeWageBetweenDateResult;
        }
    }
    #endregion
    
    #region GetSelectedEmployeeWagesPaymentSlipBetweenDateResult Data Entity Type
    /// <summary>
    /// The getselectedemployeewagespaymentslipbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetSelectedEmployeeWagesPaymentSlipBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetSelectedEmployeeWagesPaymentSlipBetweenDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _NetTotal;
        
        private System.Nullable<System.Decimal> _PAYGTotal;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetSelectedEmployeeWagesPaymentSlipBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the nettotal property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the nettotal property for the object.")]
        [DataMemberAttribute(Name = "NetTotal")]
        [XmlElementAttribute(ElementName = "NetTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> NetTotal
        {
            get
            {
                return this._NetTotal;
            }
            set
            {
                if ((this._NetTotal != value))
                {
                    this._NetTotal = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paygtotal property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paygtotal property for the object.")]
        [DataMemberAttribute(Name = "PAYGTotal")]
        [XmlElementAttribute(ElementName = "PAYGTotal", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> PAYGTotal
        {
            get
            {
                return this._PAYGTotal;
            }
            set
            {
                if ((this._PAYGTotal != value))
                {
                    this._PAYGTotal = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getselectedemployeewagespaymentslipbetweendateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenDateResult entity.</returns>
        public static Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenDateResult CreateGetSelectedEmployeeWagesPaymentSlipBetweenDateResult()
        {
            Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenDateResult getSelectedEmployeeWagesPaymentSlipBetweenDateResult = new Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenDateResult();
            return getSelectedEmployeeWagesPaymentSlipBetweenDateResult;
        }
    }
    #endregion
    
    #region GetSelectedEmployeeWagesPaymentSlipBetweenDateALLResult Data Entity Type
    /// <summary>
    /// The getselectedemployeewagespaymentslipbetweendateallresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetSelectedEmployeeWagesPaymentSlipBetweenDateALLResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetSelectedEmployeeWagesPaymentSlipBetweenDateALLResult : DataBase
    {
        
        private int _WageID;
        
        private int _EmployeeID;
        
        private int _AccountID;
        
        private System.DateTime _PaymentDate;
        
        private double _Hours;
        
        private decimal _Rate;
        
        private decimal _Amount;
        
        private decimal _PAYG;
        
        private string _Description;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetSelectedEmployeeWagesPaymentSlipBetweenDateALLResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the wageid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the wageid property for the object.")]
        [DataMemberAttribute(Name = "WageID")]
        [XmlElementAttribute(ElementName = "WageID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int WageID
        {
            get
            {
                return this._WageID;
            }
            set
            {
                if ((this._WageID != value))
                {
                    this._WageID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the employeeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the employeeid property for the object.")]
        [DataMemberAttribute(Name = "EmployeeID")]
        [XmlElementAttribute(ElementName = "EmployeeID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int EmployeeID
        {
            get
            {
                return this._EmployeeID;
            }
            set
            {
                if ((this._EmployeeID != value))
                {
                    this._EmployeeID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountid property for the object.")]
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this._AccountID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the hours property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the hours property for the object.")]
        [DataMemberAttribute(Name = "Hours")]
        [XmlElementAttribute(ElementName = "Hours", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public double Hours
        {
            get
            {
                return this._Hours;
            }
            set
            {
                if ((this._Hours != value))
                {
                    this._Hours = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the rate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the rate property for the object.")]
        [DataMemberAttribute(Name = "Rate")]
        [XmlElementAttribute(ElementName = "Rate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Rate
        {
            get
            {
                return this._Rate;
            }
            set
            {
                if ((this._Rate != value))
                {
                    this._Rate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amount property for the object.")]
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this._Amount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the payg property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the payg property for the object.")]
        [DataMemberAttribute(Name = "PAYG")]
        [XmlElementAttribute(ElementName = "PAYG", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal PAYG
        {
            get
            {
                return this._PAYG;
            }
            set
            {
                if ((this._PAYG != value))
                {
                    this._PAYG = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getselectedemployeewagespaymentslipbetweendateallresult data entity.
        /// </summary>
        /// <param name="wageID">Initial value of WageID.</param>
        /// <param name="employeeID">Initial value of EmployeeID.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="hours">Initial value of Hours.</param>
        /// <param name="rate">Initial value of Rate.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <param name="pAYG">Initial value of PAYG.</param>
        /// <returns>The Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenDateALLResult entity.</returns>
        public static Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenDateALLResult CreateGetSelectedEmployeeWagesPaymentSlipBetweenDateALLResult(int wageID, int employeeID, int accountID, System.DateTime paymentDate, double hours, decimal rate, decimal amount, decimal pAYG)
        {
            Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenDateALLResult getSelectedEmployeeWagesPaymentSlipBetweenDateALLResult = new Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenDateALLResult();
            getSelectedEmployeeWagesPaymentSlipBetweenDateALLResult.WageID = wageID;
            getSelectedEmployeeWagesPaymentSlipBetweenDateALLResult.EmployeeID = employeeID;
            getSelectedEmployeeWagesPaymentSlipBetweenDateALLResult.AccountID = accountID;
            getSelectedEmployeeWagesPaymentSlipBetweenDateALLResult.PaymentDate = paymentDate;
            getSelectedEmployeeWagesPaymentSlipBetweenDateALLResult.Hours = hours;
            getSelectedEmployeeWagesPaymentSlipBetweenDateALLResult.Rate = rate;
            getSelectedEmployeeWagesPaymentSlipBetweenDateALLResult.Amount = amount;
            getSelectedEmployeeWagesPaymentSlipBetweenDateALLResult.PAYG = pAYG;
            return getSelectedEmployeeWagesPaymentSlipBetweenDateALLResult;
        }
    }
    #endregion
    
    #region GetSelectedEmployeeWagesPaymentSlipBetweenYearResult Data Entity Type
    /// <summary>
    /// The getselectedemployeewagespaymentslipbetweenyearresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetSelectedEmployeeWagesPaymentSlipBetweenYearResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetSelectedEmployeeWagesPaymentSlipBetweenYearResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _TotalNet;
        
        private System.Nullable<System.Decimal> _TotalPAYG;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetSelectedEmployeeWagesPaymentSlipBetweenYearResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totalnet property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totalnet property for the object.")]
        [DataMemberAttribute(Name = "TotalNet")]
        [XmlElementAttribute(ElementName = "TotalNet", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalNet
        {
            get
            {
                return this._TotalNet;
            }
            set
            {
                if ((this._TotalNet != value))
                {
                    this._TotalNet = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totalpayg property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totalpayg property for the object.")]
        [DataMemberAttribute(Name = "TotalPAYG")]
        [XmlElementAttribute(ElementName = "TotalPAYG", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalPAYG
        {
            get
            {
                return this._TotalPAYG;
            }
            set
            {
                if ((this._TotalPAYG != value))
                {
                    this._TotalPAYG = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getselectedemployeewagespaymentslipbetweenyearresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenYearResult entity.</returns>
        public static Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenYearResult CreateGetSelectedEmployeeWagesPaymentSlipBetweenYearResult()
        {
            Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenYearResult getSelectedEmployeeWagesPaymentSlipBetweenYearResult = new Data.Extended.GetSelectedEmployeeWagesPaymentSlipBetweenYearResult();
            return getSelectedEmployeeWagesPaymentSlipBetweenYearResult;
        }
    }
    #endregion
}

#pragma warning restore 169
