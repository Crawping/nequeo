// Warning 169 (Disables the 'Never used' warning)
#pragma warning disable 169
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nequeo.DataAccess.NequeoCompany.Data.Extension
{
    using System;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Data.Linq;
    using System.Data.Linq.SqlClient;
    using System.Data.Linq.Mapping;
    using Nequeo.Data.DataType;
    using Nequeo.Data;
    using Nequeo.Data.Linq;
    using Nequeo.Data.Control;
    using Nequeo.Data.Custom;
    using Nequeo.Data.LinqToSql;
    using Nequeo.Data.DataSet;
    using Nequeo.Data.Edm;
    using Nequeo.ComponentModel;
    
    
    /// <summary>
    /// The accounttransactions object class.
    /// </summary>
    public partial class AccountTransactions
    {
        
        #region Public Function Methods
        /// <summary>
        /// Execute the getaccountbalancefromtodate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetAccountBalanceFromToDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetAccountBalanceFromToDateResult> GetAccountBalanceFromToDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@AccountID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> accountID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, accountID);
            return ((List<Data.Extended.GetAccountBalanceFromToDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getaccounttransactioncreditsfromtodate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetAccountTransactionCreditsFromToDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetAccountTransactionCreditsFromToDateResult> GetAccountTransactionCreditsFromToDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@AccountID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> accountID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, accountID);
            return ((List<Data.Extended.GetAccountTransactionCreditsFromToDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getaccounttransactioncreditsfromtodatepaidtoby routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="dataMember">Initial value of DataMember.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetAccountTransactionCreditsFromToDatePaidToBy", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetAccountTransactionCreditsFromToDatePaidToByResult> GetAccountTransactionCreditsFromToDatePaidToBy([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@AccountID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> accountID, [FunctionParameterAttribute("@DataMember", "varchar", 50, ParameterDirection.Input, true)] string dataMember)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, accountID, dataMember);
            return ((List<Data.Extended.GetAccountTransactionCreditsFromToDatePaidToByResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getaccounttransactioncreditsfromtodatepaidtobyandid routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="dataMember">Initial value of DataMember.</param>
        /// <param name="dataMemberID">Initial value of DataMemberID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetAccountTransactionCreditsFromToDatePaidToByAndID", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetAccountTransactionCreditsFromToDatePaidToByAndIDResult> GetAccountTransactionCreditsFromToDatePaidToByAndID([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@AccountID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> accountID, [FunctionParameterAttribute("@DataMember", "varchar", 50, ParameterDirection.Input, true)] string dataMember, [FunctionParameterAttribute("@DataMemberID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> dataMemberID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, accountID, dataMember, dataMemberID);
            return ((List<Data.Extended.GetAccountTransactionCreditsFromToDatePaidToByAndIDResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getaccounttransactioncreditsmemberfromtodate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="dataMember">Initial value of DataMember.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetAccountTransactionCreditsMemberFromToDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetAccountTransactionCreditsMemberFromToDateResult> GetAccountTransactionCreditsMemberFromToDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@DataMember", "varchar", 50, ParameterDirection.Input, true)] string dataMember)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, dataMember);
            return ((List<Data.Extended.GetAccountTransactionCreditsMemberFromToDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getaccounttransactioncreditsmemberfromtodatebyid routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="dataMember">Initial value of DataMember.</param>
        /// <param name="dataMemberID">Initial value of DataMemberID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetAccountTransactionCreditsMemberFromToDateByID", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetAccountTransactionCreditsMemberFromToDateByIDResult> GetAccountTransactionCreditsMemberFromToDateByID([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@DataMember", "varchar", 50, ParameterDirection.Input, true)] string dataMember, [FunctionParameterAttribute("@DataMemberID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> dataMemberID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, dataMember, dataMemberID);
            return ((List<Data.Extended.GetAccountTransactionCreditsMemberFromToDateByIDResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getaccounttransactiondebitsfromtodate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetAccountTransactionDebitsFromToDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetAccountTransactionDebitsFromToDateResult> GetAccountTransactionDebitsFromToDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@AccountID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> accountID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, accountID);
            return ((List<Data.Extended.GetAccountTransactionDebitsFromToDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getaccounttransactiondebitsfromtodatepaidtoby routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="dataMember">Initial value of DataMember.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetAccountTransactionDebitsFromToDatePaidToBy", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetAccountTransactionDebitsFromToDatePaidToByResult> GetAccountTransactionDebitsFromToDatePaidToBy([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@AccountID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> accountID, [FunctionParameterAttribute("@DataMember", "varchar", 50, ParameterDirection.Input, true)] string dataMember)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, accountID, dataMember);
            return ((List<Data.Extended.GetAccountTransactionDebitsFromToDatePaidToByResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getaccounttransactiondebitsfromtodatepaidtobyandid routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="dataMember">Initial value of DataMember.</param>
        /// <param name="dataMemberID">Initial value of DataMemberID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetAccountTransactionDebitsFromToDatePaidToByAndID", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetAccountTransactionDebitsFromToDatePaidToByAndIDResult> GetAccountTransactionDebitsFromToDatePaidToByAndID([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@AccountID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> accountID, [FunctionParameterAttribute("@DataMember", "varchar", 50, ParameterDirection.Input, true)] string dataMember, [FunctionParameterAttribute("@DataMemberID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> dataMemberID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, accountID, dataMember, dataMemberID);
            return ((List<Data.Extended.GetAccountTransactionDebitsFromToDatePaidToByAndIDResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getaccounttransactiondebitsmemberfromtodate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="dataMember">Initial value of DataMember.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetAccountTransactionDebitsMemberFromToDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetAccountTransactionDebitsMemberFromToDateResult> GetAccountTransactionDebitsMemberFromToDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@DataMember", "varchar", 50, ParameterDirection.Input, true)] string dataMember)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, dataMember);
            return ((List<Data.Extended.GetAccountTransactionDebitsMemberFromToDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getaccounttransactiondebitsmemberfromtodatebyid routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="dataMember">Initial value of DataMember.</param>
        /// <param name="dataMemberID">Initial value of DataMemberID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetAccountTransactionDebitsMemberFromToDateByID", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetAccountTransactionDebitsMemberFromToDateByIDResult> GetAccountTransactionDebitsMemberFromToDateByID([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@DataMember", "varchar", 50, ParameterDirection.Input, true)] string dataMember, [FunctionParameterAttribute("@DataMemberID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> dataMemberID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, dataMember, dataMemberID);
            return ((List<Data.Extended.GetAccountTransactionDebitsMemberFromToDateByIDResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getaccounttransactionsfromtodate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetAccountTransactionsFromToDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetAccountTransactionsFromToDateResult> GetAccountTransactionsFromToDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@AccountID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> accountID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, accountID);
            return ((List<Data.Extended.GetAccountTransactionsFromToDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getaccounttransactionsfromtodatepaidtoby routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="dataMember">Initial value of DataMember.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetAccountTransactionsFromToDatePaidToBy", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetAccountTransactionsFromToDatePaidToByResult> GetAccountTransactionsFromToDatePaidToBy([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@AccountID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> accountID, [FunctionParameterAttribute("@DataMember", "varchar", 50, ParameterDirection.Input, true)] string dataMember)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, accountID, dataMember);
            return ((List<Data.Extended.GetAccountTransactionsFromToDatePaidToByResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getaccounttransactionsfromtodatepaidtobyandid routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="dataMember">Initial value of DataMember.</param>
        /// <param name="dataMemberID">Initial value of DataMemberID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetAccountTransactionsFromToDatePaidToByAndID", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetAccountTransactionsFromToDatePaidToByAndIDResult> GetAccountTransactionsFromToDatePaidToByAndID([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@AccountID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> accountID, [FunctionParameterAttribute("@DataMember", "varchar", 50, ParameterDirection.Input, true)] string dataMember, [FunctionParameterAttribute("@DataMemberID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> dataMemberID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, accountID, dataMember, dataMemberID);
            return ((List<Data.Extended.GetAccountTransactionsFromToDatePaidToByAndIDResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getaccounttransactionsmemberfromtodate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="dataMember">Initial value of DataMember.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetAccountTransactionsMemberFromToDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetAccountTransactionsMemberFromToDateResult> GetAccountTransactionsMemberFromToDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@DataMember", "varchar", 50, ParameterDirection.Input, true)] string dataMember)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, dataMember);
            return ((List<Data.Extended.GetAccountTransactionsMemberFromToDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getaccounttransactionsmemberfromtodatebyid routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <param name="dataMember">Initial value of DataMember.</param>
        /// <param name="dataMemberID">Initial value of DataMemberID.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetAccountTransactionsMemberFromToDateByID", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetAccountTransactionsMemberFromToDateByIDResult> GetAccountTransactionsMemberFromToDateByID([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate, [FunctionParameterAttribute("@DataMember", "varchar", 50, ParameterDirection.Input, true)] string dataMember, [FunctionParameterAttribute("@DataMemberID", "int", 4, ParameterDirection.Input, true)] System.Nullable<System.Int32> dataMemberID)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, dataMember, dataMemberID);
            return ((List<Data.Extended.GetAccountTransactionsMemberFromToDateByIDResult>)(result.ReturnValue));
        }
        #endregion
    }
}
namespace Nequeo.DataAccess.NequeoCompany.Data.Extended
{
    using System;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Data.Linq;
    using System.Data.Linq.SqlClient;
    using System.Data.Linq.Mapping;
    using Nequeo.Data.DataType;
    using Nequeo.Data;
    using Nequeo.Data.Linq;
    using Nequeo.Data.Control;
    using Nequeo.Data.Custom;
    using Nequeo.Data.LinqToSql;
    using Nequeo.Data.DataSet;
    using Nequeo.Data.Edm;
    using Nequeo.ComponentModel;
    
    
    #region GetAccountBalanceFromToDateResult Data Entity Type
    /// <summary>
    /// The getaccountbalancefromtodateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetAccountBalanceFromToDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetAccountBalanceFromToDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _Total;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetAccountBalanceFromToDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the total property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the total property for the object.")]
        [DataMemberAttribute(Name = "Total")]
        [XmlElementAttribute(ElementName = "Total", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Total
        {
            get
            {
                return this._Total;
            }
            set
            {
                if ((this._Total != value))
                {
                    this._Total = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getaccountbalancefromtodateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetAccountBalanceFromToDateResult entity.</returns>
        public static Data.Extended.GetAccountBalanceFromToDateResult CreateGetAccountBalanceFromToDateResult()
        {
            Data.Extended.GetAccountBalanceFromToDateResult getAccountBalanceFromToDateResult = new Data.Extended.GetAccountBalanceFromToDateResult();
            return getAccountBalanceFromToDateResult;
        }
    }
    #endregion
    
    #region GetAccountTransactionCreditsFromToDateResult Data Entity Type
    /// <summary>
    /// The getaccounttransactioncreditsfromtodateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetAccountTransactionCreditsFromToDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetAccountTransactionCreditsFromToDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _TotalCredits;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetAccountTransactionCreditsFromToDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totalcredits property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totalcredits property for the object.")]
        [DataMemberAttribute(Name = "TotalCredits")]
        [XmlElementAttribute(ElementName = "TotalCredits", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalCredits
        {
            get
            {
                return this._TotalCredits;
            }
            set
            {
                if ((this._TotalCredits != value))
                {
                    this._TotalCredits = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getaccounttransactioncreditsfromtodateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetAccountTransactionCreditsFromToDateResult entity.</returns>
        public static Data.Extended.GetAccountTransactionCreditsFromToDateResult CreateGetAccountTransactionCreditsFromToDateResult()
        {
            Data.Extended.GetAccountTransactionCreditsFromToDateResult getAccountTransactionCreditsFromToDateResult = new Data.Extended.GetAccountTransactionCreditsFromToDateResult();
            return getAccountTransactionCreditsFromToDateResult;
        }
    }
    #endregion
    
    #region GetAccountTransactionCreditsFromToDatePaidToByResult Data Entity Type
    /// <summary>
    /// The getaccounttransactioncreditsfromtodatepaidtobyresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetAccountTransactionCreditsFromToDatePaidToByResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetAccountTransactionCreditsFromToDatePaidToByResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _TotalCredits;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetAccountTransactionCreditsFromToDatePaidToByResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totalcredits property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totalcredits property for the object.")]
        [DataMemberAttribute(Name = "TotalCredits")]
        [XmlElementAttribute(ElementName = "TotalCredits", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalCredits
        {
            get
            {
                return this._TotalCredits;
            }
            set
            {
                if ((this._TotalCredits != value))
                {
                    this._TotalCredits = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getaccounttransactioncreditsfromtodatepaidtobyresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetAccountTransactionCreditsFromToDatePaidToByResult entity.</returns>
        public static Data.Extended.GetAccountTransactionCreditsFromToDatePaidToByResult CreateGetAccountTransactionCreditsFromToDatePaidToByResult()
        {
            Data.Extended.GetAccountTransactionCreditsFromToDatePaidToByResult getAccountTransactionCreditsFromToDatePaidToByResult = new Data.Extended.GetAccountTransactionCreditsFromToDatePaidToByResult();
            return getAccountTransactionCreditsFromToDatePaidToByResult;
        }
    }
    #endregion
    
    #region GetAccountTransactionCreditsFromToDatePaidToByAndIDResult Data Entity Type
    /// <summary>
    /// The getaccounttransactioncreditsfromtodatepaidtobyandidresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetAccountTransactionCreditsFromToDatePaidToByAndIDResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetAccountTransactionCreditsFromToDatePaidToByAndIDResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _TotalCredits;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetAccountTransactionCreditsFromToDatePaidToByAndIDResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totalcredits property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totalcredits property for the object.")]
        [DataMemberAttribute(Name = "TotalCredits")]
        [XmlElementAttribute(ElementName = "TotalCredits", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalCredits
        {
            get
            {
                return this._TotalCredits;
            }
            set
            {
                if ((this._TotalCredits != value))
                {
                    this._TotalCredits = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getaccounttransactioncreditsfromtodatepaidtobyandidresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetAccountTransactionCreditsFromToDatePaidToByAndIDResult entity.</returns>
        public static Data.Extended.GetAccountTransactionCreditsFromToDatePaidToByAndIDResult CreateGetAccountTransactionCreditsFromToDatePaidToByAndIDResult()
        {
            Data.Extended.GetAccountTransactionCreditsFromToDatePaidToByAndIDResult getAccountTransactionCreditsFromToDatePaidToByAndIDResult = new Data.Extended.GetAccountTransactionCreditsFromToDatePaidToByAndIDResult();
            return getAccountTransactionCreditsFromToDatePaidToByAndIDResult;
        }
    }
    #endregion
    
    #region GetAccountTransactionCreditsMemberFromToDateResult Data Entity Type
    /// <summary>
    /// The getaccounttransactioncreditsmemberfromtodateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetAccountTransactionCreditsMemberFromToDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetAccountTransactionCreditsMemberFromToDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _TotalCredits;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetAccountTransactionCreditsMemberFromToDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totalcredits property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totalcredits property for the object.")]
        [DataMemberAttribute(Name = "TotalCredits")]
        [XmlElementAttribute(ElementName = "TotalCredits", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalCredits
        {
            get
            {
                return this._TotalCredits;
            }
            set
            {
                if ((this._TotalCredits != value))
                {
                    this._TotalCredits = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getaccounttransactioncreditsmemberfromtodateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetAccountTransactionCreditsMemberFromToDateResult entity.</returns>
        public static Data.Extended.GetAccountTransactionCreditsMemberFromToDateResult CreateGetAccountTransactionCreditsMemberFromToDateResult()
        {
            Data.Extended.GetAccountTransactionCreditsMemberFromToDateResult getAccountTransactionCreditsMemberFromToDateResult = new Data.Extended.GetAccountTransactionCreditsMemberFromToDateResult();
            return getAccountTransactionCreditsMemberFromToDateResult;
        }
    }
    #endregion
    
    #region GetAccountTransactionCreditsMemberFromToDateByIDResult Data Entity Type
    /// <summary>
    /// The getaccounttransactioncreditsmemberfromtodatebyidresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetAccountTransactionCreditsMemberFromToDateByIDResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetAccountTransactionCreditsMemberFromToDateByIDResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _TotalCredits;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetAccountTransactionCreditsMemberFromToDateByIDResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totalcredits property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totalcredits property for the object.")]
        [DataMemberAttribute(Name = "TotalCredits")]
        [XmlElementAttribute(ElementName = "TotalCredits", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalCredits
        {
            get
            {
                return this._TotalCredits;
            }
            set
            {
                if ((this._TotalCredits != value))
                {
                    this._TotalCredits = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getaccounttransactioncreditsmemberfromtodatebyidresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetAccountTransactionCreditsMemberFromToDateByIDResult entity.</returns>
        public static Data.Extended.GetAccountTransactionCreditsMemberFromToDateByIDResult CreateGetAccountTransactionCreditsMemberFromToDateByIDResult()
        {
            Data.Extended.GetAccountTransactionCreditsMemberFromToDateByIDResult getAccountTransactionCreditsMemberFromToDateByIDResult = new Data.Extended.GetAccountTransactionCreditsMemberFromToDateByIDResult();
            return getAccountTransactionCreditsMemberFromToDateByIDResult;
        }
    }
    #endregion
    
    #region GetAccountTransactionDebitsFromToDateResult Data Entity Type
    /// <summary>
    /// The getaccounttransactiondebitsfromtodateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetAccountTransactionDebitsFromToDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetAccountTransactionDebitsFromToDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _TotalDebits;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetAccountTransactionDebitsFromToDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totaldebits property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totaldebits property for the object.")]
        [DataMemberAttribute(Name = "TotalDebits")]
        [XmlElementAttribute(ElementName = "TotalDebits", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalDebits
        {
            get
            {
                return this._TotalDebits;
            }
            set
            {
                if ((this._TotalDebits != value))
                {
                    this._TotalDebits = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getaccounttransactiondebitsfromtodateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetAccountTransactionDebitsFromToDateResult entity.</returns>
        public static Data.Extended.GetAccountTransactionDebitsFromToDateResult CreateGetAccountTransactionDebitsFromToDateResult()
        {
            Data.Extended.GetAccountTransactionDebitsFromToDateResult getAccountTransactionDebitsFromToDateResult = new Data.Extended.GetAccountTransactionDebitsFromToDateResult();
            return getAccountTransactionDebitsFromToDateResult;
        }
    }
    #endregion
    
    #region GetAccountTransactionDebitsFromToDatePaidToByResult Data Entity Type
    /// <summary>
    /// The getaccounttransactiondebitsfromtodatepaidtobyresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetAccountTransactionDebitsFromToDatePaidToByResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetAccountTransactionDebitsFromToDatePaidToByResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _TotalDebits;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetAccountTransactionDebitsFromToDatePaidToByResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totaldebits property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totaldebits property for the object.")]
        [DataMemberAttribute(Name = "TotalDebits")]
        [XmlElementAttribute(ElementName = "TotalDebits", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalDebits
        {
            get
            {
                return this._TotalDebits;
            }
            set
            {
                if ((this._TotalDebits != value))
                {
                    this._TotalDebits = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getaccounttransactiondebitsfromtodatepaidtobyresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetAccountTransactionDebitsFromToDatePaidToByResult entity.</returns>
        public static Data.Extended.GetAccountTransactionDebitsFromToDatePaidToByResult CreateGetAccountTransactionDebitsFromToDatePaidToByResult()
        {
            Data.Extended.GetAccountTransactionDebitsFromToDatePaidToByResult getAccountTransactionDebitsFromToDatePaidToByResult = new Data.Extended.GetAccountTransactionDebitsFromToDatePaidToByResult();
            return getAccountTransactionDebitsFromToDatePaidToByResult;
        }
    }
    #endregion
    
    #region GetAccountTransactionDebitsFromToDatePaidToByAndIDResult Data Entity Type
    /// <summary>
    /// The getaccounttransactiondebitsfromtodatepaidtobyandidresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetAccountTransactionDebitsFromToDatePaidToByAndIDResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetAccountTransactionDebitsFromToDatePaidToByAndIDResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _TotalDebits;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetAccountTransactionDebitsFromToDatePaidToByAndIDResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totaldebits property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totaldebits property for the object.")]
        [DataMemberAttribute(Name = "TotalDebits")]
        [XmlElementAttribute(ElementName = "TotalDebits", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalDebits
        {
            get
            {
                return this._TotalDebits;
            }
            set
            {
                if ((this._TotalDebits != value))
                {
                    this._TotalDebits = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getaccounttransactiondebitsfromtodatepaidtobyandidresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetAccountTransactionDebitsFromToDatePaidToByAndIDResult entity.</returns>
        public static Data.Extended.GetAccountTransactionDebitsFromToDatePaidToByAndIDResult CreateGetAccountTransactionDebitsFromToDatePaidToByAndIDResult()
        {
            Data.Extended.GetAccountTransactionDebitsFromToDatePaidToByAndIDResult getAccountTransactionDebitsFromToDatePaidToByAndIDResult = new Data.Extended.GetAccountTransactionDebitsFromToDatePaidToByAndIDResult();
            return getAccountTransactionDebitsFromToDatePaidToByAndIDResult;
        }
    }
    #endregion
    
    #region GetAccountTransactionDebitsMemberFromToDateResult Data Entity Type
    /// <summary>
    /// The getaccounttransactiondebitsmemberfromtodateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetAccountTransactionDebitsMemberFromToDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetAccountTransactionDebitsMemberFromToDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _TotalDebits;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetAccountTransactionDebitsMemberFromToDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totaldebits property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totaldebits property for the object.")]
        [DataMemberAttribute(Name = "TotalDebits")]
        [XmlElementAttribute(ElementName = "TotalDebits", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalDebits
        {
            get
            {
                return this._TotalDebits;
            }
            set
            {
                if ((this._TotalDebits != value))
                {
                    this._TotalDebits = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getaccounttransactiondebitsmemberfromtodateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetAccountTransactionDebitsMemberFromToDateResult entity.</returns>
        public static Data.Extended.GetAccountTransactionDebitsMemberFromToDateResult CreateGetAccountTransactionDebitsMemberFromToDateResult()
        {
            Data.Extended.GetAccountTransactionDebitsMemberFromToDateResult getAccountTransactionDebitsMemberFromToDateResult = new Data.Extended.GetAccountTransactionDebitsMemberFromToDateResult();
            return getAccountTransactionDebitsMemberFromToDateResult;
        }
    }
    #endregion
    
    #region GetAccountTransactionDebitsMemberFromToDateByIDResult Data Entity Type
    /// <summary>
    /// The getaccounttransactiondebitsmemberfromtodatebyidresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetAccountTransactionDebitsMemberFromToDateByIDResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetAccountTransactionDebitsMemberFromToDateByIDResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _TotalDebits;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetAccountTransactionDebitsMemberFromToDateByIDResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totaldebits property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totaldebits property for the object.")]
        [DataMemberAttribute(Name = "TotalDebits")]
        [XmlElementAttribute(ElementName = "TotalDebits", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalDebits
        {
            get
            {
                return this._TotalDebits;
            }
            set
            {
                if ((this._TotalDebits != value))
                {
                    this._TotalDebits = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getaccounttransactiondebitsmemberfromtodatebyidresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetAccountTransactionDebitsMemberFromToDateByIDResult entity.</returns>
        public static Data.Extended.GetAccountTransactionDebitsMemberFromToDateByIDResult CreateGetAccountTransactionDebitsMemberFromToDateByIDResult()
        {
            Data.Extended.GetAccountTransactionDebitsMemberFromToDateByIDResult getAccountTransactionDebitsMemberFromToDateByIDResult = new Data.Extended.GetAccountTransactionDebitsMemberFromToDateByIDResult();
            return getAccountTransactionDebitsMemberFromToDateByIDResult;
        }
    }
    #endregion
    
    #region GetAccountTransactionsFromToDateResult Data Entity Type
    /// <summary>
    /// The getaccounttransactionsfromtodateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetAccountTransactionsFromToDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetAccountTransactionsFromToDateResult : DataBase
    {
        
        private int _AccountID;
        
        private string _Firstname;
        
        private string _Surname;
        
        private string _Bank;
        
        private string _AccountName;
        
        private string _BSB;
        
        private string _AccountNumber;
        
        private string _AccountType;
        
        private string _Branch;
        
        private string _PhoneNumber;
        
        private string _FaxNumber;
        
        private string _EmailAddress;
        
        private string _WebSite;
        
        private string _Comments;
        
        private System.Nullable<System.Decimal> _Balance;
        
        private int _AccountTransactionID;
        
        private int _AccountID1;
        
        private System.Nullable<System.Int32> _DataMember;
        
        private System.DateTime _PaymentDate;
        
        private string _TransactionType;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _ReferenceNumber;
        
        private string _PaidToFrom;
        
        private System.Nullable<System.Int32> _PaidToFromID;
        
        private System.Nullable<System.Int32> _PaidToFromRefID;
        
        private string _Comments1;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetAccountTransactionsFromToDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountid property for the object.")]
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this._AccountID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the firstname property for the object.")]
        [DataMemberAttribute(Name = "Firstname")]
        [XmlElementAttribute(ElementName = "Firstname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Firstname
        {
            get
            {
                return this._Firstname;
            }
            set
            {
                if ((this._Firstname != value))
                {
                    this._Firstname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the surname property for the object.")]
        [DataMemberAttribute(Name = "Surname")]
        [XmlElementAttribute(ElementName = "Surname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if ((this._Surname != value))
                {
                    this._Surname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bank property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bank property for the object.")]
        [DataMemberAttribute(Name = "Bank")]
        [XmlElementAttribute(ElementName = "Bank", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string Bank
        {
            get
            {
                return this._Bank;
            }
            set
            {
                if ((this._Bank != value))
                {
                    this._Bank = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountname property for the object.")]
        [DataMemberAttribute(Name = "AccountName")]
        [XmlElementAttribute(ElementName = "AccountName", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string AccountName
        {
            get
            {
                return this._AccountName;
            }
            set
            {
                if ((this._AccountName != value))
                {
                    this._AccountName = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bsb property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bsb property for the object.")]
        [DataMemberAttribute(Name = "BSB")]
        [XmlElementAttribute(ElementName = "BSB", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string BSB
        {
            get
            {
                return this._BSB;
            }
            set
            {
                if ((this._BSB != value))
                {
                    this._BSB = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountnumber property for the object.")]
        [DataMemberAttribute(Name = "AccountNumber")]
        [XmlElementAttribute(ElementName = "AccountNumber", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this._AccountNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accounttype property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accounttype property for the object.")]
        [DataMemberAttribute(Name = "AccountType")]
        [XmlElementAttribute(ElementName = "AccountType", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string AccountType
        {
            get
            {
                return this._AccountType;
            }
            set
            {
                if ((this._AccountType != value))
                {
                    this._AccountType = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the branch property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the branch property for the object.")]
        [DataMemberAttribute(Name = "Branch")]
        [XmlElementAttribute(ElementName = "Branch", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Branch
        {
            get
            {
                return this._Branch;
            }
            set
            {
                if ((this._Branch != value))
                {
                    this._Branch = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the phonenumber property for the object.")]
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this._PhoneNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the faxnumber property for the object.")]
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this._FaxNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the emailaddress property for the object.")]
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this._EmailAddress = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the website property for the object.")]
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this._WebSite = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the balance property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the balance property for the object.")]
        [DataMemberAttribute(Name = "Balance")]
        [XmlElementAttribute(ElementName = "Balance", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Balance
        {
            get
            {
                return this._Balance;
            }
            set
            {
                if ((this._Balance != value))
                {
                    this._Balance = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accounttransactionid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accounttransactionid property for the object.")]
        [DataMemberAttribute(Name = "AccountTransactionID")]
        [XmlElementAttribute(ElementName = "AccountTransactionID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountTransactionID
        {
            get
            {
                return this._AccountTransactionID;
            }
            set
            {
                if ((this._AccountTransactionID != value))
                {
                    this._AccountTransactionID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountid1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountid1 property for the object.")]
        [DataMemberAttribute(Name = "AccountID1")]
        [XmlElementAttribute(ElementName = "AccountID1", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountID1
        {
            get
            {
                return this._AccountID1;
            }
            set
            {
                if ((this._AccountID1 != value))
                {
                    this._AccountID1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the datamember property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the datamember property for the object.")]
        [DataMemberAttribute(Name = "DataMember")]
        [XmlElementAttribute(ElementName = "DataMember", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int32> DataMember
        {
            get
            {
                return this._DataMember;
            }
            set
            {
                if ((this._DataMember != value))
                {
                    this._DataMember = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the transactiontype property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the transactiontype property for the object.")]
        [DataMemberAttribute(Name = "TransactionType")]
        [XmlElementAttribute(ElementName = "TransactionType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string TransactionType
        {
            get
            {
                return this._TransactionType;
            }
            set
            {
                if ((this._TransactionType != value))
                {
                    this._TransactionType = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amount property for the object.")]
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this._Amount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the referencenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the referencenumber property for the object.")]
        [DataMemberAttribute(Name = "ReferenceNumber")]
        [XmlElementAttribute(ElementName = "ReferenceNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string ReferenceNumber
        {
            get
            {
                return this._ReferenceNumber;
            }
            set
            {
                if ((this._ReferenceNumber != value))
                {
                    this._ReferenceNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofrom property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paidtofrom property for the object.")]
        [DataMemberAttribute(Name = "PaidToFrom")]
        [XmlElementAttribute(ElementName = "PaidToFrom", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PaidToFrom
        {
            get
            {
                return this._PaidToFrom;
            }
            set
            {
                if ((this._PaidToFrom != value))
                {
                    this._PaidToFrom = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofromid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paidtofromid property for the object.")]
        [DataMemberAttribute(Name = "PaidToFromID")]
        [XmlElementAttribute(ElementName = "PaidToFromID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int32> PaidToFromID
        {
            get
            {
                return this._PaidToFromID;
            }
            set
            {
                if ((this._PaidToFromID != value))
                {
                    this._PaidToFromID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofromrefid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paidtofromrefid property for the object.")]
        [DataMemberAttribute(Name = "PaidToFromRefID")]
        [XmlElementAttribute(ElementName = "PaidToFromRefID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int32> PaidToFromRefID
        {
            get
            {
                return this._PaidToFromRefID;
            }
            set
            {
                if ((this._PaidToFromRefID != value))
                {
                    this._PaidToFromRefID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments1 property for the object.")]
        [DataMemberAttribute(Name = "Comments1")]
        [XmlElementAttribute(ElementName = "Comments1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments1
        {
            get
            {
                return this._Comments1;
            }
            set
            {
                if ((this._Comments1 != value))
                {
                    this._Comments1 = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getaccounttransactionsfromtodateresult data entity.
        /// </summary>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="bank">Initial value of Bank.</param>
        /// <param name="bSB">Initial value of BSB.</param>
        /// <param name="accountNumber">Initial value of AccountNumber.</param>
        /// <param name="accountTransactionID">Initial value of AccountTransactionID.</param>
        /// <param name="accountID1">Initial value of AccountID1.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="transactionType">Initial value of TransactionType.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.Extended.GetAccountTransactionsFromToDateResult entity.</returns>
        public static Data.Extended.GetAccountTransactionsFromToDateResult CreateGetAccountTransactionsFromToDateResult(int accountID, string bank, string bSB, string accountNumber, int accountTransactionID, int accountID1, System.DateTime paymentDate, string transactionType, decimal amount)
        {
            Data.Extended.GetAccountTransactionsFromToDateResult getAccountTransactionsFromToDateResult = new Data.Extended.GetAccountTransactionsFromToDateResult();
            getAccountTransactionsFromToDateResult.AccountID = accountID;
            getAccountTransactionsFromToDateResult.Bank = bank;
            getAccountTransactionsFromToDateResult.BSB = bSB;
            getAccountTransactionsFromToDateResult.AccountNumber = accountNumber;
            getAccountTransactionsFromToDateResult.AccountTransactionID = accountTransactionID;
            getAccountTransactionsFromToDateResult.AccountID1 = accountID1;
            getAccountTransactionsFromToDateResult.PaymentDate = paymentDate;
            getAccountTransactionsFromToDateResult.TransactionType = transactionType;
            getAccountTransactionsFromToDateResult.Amount = amount;
            return getAccountTransactionsFromToDateResult;
        }
    }
    #endregion
    
    #region GetAccountTransactionsFromToDatePaidToByResult Data Entity Type
    /// <summary>
    /// The getaccounttransactionsfromtodatepaidtobyresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetAccountTransactionsFromToDatePaidToByResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetAccountTransactionsFromToDatePaidToByResult : DataBase
    {
        
        private int _AccountID;
        
        private string _Firstname;
        
        private string _Surname;
        
        private string _Bank;
        
        private string _AccountName;
        
        private string _BSB;
        
        private string _AccountNumber;
        
        private string _AccountType;
        
        private string _Branch;
        
        private string _PhoneNumber;
        
        private string _FaxNumber;
        
        private string _EmailAddress;
        
        private string _WebSite;
        
        private string _Comments;
        
        private System.Nullable<System.Decimal> _Balance;
        
        private int _AccountTransactionID;
        
        private int _AccountID1;
        
        private System.Nullable<System.Int32> _DataMember;
        
        private System.DateTime _PaymentDate;
        
        private string _TransactionType;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _ReferenceNumber;
        
        private string _PaidToFrom;
        
        private System.Nullable<System.Int32> _PaidToFromID;
        
        private System.Nullable<System.Int32> _PaidToFromRefID;
        
        private string _Comments1;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetAccountTransactionsFromToDatePaidToByResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountid property for the object.")]
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this._AccountID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the firstname property for the object.")]
        [DataMemberAttribute(Name = "Firstname")]
        [XmlElementAttribute(ElementName = "Firstname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Firstname
        {
            get
            {
                return this._Firstname;
            }
            set
            {
                if ((this._Firstname != value))
                {
                    this._Firstname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the surname property for the object.")]
        [DataMemberAttribute(Name = "Surname")]
        [XmlElementAttribute(ElementName = "Surname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if ((this._Surname != value))
                {
                    this._Surname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bank property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bank property for the object.")]
        [DataMemberAttribute(Name = "Bank")]
        [XmlElementAttribute(ElementName = "Bank", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string Bank
        {
            get
            {
                return this._Bank;
            }
            set
            {
                if ((this._Bank != value))
                {
                    this._Bank = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountname property for the object.")]
        [DataMemberAttribute(Name = "AccountName")]
        [XmlElementAttribute(ElementName = "AccountName", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string AccountName
        {
            get
            {
                return this._AccountName;
            }
            set
            {
                if ((this._AccountName != value))
                {
                    this._AccountName = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bsb property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bsb property for the object.")]
        [DataMemberAttribute(Name = "BSB")]
        [XmlElementAttribute(ElementName = "BSB", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string BSB
        {
            get
            {
                return this._BSB;
            }
            set
            {
                if ((this._BSB != value))
                {
                    this._BSB = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountnumber property for the object.")]
        [DataMemberAttribute(Name = "AccountNumber")]
        [XmlElementAttribute(ElementName = "AccountNumber", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this._AccountNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accounttype property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accounttype property for the object.")]
        [DataMemberAttribute(Name = "AccountType")]
        [XmlElementAttribute(ElementName = "AccountType", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string AccountType
        {
            get
            {
                return this._AccountType;
            }
            set
            {
                if ((this._AccountType != value))
                {
                    this._AccountType = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the branch property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the branch property for the object.")]
        [DataMemberAttribute(Name = "Branch")]
        [XmlElementAttribute(ElementName = "Branch", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Branch
        {
            get
            {
                return this._Branch;
            }
            set
            {
                if ((this._Branch != value))
                {
                    this._Branch = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the phonenumber property for the object.")]
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this._PhoneNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the faxnumber property for the object.")]
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this._FaxNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the emailaddress property for the object.")]
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this._EmailAddress = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the website property for the object.")]
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this._WebSite = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the balance property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the balance property for the object.")]
        [DataMemberAttribute(Name = "Balance")]
        [XmlElementAttribute(ElementName = "Balance", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Balance
        {
            get
            {
                return this._Balance;
            }
            set
            {
                if ((this._Balance != value))
                {
                    this._Balance = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accounttransactionid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accounttransactionid property for the object.")]
        [DataMemberAttribute(Name = "AccountTransactionID")]
        [XmlElementAttribute(ElementName = "AccountTransactionID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountTransactionID
        {
            get
            {
                return this._AccountTransactionID;
            }
            set
            {
                if ((this._AccountTransactionID != value))
                {
                    this._AccountTransactionID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountid1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountid1 property for the object.")]
        [DataMemberAttribute(Name = "AccountID1")]
        [XmlElementAttribute(ElementName = "AccountID1", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountID1
        {
            get
            {
                return this._AccountID1;
            }
            set
            {
                if ((this._AccountID1 != value))
                {
                    this._AccountID1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the datamember property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the datamember property for the object.")]
        [DataMemberAttribute(Name = "DataMember")]
        [XmlElementAttribute(ElementName = "DataMember", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int32> DataMember
        {
            get
            {
                return this._DataMember;
            }
            set
            {
                if ((this._DataMember != value))
                {
                    this._DataMember = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the transactiontype property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the transactiontype property for the object.")]
        [DataMemberAttribute(Name = "TransactionType")]
        [XmlElementAttribute(ElementName = "TransactionType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string TransactionType
        {
            get
            {
                return this._TransactionType;
            }
            set
            {
                if ((this._TransactionType != value))
                {
                    this._TransactionType = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amount property for the object.")]
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this._Amount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the referencenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the referencenumber property for the object.")]
        [DataMemberAttribute(Name = "ReferenceNumber")]
        [XmlElementAttribute(ElementName = "ReferenceNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string ReferenceNumber
        {
            get
            {
                return this._ReferenceNumber;
            }
            set
            {
                if ((this._ReferenceNumber != value))
                {
                    this._ReferenceNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofrom property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paidtofrom property for the object.")]
        [DataMemberAttribute(Name = "PaidToFrom")]
        [XmlElementAttribute(ElementName = "PaidToFrom", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PaidToFrom
        {
            get
            {
                return this._PaidToFrom;
            }
            set
            {
                if ((this._PaidToFrom != value))
                {
                    this._PaidToFrom = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofromid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paidtofromid property for the object.")]
        [DataMemberAttribute(Name = "PaidToFromID")]
        [XmlElementAttribute(ElementName = "PaidToFromID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int32> PaidToFromID
        {
            get
            {
                return this._PaidToFromID;
            }
            set
            {
                if ((this._PaidToFromID != value))
                {
                    this._PaidToFromID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofromrefid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paidtofromrefid property for the object.")]
        [DataMemberAttribute(Name = "PaidToFromRefID")]
        [XmlElementAttribute(ElementName = "PaidToFromRefID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int32> PaidToFromRefID
        {
            get
            {
                return this._PaidToFromRefID;
            }
            set
            {
                if ((this._PaidToFromRefID != value))
                {
                    this._PaidToFromRefID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments1 property for the object.")]
        [DataMemberAttribute(Name = "Comments1")]
        [XmlElementAttribute(ElementName = "Comments1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments1
        {
            get
            {
                return this._Comments1;
            }
            set
            {
                if ((this._Comments1 != value))
                {
                    this._Comments1 = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getaccounttransactionsfromtodatepaidtobyresult data entity.
        /// </summary>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="bank">Initial value of Bank.</param>
        /// <param name="bSB">Initial value of BSB.</param>
        /// <param name="accountNumber">Initial value of AccountNumber.</param>
        /// <param name="accountTransactionID">Initial value of AccountTransactionID.</param>
        /// <param name="accountID1">Initial value of AccountID1.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="transactionType">Initial value of TransactionType.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.Extended.GetAccountTransactionsFromToDatePaidToByResult entity.</returns>
        public static Data.Extended.GetAccountTransactionsFromToDatePaidToByResult CreateGetAccountTransactionsFromToDatePaidToByResult(int accountID, string bank, string bSB, string accountNumber, int accountTransactionID, int accountID1, System.DateTime paymentDate, string transactionType, decimal amount)
        {
            Data.Extended.GetAccountTransactionsFromToDatePaidToByResult getAccountTransactionsFromToDatePaidToByResult = new Data.Extended.GetAccountTransactionsFromToDatePaidToByResult();
            getAccountTransactionsFromToDatePaidToByResult.AccountID = accountID;
            getAccountTransactionsFromToDatePaidToByResult.Bank = bank;
            getAccountTransactionsFromToDatePaidToByResult.BSB = bSB;
            getAccountTransactionsFromToDatePaidToByResult.AccountNumber = accountNumber;
            getAccountTransactionsFromToDatePaidToByResult.AccountTransactionID = accountTransactionID;
            getAccountTransactionsFromToDatePaidToByResult.AccountID1 = accountID1;
            getAccountTransactionsFromToDatePaidToByResult.PaymentDate = paymentDate;
            getAccountTransactionsFromToDatePaidToByResult.TransactionType = transactionType;
            getAccountTransactionsFromToDatePaidToByResult.Amount = amount;
            return getAccountTransactionsFromToDatePaidToByResult;
        }
    }
    #endregion
    
    #region GetAccountTransactionsFromToDatePaidToByAndIDResult Data Entity Type
    /// <summary>
    /// The getaccounttransactionsfromtodatepaidtobyandidresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetAccountTransactionsFromToDatePaidToByAndIDResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetAccountTransactionsFromToDatePaidToByAndIDResult : DataBase
    {
        
        private int _AccountID;
        
        private string _Firstname;
        
        private string _Surname;
        
        private string _Bank;
        
        private string _AccountName;
        
        private string _BSB;
        
        private string _AccountNumber;
        
        private string _AccountType;
        
        private string _Branch;
        
        private string _PhoneNumber;
        
        private string _FaxNumber;
        
        private string _EmailAddress;
        
        private string _WebSite;
        
        private string _Comments;
        
        private System.Nullable<System.Decimal> _Balance;
        
        private int _AccountTransactionID;
        
        private int _AccountID1;
        
        private System.Nullable<System.Int32> _DataMember;
        
        private System.DateTime _PaymentDate;
        
        private string _TransactionType;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _ReferenceNumber;
        
        private string _PaidToFrom;
        
        private System.Nullable<System.Int32> _PaidToFromID;
        
        private System.Nullable<System.Int32> _PaidToFromRefID;
        
        private string _Comments1;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetAccountTransactionsFromToDatePaidToByAndIDResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountid property for the object.")]
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this._AccountID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the firstname property for the object.")]
        [DataMemberAttribute(Name = "Firstname")]
        [XmlElementAttribute(ElementName = "Firstname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Firstname
        {
            get
            {
                return this._Firstname;
            }
            set
            {
                if ((this._Firstname != value))
                {
                    this._Firstname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the surname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the surname property for the object.")]
        [DataMemberAttribute(Name = "Surname")]
        [XmlElementAttribute(ElementName = "Surname", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Surname
        {
            get
            {
                return this._Surname;
            }
            set
            {
                if ((this._Surname != value))
                {
                    this._Surname = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bank property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bank property for the object.")]
        [DataMemberAttribute(Name = "Bank")]
        [XmlElementAttribute(ElementName = "Bank", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string Bank
        {
            get
            {
                return this._Bank;
            }
            set
            {
                if ((this._Bank != value))
                {
                    this._Bank = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountname property for the object.")]
        [DataMemberAttribute(Name = "AccountName")]
        [XmlElementAttribute(ElementName = "AccountName", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string AccountName
        {
            get
            {
                return this._AccountName;
            }
            set
            {
                if ((this._AccountName != value))
                {
                    this._AccountName = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bsb property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bsb property for the object.")]
        [DataMemberAttribute(Name = "BSB")]
        [XmlElementAttribute(ElementName = "BSB", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string BSB
        {
            get
            {
                return this._BSB;
            }
            set
            {
                if ((this._BSB != value))
                {
                    this._BSB = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountnumber property for the object.")]
        [DataMemberAttribute(Name = "AccountNumber")]
        [XmlElementAttribute(ElementName = "AccountNumber", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this._AccountNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accounttype property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accounttype property for the object.")]
        [DataMemberAttribute(Name = "AccountType")]
        [XmlElementAttribute(ElementName = "AccountType", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string AccountType
        {
            get
            {
                return this._AccountType;
            }
            set
            {
                if ((this._AccountType != value))
                {
                    this._AccountType = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the branch property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the branch property for the object.")]
        [DataMemberAttribute(Name = "Branch")]
        [XmlElementAttribute(ElementName = "Branch", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Branch
        {
            get
            {
                return this._Branch;
            }
            set
            {
                if ((this._Branch != value))
                {
                    this._Branch = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the phonenumber property for the object.")]
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this._PhoneNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the faxnumber property for the object.")]
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this._FaxNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the emailaddress property for the object.")]
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this._EmailAddress = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the website property for the object.")]
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this._WebSite = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the balance property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the balance property for the object.")]
        [DataMemberAttribute(Name = "Balance")]
        [XmlElementAttribute(ElementName = "Balance", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Balance
        {
            get
            {
                return this._Balance;
            }
            set
            {
                if ((this._Balance != value))
                {
                    this._Balance = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accounttransactionid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accounttransactionid property for the object.")]
        [DataMemberAttribute(Name = "AccountTransactionID")]
        [XmlElementAttribute(ElementName = "AccountTransactionID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountTransactionID
        {
            get
            {
                return this._AccountTransactionID;
            }
            set
            {
                if ((this._AccountTransactionID != value))
                {
                    this._AccountTransactionID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountid1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountid1 property for the object.")]
        [DataMemberAttribute(Name = "AccountID1")]
        [XmlElementAttribute(ElementName = "AccountID1", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountID1
        {
            get
            {
                return this._AccountID1;
            }
            set
            {
                if ((this._AccountID1 != value))
                {
                    this._AccountID1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the datamember property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the datamember property for the object.")]
        [DataMemberAttribute(Name = "DataMember")]
        [XmlElementAttribute(ElementName = "DataMember", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int32> DataMember
        {
            get
            {
                return this._DataMember;
            }
            set
            {
                if ((this._DataMember != value))
                {
                    this._DataMember = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the transactiontype property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the transactiontype property for the object.")]
        [DataMemberAttribute(Name = "TransactionType")]
        [XmlElementAttribute(ElementName = "TransactionType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string TransactionType
        {
            get
            {
                return this._TransactionType;
            }
            set
            {
                if ((this._TransactionType != value))
                {
                    this._TransactionType = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amount property for the object.")]
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this._Amount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the referencenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the referencenumber property for the object.")]
        [DataMemberAttribute(Name = "ReferenceNumber")]
        [XmlElementAttribute(ElementName = "ReferenceNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string ReferenceNumber
        {
            get
            {
                return this._ReferenceNumber;
            }
            set
            {
                if ((this._ReferenceNumber != value))
                {
                    this._ReferenceNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofrom property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paidtofrom property for the object.")]
        [DataMemberAttribute(Name = "PaidToFrom")]
        [XmlElementAttribute(ElementName = "PaidToFrom", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PaidToFrom
        {
            get
            {
                return this._PaidToFrom;
            }
            set
            {
                if ((this._PaidToFrom != value))
                {
                    this._PaidToFrom = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofromid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paidtofromid property for the object.")]
        [DataMemberAttribute(Name = "PaidToFromID")]
        [XmlElementAttribute(ElementName = "PaidToFromID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int32> PaidToFromID
        {
            get
            {
                return this._PaidToFromID;
            }
            set
            {
                if ((this._PaidToFromID != value))
                {
                    this._PaidToFromID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofromrefid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paidtofromrefid property for the object.")]
        [DataMemberAttribute(Name = "PaidToFromRefID")]
        [XmlElementAttribute(ElementName = "PaidToFromRefID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int32> PaidToFromRefID
        {
            get
            {
                return this._PaidToFromRefID;
            }
            set
            {
                if ((this._PaidToFromRefID != value))
                {
                    this._PaidToFromRefID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments1 property for the object.")]
        [DataMemberAttribute(Name = "Comments1")]
        [XmlElementAttribute(ElementName = "Comments1", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments1
        {
            get
            {
                return this._Comments1;
            }
            set
            {
                if ((this._Comments1 != value))
                {
                    this._Comments1 = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getaccounttransactionsfromtodatepaidtobyandidresult data entity.
        /// </summary>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="bank">Initial value of Bank.</param>
        /// <param name="bSB">Initial value of BSB.</param>
        /// <param name="accountNumber">Initial value of AccountNumber.</param>
        /// <param name="accountTransactionID">Initial value of AccountTransactionID.</param>
        /// <param name="accountID1">Initial value of AccountID1.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="transactionType">Initial value of TransactionType.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.Extended.GetAccountTransactionsFromToDatePaidToByAndIDResult entity.</returns>
        public static Data.Extended.GetAccountTransactionsFromToDatePaidToByAndIDResult CreateGetAccountTransactionsFromToDatePaidToByAndIDResult(int accountID, string bank, string bSB, string accountNumber, int accountTransactionID, int accountID1, System.DateTime paymentDate, string transactionType, decimal amount)
        {
            Data.Extended.GetAccountTransactionsFromToDatePaidToByAndIDResult getAccountTransactionsFromToDatePaidToByAndIDResult = new Data.Extended.GetAccountTransactionsFromToDatePaidToByAndIDResult();
            getAccountTransactionsFromToDatePaidToByAndIDResult.AccountID = accountID;
            getAccountTransactionsFromToDatePaidToByAndIDResult.Bank = bank;
            getAccountTransactionsFromToDatePaidToByAndIDResult.BSB = bSB;
            getAccountTransactionsFromToDatePaidToByAndIDResult.AccountNumber = accountNumber;
            getAccountTransactionsFromToDatePaidToByAndIDResult.AccountTransactionID = accountTransactionID;
            getAccountTransactionsFromToDatePaidToByAndIDResult.AccountID1 = accountID1;
            getAccountTransactionsFromToDatePaidToByAndIDResult.PaymentDate = paymentDate;
            getAccountTransactionsFromToDatePaidToByAndIDResult.TransactionType = transactionType;
            getAccountTransactionsFromToDatePaidToByAndIDResult.Amount = amount;
            return getAccountTransactionsFromToDatePaidToByAndIDResult;
        }
    }
    #endregion
    
    #region GetAccountTransactionsMemberFromToDateResult Data Entity Type
    /// <summary>
    /// The getaccounttransactionsmemberfromtodateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetAccountTransactionsMemberFromToDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetAccountTransactionsMemberFromToDateResult : DataBase
    {
        
        private int _AccountTransactionID;
        
        private int _AccountID;
        
        private System.Nullable<System.Int32> _DataMember;
        
        private System.DateTime _PaymentDate;
        
        private string _TransactionType;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _ReferenceNumber;
        
        private string _PaidToFrom;
        
        private System.Nullable<System.Int32> _PaidToFromID;
        
        private System.Nullable<System.Int32> _PaidToFromRefID;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetAccountTransactionsMemberFromToDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the accounttransactionid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accounttransactionid property for the object.")]
        [DataMemberAttribute(Name = "AccountTransactionID")]
        [XmlElementAttribute(ElementName = "AccountTransactionID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountTransactionID
        {
            get
            {
                return this._AccountTransactionID;
            }
            set
            {
                if ((this._AccountTransactionID != value))
                {
                    this._AccountTransactionID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountid property for the object.")]
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this._AccountID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the datamember property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the datamember property for the object.")]
        [DataMemberAttribute(Name = "DataMember")]
        [XmlElementAttribute(ElementName = "DataMember", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int32> DataMember
        {
            get
            {
                return this._DataMember;
            }
            set
            {
                if ((this._DataMember != value))
                {
                    this._DataMember = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the transactiontype property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the transactiontype property for the object.")]
        [DataMemberAttribute(Name = "TransactionType")]
        [XmlElementAttribute(ElementName = "TransactionType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string TransactionType
        {
            get
            {
                return this._TransactionType;
            }
            set
            {
                if ((this._TransactionType != value))
                {
                    this._TransactionType = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amount property for the object.")]
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this._Amount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the referencenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the referencenumber property for the object.")]
        [DataMemberAttribute(Name = "ReferenceNumber")]
        [XmlElementAttribute(ElementName = "ReferenceNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string ReferenceNumber
        {
            get
            {
                return this._ReferenceNumber;
            }
            set
            {
                if ((this._ReferenceNumber != value))
                {
                    this._ReferenceNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofrom property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paidtofrom property for the object.")]
        [DataMemberAttribute(Name = "PaidToFrom")]
        [XmlElementAttribute(ElementName = "PaidToFrom", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PaidToFrom
        {
            get
            {
                return this._PaidToFrom;
            }
            set
            {
                if ((this._PaidToFrom != value))
                {
                    this._PaidToFrom = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofromid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paidtofromid property for the object.")]
        [DataMemberAttribute(Name = "PaidToFromID")]
        [XmlElementAttribute(ElementName = "PaidToFromID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int32> PaidToFromID
        {
            get
            {
                return this._PaidToFromID;
            }
            set
            {
                if ((this._PaidToFromID != value))
                {
                    this._PaidToFromID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofromrefid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paidtofromrefid property for the object.")]
        [DataMemberAttribute(Name = "PaidToFromRefID")]
        [XmlElementAttribute(ElementName = "PaidToFromRefID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int32> PaidToFromRefID
        {
            get
            {
                return this._PaidToFromRefID;
            }
            set
            {
                if ((this._PaidToFromRefID != value))
                {
                    this._PaidToFromRefID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getaccounttransactionsmemberfromtodateresult data entity.
        /// </summary>
        /// <param name="accountTransactionID">Initial value of AccountTransactionID.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="transactionType">Initial value of TransactionType.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.Extended.GetAccountTransactionsMemberFromToDateResult entity.</returns>
        public static Data.Extended.GetAccountTransactionsMemberFromToDateResult CreateGetAccountTransactionsMemberFromToDateResult(int accountTransactionID, int accountID, System.DateTime paymentDate, string transactionType, decimal amount)
        {
            Data.Extended.GetAccountTransactionsMemberFromToDateResult getAccountTransactionsMemberFromToDateResult = new Data.Extended.GetAccountTransactionsMemberFromToDateResult();
            getAccountTransactionsMemberFromToDateResult.AccountTransactionID = accountTransactionID;
            getAccountTransactionsMemberFromToDateResult.AccountID = accountID;
            getAccountTransactionsMemberFromToDateResult.PaymentDate = paymentDate;
            getAccountTransactionsMemberFromToDateResult.TransactionType = transactionType;
            getAccountTransactionsMemberFromToDateResult.Amount = amount;
            return getAccountTransactionsMemberFromToDateResult;
        }
    }
    #endregion
    
    #region GetAccountTransactionsMemberFromToDateByIDResult Data Entity Type
    /// <summary>
    /// The getaccounttransactionsmemberfromtodatebyidresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetAccountTransactionsMemberFromToDateByIDResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetAccountTransactionsMemberFromToDateByIDResult : DataBase
    {
        
        private int _AccountTransactionID;
        
        private int _AccountID;
        
        private System.Nullable<System.Int32> _DataMember;
        
        private System.DateTime _PaymentDate;
        
        private string _TransactionType;
        
        private decimal _Amount;
        
        private string _Description;
        
        private string _ReferenceNumber;
        
        private string _PaidToFrom;
        
        private System.Nullable<System.Int32> _PaidToFromID;
        
        private System.Nullable<System.Int32> _PaidToFromRefID;
        
        private string _Comments;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetAccountTransactionsMemberFromToDateByIDResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the accounttransactionid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accounttransactionid property for the object.")]
        [DataMemberAttribute(Name = "AccountTransactionID")]
        [XmlElementAttribute(ElementName = "AccountTransactionID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountTransactionID
        {
            get
            {
                return this._AccountTransactionID;
            }
            set
            {
                if ((this._AccountTransactionID != value))
                {
                    this._AccountTransactionID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accountid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accountid property for the object.")]
        [DataMemberAttribute(Name = "AccountID")]
        [XmlElementAttribute(ElementName = "AccountID", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public int AccountID
        {
            get
            {
                return this._AccountID;
            }
            set
            {
                if ((this._AccountID != value))
                {
                    this._AccountID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the datamember property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the datamember property for the object.")]
        [DataMemberAttribute(Name = "DataMember")]
        [XmlElementAttribute(ElementName = "DataMember", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int32> DataMember
        {
            get
            {
                return this._DataMember;
            }
            set
            {
                if ((this._DataMember != value))
                {
                    this._DataMember = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paymentdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paymentdate property for the object.")]
        [DataMemberAttribute(Name = "PaymentDate")]
        [XmlElementAttribute(ElementName = "PaymentDate", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public System.DateTime PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this._PaymentDate = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the transactiontype property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the transactiontype property for the object.")]
        [DataMemberAttribute(Name = "TransactionType")]
        [XmlElementAttribute(ElementName = "TransactionType", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public string TransactionType
        {
            get
            {
                return this._TransactionType;
            }
            set
            {
                if ((this._TransactionType != value))
                {
                    this._TransactionType = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the amount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the amount property for the object.")]
        [DataMemberAttribute(Name = "Amount")]
        [XmlElementAttribute(ElementName = "Amount", IsNullable = false)]
        [SoapElementAttribute(IsNullable = false)]
        public decimal Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this._Amount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the description property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the description property for the object.")]
        [DataMemberAttribute(Name = "Description")]
        [XmlElementAttribute(ElementName = "Description", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this._Description = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the referencenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the referencenumber property for the object.")]
        [DataMemberAttribute(Name = "ReferenceNumber")]
        [XmlElementAttribute(ElementName = "ReferenceNumber", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string ReferenceNumber
        {
            get
            {
                return this._ReferenceNumber;
            }
            set
            {
                if ((this._ReferenceNumber != value))
                {
                    this._ReferenceNumber = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofrom property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paidtofrom property for the object.")]
        [DataMemberAttribute(Name = "PaidToFrom")]
        [XmlElementAttribute(ElementName = "PaidToFrom", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string PaidToFrom
        {
            get
            {
                return this._PaidToFrom;
            }
            set
            {
                if ((this._PaidToFrom != value))
                {
                    this._PaidToFrom = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofromid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paidtofromid property for the object.")]
        [DataMemberAttribute(Name = "PaidToFromID")]
        [XmlElementAttribute(ElementName = "PaidToFromID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int32> PaidToFromID
        {
            get
            {
                return this._PaidToFromID;
            }
            set
            {
                if ((this._PaidToFromID != value))
                {
                    this._PaidToFromID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the paidtofromrefid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the paidtofromrefid property for the object.")]
        [DataMemberAttribute(Name = "PaidToFromRefID")]
        [XmlElementAttribute(ElementName = "PaidToFromRefID", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Int32> PaidToFromRefID
        {
            get
            {
                return this._PaidToFromRefID;
            }
            set
            {
                if ((this._PaidToFromRefID != value))
                {
                    this._PaidToFromRefID = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this._Comments = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getaccounttransactionsmemberfromtodatebyidresult data entity.
        /// </summary>
        /// <param name="accountTransactionID">Initial value of AccountTransactionID.</param>
        /// <param name="accountID">Initial value of AccountID.</param>
        /// <param name="paymentDate">Initial value of PaymentDate.</param>
        /// <param name="transactionType">Initial value of TransactionType.</param>
        /// <param name="amount">Initial value of Amount.</param>
        /// <returns>The Data.Extended.GetAccountTransactionsMemberFromToDateByIDResult entity.</returns>
        public static Data.Extended.GetAccountTransactionsMemberFromToDateByIDResult CreateGetAccountTransactionsMemberFromToDateByIDResult(int accountTransactionID, int accountID, System.DateTime paymentDate, string transactionType, decimal amount)
        {
            Data.Extended.GetAccountTransactionsMemberFromToDateByIDResult getAccountTransactionsMemberFromToDateByIDResult = new Data.Extended.GetAccountTransactionsMemberFromToDateByIDResult();
            getAccountTransactionsMemberFromToDateByIDResult.AccountTransactionID = accountTransactionID;
            getAccountTransactionsMemberFromToDateByIDResult.AccountID = accountID;
            getAccountTransactionsMemberFromToDateByIDResult.PaymentDate = paymentDate;
            getAccountTransactionsMemberFromToDateByIDResult.TransactionType = transactionType;
            getAccountTransactionsMemberFromToDateByIDResult.Amount = amount;
            return getAccountTransactionsMemberFromToDateByIDResult;
        }
    }
    #endregion
}

#pragma warning restore 169
