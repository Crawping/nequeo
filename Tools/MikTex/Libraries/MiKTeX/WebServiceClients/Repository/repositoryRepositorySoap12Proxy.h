/* repositoryRepositorySoap12Proxy.h
   Generated by gSOAP 2.8.8 from Repository.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef repositoryRepositorySoap12Proxy_H
#define repositoryRepositorySoap12Proxy_H
#include "repositoryH.h"

class SOAP_CMAC RepositorySoap12Proxy : public soap
{ public:
	/// Endpoint URL of service 'RepositorySoap12Proxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	RepositorySoap12Proxy();
	/// Construct from another engine state
	RepositorySoap12Proxy(const struct soap&);
	/// Constructor with endpoint URL
	RepositorySoap12Proxy(const char *url);
	/// Constructor with engine input+output mode control
	RepositorySoap12Proxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	RepositorySoap12Proxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	RepositorySoap12Proxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~RepositorySoap12Proxy();
	/// Initializer used by constructors
	virtual	void RepositorySoap12Proxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (uses soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to default
	virtual	void reset();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif

	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'TryGetRepositoryInfo' (returns error code or SOAP_OK)
	virtual	int TryGetRepositoryInfo(_mtrep__TryGetRepositoryInfo *mtrep__TryGetRepositoryInfo, _mtrep__TryGetRepositoryInfoResponse *mtrep__TryGetRepositoryInfoResponse) { return TryGetRepositoryInfo(NULL, NULL, mtrep__TryGetRepositoryInfo, mtrep__TryGetRepositoryInfoResponse); }
	virtual	int TryGetRepositoryInfo(const char *endpoint, const char *soap_action, _mtrep__TryGetRepositoryInfo *mtrep__TryGetRepositoryInfo, _mtrep__TryGetRepositoryInfoResponse *mtrep__TryGetRepositoryInfoResponse);

	/// Web service operation 'PickRepository' (returns error code or SOAP_OK)
	virtual	int PickRepository(_mtrep__PickRepository *mtrep__PickRepository, _mtrep__PickRepositoryResponse *mtrep__PickRepositoryResponse) { return PickRepository(NULL, NULL, mtrep__PickRepository, mtrep__PickRepositoryResponse); }
	virtual	int PickRepository(const char *endpoint, const char *soap_action, _mtrep__PickRepository *mtrep__PickRepository, _mtrep__PickRepositoryResponse *mtrep__PickRepositoryResponse);

	/// Web service operation 'GetAllRepositories' (returns error code or SOAP_OK)
	virtual	int GetAllRepositories(_mtrep__GetAllRepositories *mtrep__GetAllRepositories, _mtrep__GetAllRepositoriesResponse *mtrep__GetAllRepositoriesResponse) { return GetAllRepositories(NULL, NULL, mtrep__GetAllRepositories, mtrep__GetAllRepositoriesResponse); }
	virtual	int GetAllRepositories(const char *endpoint, const char *soap_action, _mtrep__GetAllRepositories *mtrep__GetAllRepositories, _mtrep__GetAllRepositoriesResponse *mtrep__GetAllRepositoriesResponse);

	/// Web service operation 'GetRepositories' (returns error code or SOAP_OK)
	virtual	int GetRepositories(_mtrep__GetRepositories *mtrep__GetRepositories, _mtrep__GetRepositoriesResponse *mtrep__GetRepositoriesResponse) { return GetRepositories(NULL, NULL, mtrep__GetRepositories, mtrep__GetRepositoriesResponse); }
	virtual	int GetRepositories(const char *endpoint, const char *soap_action, _mtrep__GetRepositories *mtrep__GetRepositories, _mtrep__GetRepositoriesResponse *mtrep__GetRepositoriesResponse);

	/// Web service operation 'GetListCreationTime' (returns error code or SOAP_OK)
	virtual	int GetListCreationTime(_mtrep2__GetListCreationTime *mtrep2__GetListCreationTime, _mtrep2__GetListCreationTimeResponse *mtrep2__GetListCreationTimeResponse) { return GetListCreationTime(NULL, NULL, mtrep2__GetListCreationTime, mtrep2__GetListCreationTimeResponse); }
	virtual	int GetListCreationTime(const char *endpoint, const char *soap_action, _mtrep2__GetListCreationTime *mtrep2__GetListCreationTime, _mtrep2__GetListCreationTimeResponse *mtrep2__GetListCreationTimeResponse);

	/// Web service operation 'GetRepositories2' (returns error code or SOAP_OK)
	virtual	int GetRepositories2(_mtrep3__GetRepositories2 *mtrep3__GetRepositories2, _mtrep3__GetRepositories2Response *mtrep3__GetRepositories2Response) { return GetRepositories2(NULL, NULL, mtrep3__GetRepositories2, mtrep3__GetRepositories2Response); }
	virtual	int GetRepositories2(const char *endpoint, const char *soap_action, _mtrep3__GetRepositories2 *mtrep3__GetRepositories2, _mtrep3__GetRepositories2Response *mtrep3__GetRepositories2Response);

	/// Web service operation 'PickRepository2' (returns error code or SOAP_OK)
	virtual	int PickRepository2(_mtrep3__PickRepository2 *mtrep3__PickRepository2, _mtrep3__PickRepository2Response *mtrep3__PickRepository2Response) { return PickRepository2(NULL, NULL, mtrep3__PickRepository2, mtrep3__PickRepository2Response); }
	virtual	int PickRepository2(const char *endpoint, const char *soap_action, _mtrep3__PickRepository2 *mtrep3__PickRepository2, _mtrep3__PickRepository2Response *mtrep3__PickRepository2Response);

	/// Web service operation 'TryGetRepositoryInfo2' (returns error code or SOAP_OK)
	virtual	int TryGetRepositoryInfo2(_mtrep3__TryGetRepositoryInfo2 *mtrep3__TryGetRepositoryInfo2, _mtrep3__TryGetRepositoryInfo2Response *mtrep3__TryGetRepositoryInfo2Response) { return TryGetRepositoryInfo2(NULL, NULL, mtrep3__TryGetRepositoryInfo2, mtrep3__TryGetRepositoryInfo2Response); }
	virtual	int TryGetRepositoryInfo2(const char *endpoint, const char *soap_action, _mtrep3__TryGetRepositoryInfo2 *mtrep3__TryGetRepositoryInfo2, _mtrep3__TryGetRepositoryInfo2Response *mtrep3__TryGetRepositoryInfo2Response);

	/// Web service operation 'VerifyRepository' (returns error code or SOAP_OK)
	virtual	int VerifyRepository(_mtrep4__VerifyRepository *mtrep4__VerifyRepository, _mtrep4__VerifyRepositoryResponse *mtrep4__VerifyRepositoryResponse) { return VerifyRepository(NULL, NULL, mtrep4__VerifyRepository, mtrep4__VerifyRepositoryResponse); }
	virtual	int VerifyRepository(const char *endpoint, const char *soap_action, _mtrep4__VerifyRepository *mtrep4__VerifyRepository, _mtrep4__VerifyRepositoryResponse *mtrep4__VerifyRepositoryResponse);

	/// Web service operation 'GetRepositories3' (returns error code or SOAP_OK)
	virtual	int GetRepositories3(_mtrep5__GetRepositories3 *mtrep5__GetRepositories3, _mtrep5__GetRepositories3Response *mtrep5__GetRepositories3Response) { return GetRepositories3(NULL, NULL, mtrep5__GetRepositories3, mtrep5__GetRepositories3Response); }
	virtual	int GetRepositories3(const char *endpoint, const char *soap_action, _mtrep5__GetRepositories3 *mtrep5__GetRepositories3, _mtrep5__GetRepositories3Response *mtrep5__GetRepositories3Response);

	/// Web service operation 'PickRepository3' (returns error code or SOAP_OK)
	virtual	int PickRepository3(_mtrep5__PickRepository3 *mtrep5__PickRepository3, _mtrep5__PickRepository3Response *mtrep5__PickRepository3Response) { return PickRepository3(NULL, NULL, mtrep5__PickRepository3, mtrep5__PickRepository3Response); }
	virtual	int PickRepository3(const char *endpoint, const char *soap_action, _mtrep5__PickRepository3 *mtrep5__PickRepository3, _mtrep5__PickRepository3Response *mtrep5__PickRepository3Response);

	/// Web service operation 'GetRepositories4' (returns error code or SOAP_OK)
	virtual	int GetRepositories4(_mtrep6__GetRepositories4 *mtrep6__GetRepositories4, _mtrep6__GetRepositories4Response *mtrep6__GetRepositories4Response) { return GetRepositories4(NULL, NULL, mtrep6__GetRepositories4, mtrep6__GetRepositories4Response); }
	virtual	int GetRepositories4(const char *endpoint, const char *soap_action, _mtrep6__GetRepositories4 *mtrep6__GetRepositories4, _mtrep6__GetRepositories4Response *mtrep6__GetRepositories4Response);

	/// Web service operation 'PickRepository4' (returns error code or SOAP_OK)
	virtual	int PickRepository4(_mtrep6__PickRepository4 *mtrep6__PickRepository4, _mtrep6__PickRepository4Response *mtrep6__PickRepository4Response) { return PickRepository4(NULL, NULL, mtrep6__PickRepository4, mtrep6__PickRepository4Response); }
	virtual	int PickRepository4(const char *endpoint, const char *soap_action, _mtrep6__PickRepository4 *mtrep6__PickRepository4, _mtrep6__PickRepository4Response *mtrep6__PickRepository4Response);
};
#endif
