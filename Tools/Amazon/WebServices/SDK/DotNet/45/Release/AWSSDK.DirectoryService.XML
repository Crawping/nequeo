<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.DirectoryService</name>
    </assembly>
    <members>
        <member name="T:Amazon.DirectoryService.AmazonDirectoryServiceConfig">
            <summary>
            Configuration for accessing Amazon DirectoryService service
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.AmazonDirectoryServiceConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.AmazonDirectoryServiceConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.AmazonDirectoryServiceConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.AmazonDirectoryServiceException">
            <summary>
             Common exception for the DirectoryService service.
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonDirectoryServiceException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonDirectoryServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonDirectoryServiceException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonDirectoryServiceException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonDirectoryServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.DirectorySize">
            <summary>
            Constants used for properties of type DirectorySize.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectorySize.Large">
            <summary>
            Constant Large for DirectorySize
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectorySize.Small">
            <summary>
            Constant Small for DirectorySize
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.DirectorySize.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.DirectorySize.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.DirectorySize.op_Implicit(System.String)~Amazon.DirectoryService.DirectorySize">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.DirectoryStage">
            <summary>
            Constants used for properties of type DirectoryStage.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Active">
            <summary>
            Constant Active for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Created">
            <summary>
            Constant Created for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Creating">
            <summary>
            Constant Creating for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Deleted">
            <summary>
            Constant Deleted for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Deleting">
            <summary>
            Constant Deleting for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Failed">
            <summary>
            Constant Failed for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Impaired">
            <summary>
            Constant Impaired for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Inoperable">
            <summary>
            Constant Inoperable for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Requested">
            <summary>
            Constant Requested for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.RestoreFailed">
            <summary>
            Constant RestoreFailed for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Restoring">
            <summary>
            Constant Restoring for DirectoryStage
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.DirectoryStage.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.DirectoryStage.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.DirectoryStage.op_Implicit(System.String)~Amazon.DirectoryService.DirectoryStage">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.DirectoryType">
            <summary>
            Constants used for properties of type DirectoryType.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryType.ADConnector">
            <summary>
            Constant ADConnector for DirectoryType
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryType.SimpleAD">
            <summary>
            Constant SimpleAD for DirectoryType
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.DirectoryType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.DirectoryType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.DirectoryType.op_Implicit(System.String)~Amazon.DirectoryService.DirectoryType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.RadiusAuthenticationProtocol">
            <summary>
            Constants used for properties of type RadiusAuthenticationProtocol.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.RadiusAuthenticationProtocol.CHAP">
            <summary>
            Constant CHAP for RadiusAuthenticationProtocol
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.RadiusAuthenticationProtocol.MSCHAPv1">
            <summary>
            Constant MSCHAPv1 for RadiusAuthenticationProtocol
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.RadiusAuthenticationProtocol.MSCHAPv2">
            <summary>
            Constant MSCHAPv2 for RadiusAuthenticationProtocol
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.RadiusAuthenticationProtocol.PAP">
            <summary>
            Constant PAP for RadiusAuthenticationProtocol
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.RadiusAuthenticationProtocol.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.RadiusAuthenticationProtocol.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.RadiusAuthenticationProtocol.op_Implicit(System.String)~Amazon.DirectoryService.RadiusAuthenticationProtocol">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.RadiusStatus">
            <summary>
            Constants used for properties of type RadiusStatus.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.RadiusStatus.Completed">
            <summary>
            Constant Completed for RadiusStatus
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.RadiusStatus.Creating">
            <summary>
            Constant Creating for RadiusStatus
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.RadiusStatus.Failed">
            <summary>
            Constant Failed for RadiusStatus
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.RadiusStatus.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.RadiusStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.RadiusStatus.op_Implicit(System.String)~Amazon.DirectoryService.RadiusStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.SnapshotStatus">
            <summary>
            Constants used for properties of type SnapshotStatus.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.SnapshotStatus.Completed">
            <summary>
            Constant Completed for SnapshotStatus
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.SnapshotStatus.Creating">
            <summary>
            Constant Creating for SnapshotStatus
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.SnapshotStatus.Failed">
            <summary>
            Constant Failed for SnapshotStatus
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.SnapshotStatus.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.SnapshotStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.SnapshotStatus.op_Implicit(System.String)~Amazon.DirectoryService.SnapshotStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.SnapshotType">
            <summary>
            Constants used for properties of type SnapshotType.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.SnapshotType.Auto">
            <summary>
            Constant Auto for SnapshotType
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.SnapshotType.Manual">
            <summary>
            Constant Manual for SnapshotType
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.SnapshotType.#ctor(System.String)">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.SnapshotType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.SnapshotType.op_Implicit(System.String)~Amazon.DirectoryService.SnapshotType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.AmazonDirectoryServiceRequest">
            <summary>
            Base class for DirectoryService operation requests.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Attribute">
            <summary>
            Represents a named directory attribute.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Attribute.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Attribute.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the attribute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.AuthenticationFailedException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.AuthenticationFailedException.#ctor(System.String)">
            <summary>
            Constructs a new AuthenticationFailedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.AuthenticationFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AuthenticationFailedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.AuthenticationFailedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AuthenticationFailedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.AuthenticationFailedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AuthenticationFailedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.AuthenticationFailedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AuthenticationFailedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.ClientException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ClientException.#ctor(System.String)">
            <summary>
            Constructs a new ClientException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ClientException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ClientException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ClientException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ClientException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Computer">
            <summary>
            Contains information about a computer account in a directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Computer.ComputerAttributes">
            <summary>
            Gets and sets the property ComputerAttributes. 
            <para>
            An array of <a>Attribute</a> objects that contain the LDAP attributes that belong
            to the computer account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Computer.ComputerId">
            <summary>
            Gets and sets the property ComputerId. 
            <para>
            The identifier of the computer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Computer.ComputerName">
            <summary>
            Gets and sets the property ComputerName. 
            <para>
            The computer name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.ConnectDirectoryRequest">
            <summary>
            Container for the parameters to the ConnectDirectory operation.
            Creates an AD Connector to connect an on-premises directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.ConnectDirectoryRequest.ConnectSettings">
            <summary>
            Gets and sets the property ConnectSettings. 
            <para>
            A <a>DirectoryConnectSettings</a> object that contains additional information for
            the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.ConnectDirectoryRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A textual description for the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.ConnectDirectoryRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The fully-qualified name of the on-premises directory, such as <code>corp.example.com</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.ConnectDirectoryRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The password for the on-premises user account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.ConnectDirectoryRequest.ShortName">
            <summary>
            Gets and sets the property ShortName. 
            <para>
            The NetBIOS name of the on-premises directory, such as <code>CORP</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.ConnectDirectoryRequest.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the directory.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.ConnectDirectoryResponse">
            <summary>
            Contains the results of the <a>ConnectDirectory</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.ConnectDirectoryResponse.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the new directory.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateAliasRequest">
            <summary>
            Container for the parameters to the CreateAlias operation.
            Creates an alias for a directory and assigns the alias to the directory. The alias
            is used to construct the access URL for the directory, such as <code>http://&#x3C;alias&#x3E;.awsapps.com</code>.
            
             <important> 
            <para>
            After an alias has been created, it cannot be deleted or reused, so this operation
            should only be used when absolutely necessary.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateAliasRequest.Alias">
            <summary>
            Gets and sets the property Alias. 
            <para>
            The requested alias.
            </para>
             
            <para>
            The alias must be unique amongst all aliases in AWS. This operation will throw an
            <code>EntityAlreadyExistsException</code> if this alias already exists.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateAliasRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory to create the alias for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateAliasResponse">
            <summary>
            Contains the results of the <a>CreateAlias</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateAliasResponse.Alias">
            <summary>
            Gets and sets the property Alias. 
            <para>
            The alias for the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateAliasResponse.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateComputerRequest">
            <summary>
            Container for the parameters to the CreateComputer operation.
            Creates a computer account in the specified directory, and joins the computer to the
            directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateComputerRequest.ComputerAttributes">
            <summary>
            Gets and sets the property ComputerAttributes. 
            <para>
            An array of <a>Attribute</a> objects that contain any LDAP attributes to apply to
            the computer account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateComputerRequest.ComputerName">
            <summary>
            Gets and sets the property ComputerName. 
            <para>
            The name of the computer account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateComputerRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory to create the computer account in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateComputerRequest.OrganizationalUnitDistinguishedName">
            <summary>
            Gets and sets the property OrganizationalUnitDistinguishedName. 
            <para>
            The fully-qualified distinguished name of the organizational unit to place the computer
            account in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateComputerRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            A one-time password that is used to join the computer to the directory. You should
            generate a random, strong password to use for this parameter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateComputerResponse">
            <summary>
            Contains the results for the <a>CreateComputer</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateComputerResponse.Computer">
            <summary>
            Gets and sets the property Computer. 
            <para>
            A Computer object the represents the computer account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateDirectoryRequest">
            <summary>
            Container for the parameters to the CreateDirectory operation.
            Creates a Simple AD directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateDirectoryRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A textual description for the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateDirectoryRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The fully qualified name for the directory, such as <code>corp.example.com</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateDirectoryRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The password for the directory administrator. The directory creation process creates
            a directory administrator account with the username <code>Administrator</code> and
            this password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateDirectoryRequest.ShortName">
            <summary>
            Gets and sets the property ShortName. 
            <para>
            The short name of the directory, such as <code>CORP</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateDirectoryRequest.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateDirectoryRequest.VpcSettings">
            <summary>
            Gets and sets the property VpcSettings. 
            <para>
            A <a>DirectoryVpcSettings</a> object that contains additional information for the
            operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateDirectoryResponse">
            <summary>
            Contains the results of the <a>CreateDirectory</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateDirectoryResponse.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory that was created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateSnapshotRequest">
            <summary>
            Container for the parameters to the CreateSnapshot operation.
            Creates a snapshot of an existing directory.
            
             
            <para>
            You cannot take snapshots of extended or connected directories.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateSnapshotRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory to take a snapshot of.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateSnapshotRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The descriptive name to apply to the snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateSnapshotResponse">
            <summary>
            Contains the results of the <a>CreateSnapshot</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateSnapshotResponse.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The identifier of the snapshot that was created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DeleteDirectoryRequest">
            <summary>
            Container for the parameters to the DeleteDirectory operation.
            Deletes an AWS Directory Service directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DeleteDirectoryRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DeleteDirectoryResponse">
            <summary>
            Contains the results of the <a>DeleteDirectory</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DeleteDirectoryResponse.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The directory identifier.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DeleteSnapshotRequest">
            <summary>
            Container for the parameters to the DeleteSnapshot operation.
            Deletes a directory snapshot.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DeleteSnapshotRequest.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The identifier of the directory snapshot to be deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DeleteSnapshotResponse">
            <summary>
            Contains the results of the <a>DeleteSnapshot</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DeleteSnapshotResponse.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The identifier of the directory snapshot that was deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DescribeDirectoriesRequest">
            <summary>
            Container for the parameters to the DescribeDirectories operation.
            Obtains information about the directories that belong to this account.
            
             
            <para>
            You can retrieve information about specific directories by passing the directory identifiers
            in the <i>DirectoryIds</i> parameter. Otherwise, all directories that belong to the
            current account are returned.
            </para>
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeDirectoriesResult.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeDirectories</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeDirectoriesRequest.DirectoryIds">
            <summary>
            Gets and sets the property DirectoryIds. 
            <para>
            A list of identifiers of the directories to obtain the information for. If this member
            is null, all directories that belong to the current account are returned.
            </para>
             
            <para>
            An empty list results in an <code>InvalidParameterException</code> being thrown.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeDirectoriesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items to return. If this value is zero, the maximum number of
            items is specified by the limitations of the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeDirectoriesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <i>DescribeDirectoriesResult.NextToken</i> value from a previous call to <a>DescribeDirectories</a>.
            Pass null if this is the first call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DescribeDirectoriesResponse">
            <summary>
            Contains the results of the <a>DescribeDirectories</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeDirectoriesResponse.DirectoryDescriptions">
            <summary>
            Gets and sets the property DirectoryDescriptions. 
            <para>
            The list of <a>DirectoryDescription</a> objects that were retrieved.
            </para>
             
            <para>
            It is possible that this list contains less than the number of items specified in
            the <i>Limit</i> member of the request. This occurs if there are less than the requested
            number of items left to retrieve, or if the limitations of the operation have been
            exceeded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeDirectoriesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If not null, more results are available. Pass this value for the <i>NextToken</i>
            parameter in a subsequent call to <a>DescribeDirectories</a> to retrieve the next
            set of items.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DescribeSnapshotsRequest">
            <summary>
            Container for the parameters to the DescribeSnapshots operation.
            Obtains information about the directory snapshots that belong to this account.
            
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeSnapshots.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeSnapshots</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeSnapshotsRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory to retrieve snapshot information for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeSnapshotsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of objects to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeSnapshotsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <i>DescribeSnapshotsResult.NextToken</i> value from a previous call to <a>DescribeSnapshots</a>.
            Pass null if this is the first call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeSnapshotsRequest.SnapshotIds">
            <summary>
            Gets and sets the property SnapshotIds. 
            <para>
            A list of identifiers of the snapshots to obtain the information for. If this member
            is null or empty, all snapshots are returned using the <i>Limit</i> and <i>NextToken</i>
            members.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DescribeSnapshotsResponse">
            <summary>
            Contains the results of the <a>DescribeSnapshots</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeSnapshotsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If not null, more results are available. Pass this value in the <i>NextToken</i> member
            of a subsequent call to <a>DescribeSnapshots</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeSnapshotsResponse.Snapshots">
            <summary>
            Gets and sets the property Snapshots. 
            <para>
            The list of <a>Snapshot</a> objects that were retrieved.
            </para>
             
            <para>
            It is possible that this list contains less than the number of items specified in
            the <i>Limit</i> member of the request. This occurs if there are less than the requested
            number of items left to retrieve, or if the limitations of the operation have been
            exceeded.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DirectoryConnectSettings">
            <summary>
            Contains information for the <a>ConnectDirectory</a> operation when an AD Connector
            directory is being created.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettings.CustomerDnsIps">
            <summary>
            Gets and sets the property CustomerDnsIps. 
            <para>
            A list of one or more IP addresses of DNS servers or domain controllers in the on-premises
            directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettings.CustomerUserName">
            <summary>
            Gets and sets the property CustomerUserName. 
            <para>
            The username of an account in the on-premises directory that is used to connect to
            the directory. This account must have the following privileges:
            </para>
             <ul> <li>Read users and groups</li> <li>Create computer objects</li> <li>Join computers
            to the domain</li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettings.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            A list of subnet identifiers in the VPC that the AD Connector is created in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettings.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The identifier of the VPC that the AD Connector is created in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DirectoryConnectSettingsDescription">
            <summary>
            Contains information about an AD Connector directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettingsDescription.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            A list of the Availability Zones that the directory is in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettingsDescription.ConnectIps">
            <summary>
            Gets and sets the property ConnectIps. 
            <para>
            The IP addresses of the AD Connector servers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettingsDescription.CustomerUserName">
            <summary>
            Gets and sets the property CustomerUserName. 
            <para>
            The username of the service account in the on-premises directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettingsDescription.SecurityGroupId">
            <summary>
            Gets and sets the property SecurityGroupId. 
            <para>
            The security group identifier for the AD Connector directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettingsDescription.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            A list of subnet identifiers in the VPC that the AD connector is in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettingsDescription.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The identifier of the VPC that the AD Connector is in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DirectoryDescription">
            <summary>
            Contains information about an AWS Directory Service directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.AccessUrl">
            <summary>
            Gets and sets the property AccessUrl. 
            <para>
            The access URL for the directory, such as <code>http://&#x3C;alias&#x3E;.awsapps.com</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.Alias">
            <summary>
            Gets and sets the property Alias. 
            <para>
            The alias for the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.ConnectSettings">
            <summary>
            Gets and sets the property ConnectSettings. 
            <para>
            A <a>DirectoryConnectSettingsDescription</a> object that contains additional information
            about an AD Connector directory. This member is only present if the directory is an
            AD Connector directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The textual description for the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The directory identifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.DnsIpAddrs">
            <summary>
            Gets and sets the property DnsIpAddrs. 
            <para>
            The IP addresses of the DNS servers for the directory. For a Simple AD directory,
            these are the IP addresses of the Simple AD directory servers. For an AD Connector
            directory, these are the IP addresses of the DNS servers or domain controllers in
            the on-premises directory that the AD Connector is connected to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.LaunchTime">
            <summary>
            Gets and sets the property LaunchTime. 
            <para>
            Specifies when the directory was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The fully-qualified name of the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.RadiusSettings">
            <summary>
            Gets and sets the property RadiusSettings. 
            <para>
            A <a>RadiusSettings</a> object that contains information about the RADIUS server configured
            for this directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.RadiusStatus">
            <summary>
            Gets and sets the property RadiusStatus. 
            <para>
            The status of the RADIUS MFA server connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.ShortName">
            <summary>
            Gets and sets the property ShortName. 
            <para>
            The short name of the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The directory size.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.SsoEnabled">
            <summary>
            Gets and sets the property SsoEnabled. 
            <para>
            Indicates if single-sign on is enabled for the directory. For more information, see
            <a>EnableSso</a> and <a>DisableSso</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.Stage">
            <summary>
            Gets and sets the property Stage. 
            <para>
            The current stage of the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.StageLastUpdatedDateTime">
            <summary>
            Gets and sets the property StageLastUpdatedDateTime. 
            <para>
            The date and time that the stage was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.StageReason">
            <summary>
            Gets and sets the property StageReason. 
            <para>
            Additional information about the directory stage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The directory size.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.VpcSettings">
            <summary>
            Gets and sets the property VpcSettings. 
            <para>
            A <a>DirectoryVpcSettingsDescription</a> object that contains additional information
            about a Simple AD directory. This member is only present if the directory is a Simple
            AD directory.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DirectoryLimitExceededException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new DirectoryLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DirectoryLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of DirectoryLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DirectoryLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DirectoryLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DirectoryLimits">
            <summary>
            Contains directory limit information for a region.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryLimits.CloudOnlyDirectoriesCurrentCount">
            <summary>
            Gets and sets the property CloudOnlyDirectoriesCurrentCount. 
            <para>
            The current number of cloud directories in the region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryLimits.CloudOnlyDirectoriesLimit">
            <summary>
            Gets and sets the property CloudOnlyDirectoriesLimit. 
            <para>
            The maximum number of cloud directories allowed in the region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryLimits.CloudOnlyDirectoriesLimitReached">
            <summary>
            Gets and sets the property CloudOnlyDirectoriesLimitReached. 
            <para>
            Indicates if the cloud directory limit has been reached.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryLimits.ConnectedDirectoriesCurrentCount">
            <summary>
            Gets and sets the property ConnectedDirectoriesCurrentCount. 
            <para>
            The current number of connected directories in the region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryLimits.ConnectedDirectoriesLimit">
            <summary>
            Gets and sets the property ConnectedDirectoriesLimit. 
            <para>
            The maximum number of connected directories allowed in the region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryLimits.ConnectedDirectoriesLimitReached">
            <summary>
            Gets and sets the property ConnectedDirectoriesLimitReached. 
            <para>
            Indicates if the connected directory limit has been reached.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DirectoryUnavailableException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryUnavailableException.#ctor(System.String)">
            <summary>
            Constructs a new DirectoryUnavailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DirectoryUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryUnavailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of DirectoryUnavailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryUnavailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DirectoryUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryUnavailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DirectoryUnavailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DirectoryVpcSettings">
            <summary>
            Contains information for the <a>CreateDirectory</a> operation when a Simple AD directory
            is being created.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryVpcSettings.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            The identifiers of the subnets for the directory servers. The two subnets must be
            in different Availability Zones. AWS Directory Service creates a directory server
            and a DNS server in each of these subnets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryVpcSettings.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The identifier of the VPC to create the Simple AD directory in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DirectoryVpcSettingsDescription">
            <summary>
            Contains information about a Simple AD directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryVpcSettingsDescription.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            The list of Availability Zones that the directory is in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryVpcSettingsDescription.SecurityGroupId">
            <summary>
            Gets and sets the property SecurityGroupId. 
            <para>
            The security group identifier for the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryVpcSettingsDescription.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            The identifiers of the subnets for the directory servers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryVpcSettingsDescription.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The identifier of the VPC that the directory is in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DisableRadiusRequest">
            <summary>
            Container for the parameters to the DisableRadius operation.
            Disables multi-factor authentication (MFA) with Remote Authentication Dial In User
            Service (RADIUS) for an AD Connector directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DisableRadiusRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory to disable MFA for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DisableRadiusResponse">
            <summary>
            Contains the results of the <a>DisableRadius</a> operation.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DisableSsoRequest">
            <summary>
            Container for the parameters to the DisableSso operation.
            Disables single-sign on for a directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DisableSsoRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory to disable single-sign on for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DisableSsoRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The password of an alternate account to use to disable single-sign on. This is only
            used for AD Connector directories. See the <i>UserName</i> parameter for more information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DisableSsoRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            The username of an alternate account to use to disable single-sign on. This is only
            used for AD Connector directories. This account must have privileges to remove a service
            principle name. 
            </para>
             
            <para>
            If the AD Connector service account does not have privileges to remove a service principle
            name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i>
            parameters. These credentials are only used to disable single sign-on and are not
            stored by the service. The AD Connector service account is not changed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DisableSsoResponse">
            <summary>
            Contains the results of the <a>DisableSso</a> operation.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.EnableRadiusRequest">
            <summary>
            Container for the parameters to the EnableRadius operation.
            Enables multi-factor authentication (MFA) with Remote Authentication Dial In User
            Service (RADIUS) for an AD Connector directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.EnableRadiusRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory to enable MFA for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.EnableRadiusRequest.RadiusSettings">
            <summary>
            Gets and sets the property RadiusSettings. 
            <para>
            A <a>RadiusSettings</a> object that contains information about the RADIUS server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.EnableRadiusResponse">
            <summary>
            Contains the results of the <a>EnableRadius</a> operation.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.EnableSsoRequest">
            <summary>
            Container for the parameters to the EnableSso operation.
            Enables single-sign on for a directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.EnableSsoRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory to enable single-sign on for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.EnableSsoRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The password of an alternate account to use to enable single-sign on. This is only
            used for AD Connector directories. See the <i>UserName</i> parameter for more information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.EnableSsoRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            The username of an alternate account to use to enable single-sign on. This is only
            used for AD Connector directories. This account must have privileges to add a service
            principle name. 
            </para>
             
            <para>
            If the AD Connector service account does not have privileges to add a service principle
            name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i>
            parameters. These credentials are only used to enable single sign-on and are not stored
            by the service. The AD Connector service account is not changed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.EnableSsoResponse">
            <summary>
            Contains the results of the <a>EnableSso</a> operation.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.EntityAlreadyExistsException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new EntityAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EntityAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of EntityAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EntityAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EntityAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new EntityDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EntityDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of EntityDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EntityDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EntityDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.GetDirectoryLimitsRequest">
            <summary>
            Container for the parameters to the GetDirectoryLimits operation.
            Obtains directory limit information for the current region.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.GetDirectoryLimitsResponse">
            <summary>
            Contains the results of the <a>GetDirectoryLimits</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.GetDirectoryLimitsResponse.DirectoryLimits">
            <summary>
            Gets and sets the property DirectoryLimits. 
            <para>
            A <a>DirectoryLimits</a> object that contains the directory limits for the current
            region.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.GetSnapshotLimitsRequest">
            <summary>
            Container for the parameters to the GetSnapshotLimits operation.
            Obtains the manual snapshot limits for a directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.GetSnapshotLimitsRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            Contains the identifier of the directory to obtain the limits for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.GetSnapshotLimitsResponse">
            <summary>
            Contains the results of the <a>GetSnapshotLimits</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.GetSnapshotLimitsResponse.SnapshotLimits">
            <summary>
            Gets and sets the property SnapshotLimits. 
            <para>
            A <a>SnapshotLimits</a> object that contains the manual snapshot limits for the specified
            directory.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.InsufficientPermissionsException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InsufficientPermissionsException.#ctor(System.String)">
            <summary>
            Constructs a new InsufficientPermissionsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InsufficientPermissionsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InsufficientPermissionsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InsufficientPermissionsException.#ctor(System.Exception)">
            <summary>
            Construct instance of InsufficientPermissionsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InsufficientPermissionsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientPermissionsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InsufficientPermissionsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientPermissionsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidNextTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidNextTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidNextTokenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidNextTokenException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidNextTokenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidNextTokenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.InvalidParameterException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.RadiusSettings">
            <summary>
            Contains information about a Remote Authentication Dial In User Service (RADIUS) server.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RadiusSettings.AuthenticationProtocol">
            <summary>
            Gets and sets the property AuthenticationProtocol. 
            <para>
            The protocol specified for your RADIUS endpoints.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RadiusSettings.DisplayLabel">
            <summary>
            Gets and sets the property DisplayLabel. 
            <para>
            Not currently used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RadiusSettings.RadiusPort">
            <summary>
            Gets and sets the property RadiusPort. 
            <para>
            The port that your RADIUS server is using for communications. Your on-premises network
            must allow inbound traffic over this port from the AWS Directory Service servers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RadiusSettings.RadiusRetries">
            <summary>
            Gets and sets the property RadiusRetries. 
            <para>
            The maximum number of times that communication with the RADIUS server is attempted.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RadiusSettings.RadiusServers">
            <summary>
            Gets and sets the property RadiusServers. 
            <para>
            An array of strings that contains the IP addresses of the RADIUS server endpoints,
            or the IP addresses of your RADIUS server load balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RadiusSettings.RadiusTimeout">
            <summary>
            Gets and sets the property RadiusTimeout. 
            <para>
            The amount of time, in seconds, to wait for the RADIUS server to respond.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RadiusSettings.SharedSecret">
            <summary>
            Gets and sets the property SharedSecret. 
            <para>
            The shared secret code that was specified when your RADIUS endpoints were created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RadiusSettings.UseSameUsername">
            <summary>
            Gets and sets the property UseSameUsername. 
            <para>
            Not currently used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.RestoreFromSnapshotRequest">
            <summary>
            Container for the parameters to the RestoreFromSnapshot operation.
            Restores a directory using an existing directory snapshot.
            
             
            <para>
            When you restore a directory from a snapshot, any changes made to the directory after
            the snapshot date are overwritten.
            </para>
             
            <para>
            This action returns as soon as the restore operation is initiated. You can monitor
            the progress of the restore operation by calling the <a>DescribeDirectories</a> operation
            with the directory identifier. When the <b>DirectoryDescription.Stage</b> value changes
            to <code>Active</code>, the restore operation is complete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RestoreFromSnapshotRequest.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The identifier of the snapshot to restore from.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.RestoreFromSnapshotResponse">
            <summary>
            Contains the results of the <a>RestoreFromSnapshot</a> operation.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.ServiceException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ServiceException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ServiceException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ServiceException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ServiceException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Snapshot">
            <summary>
            Describes a directory snapshot.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Snapshot.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The directory identifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Snapshot.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The descriptive name of the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Snapshot.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The snapshot identifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Snapshot.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The date and time that the snapshot was taken.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Snapshot.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The snapshot status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Snapshot.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The snapshot type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.SnapshotLimitExceededException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.SnapshotLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new SnapshotLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.SnapshotLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SnapshotLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.SnapshotLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of SnapshotLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.SnapshotLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SnapshotLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.SnapshotLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SnapshotLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.SnapshotLimits">
            <summary>
            Contains manual snapshot limit information for a directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.SnapshotLimits.ManualSnapshotsCurrentCount">
            <summary>
            Gets and sets the property ManualSnapshotsCurrentCount. 
            <para>
            The current number of manual snapshots of the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.SnapshotLimits.ManualSnapshotsLimit">
            <summary>
            Gets and sets the property ManualSnapshotsLimit. 
            <para>
            The maximum number of manual snapshots allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.SnapshotLimits.ManualSnapshotsLimitReached">
            <summary>
            Gets and sets the property ManualSnapshotsLimitReached. 
            <para>
            Indicates if the manual snapshot limit has been reached.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.UnsupportedOperationException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.UnsupportedOperationException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedOperationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.UnsupportedOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedOperationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.UnsupportedOperationException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedOperationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.UnsupportedOperationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedOperationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.UnsupportedOperationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedOperationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.UpdateRadiusRequest">
            <summary>
            Container for the parameters to the UpdateRadius operation.
            Updates the Remote Authentication Dial In User Service (RADIUS) server information
            for an AD Connector directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.UpdateRadiusRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory to update the RADIUS server information for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.UpdateRadiusRequest.RadiusSettings">
            <summary>
            Gets and sets the property RadiusSettings. 
            <para>
            A <a>RadiusSettings</a> object that contains information about the RADIUS server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.UpdateRadiusResponse">
            <summary>
            Contains the results of the <a>UpdateRadius</a> operation.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.AttributeMarshaller">
            <summary>
            Attribute Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.AttributeMarshaller.Marshall(Amazon.DirectoryService.Model.Attribute,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.DirectoryService.Model.Internal.MarshallTransformations.AttributeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.AttributeUnmarshaller">
            <summary>
            Response Unmarshaller for Attribute Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#Attribute,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ComputerUnmarshaller">
            <summary>
            Response Unmarshaller for Computer Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ComputerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#Computer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ComputerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ComputerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ConnectDirectoryRequestMarshaller">
            <summary>
            ConnectDirectory Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ConnectDirectoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ConnectDirectoryRequestMarshaller.Marshall(Amazon.DirectoryService.Model.ConnectDirectoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ConnectDirectoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ConnectDirectory operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ConnectDirectoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ConnectDirectoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ConnectDirectoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateAliasRequestMarshaller">
            <summary>
            CreateAlias Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateAliasRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateAliasRequestMarshaller.Marshall(Amazon.DirectoryService.Model.CreateAliasRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateAliasResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateAlias operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateAliasResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateAliasResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateAliasResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateComputerRequestMarshaller">
            <summary>
            CreateComputer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateComputerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateComputerRequestMarshaller.Marshall(Amazon.DirectoryService.Model.CreateComputerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateComputerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateComputer operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateComputerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateComputerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateComputerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateDirectoryRequestMarshaller">
            <summary>
            CreateDirectory Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateDirectoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateDirectoryRequestMarshaller.Marshall(Amazon.DirectoryService.Model.CreateDirectoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateDirectoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDirectory operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateDirectoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateDirectoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateDirectoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateSnapshotRequestMarshaller">
            <summary>
            CreateSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateSnapshotRequestMarshaller.Marshall(Amazon.DirectoryService.Model.CreateSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteDirectoryRequestMarshaller">
            <summary>
            DeleteDirectory Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteDirectoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteDirectoryRequestMarshaller.Marshall(Amazon.DirectoryService.Model.DeleteDirectoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteDirectoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDirectory operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteDirectoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteDirectoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteDirectoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteSnapshotRequestMarshaller">
            <summary>
            DeleteSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteSnapshotRequestMarshaller.Marshall(Amazon.DirectoryService.Model.DeleteSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeDirectoriesRequestMarshaller">
            <summary>
            DescribeDirectories Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeDirectoriesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeDirectoriesRequestMarshaller.Marshall(Amazon.DirectoryService.Model.DescribeDirectoriesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeDirectoriesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDirectories operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeDirectoriesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeDirectoriesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeDirectoriesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeSnapshotsRequestMarshaller">
            <summary>
            DescribeSnapshots Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeSnapshotsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeSnapshotsRequestMarshaller.Marshall(Amazon.DirectoryService.Model.DescribeSnapshotsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeSnapshotsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSnapshots operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeSnapshotsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeSnapshotsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeSnapshotsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryConnectSettingsDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for DirectoryConnectSettingsDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryConnectSettingsDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#DirectoryConnectSettingsDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryConnectSettingsDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryConnectSettingsDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryConnectSettingsMarshaller">
            <summary>
            DirectoryConnectSettings Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryConnectSettingsMarshaller.Marshall(Amazon.DirectoryService.Model.DirectoryConnectSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryConnectSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for DirectoryDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#DirectoryDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryLimitsUnmarshaller">
            <summary>
            Response Unmarshaller for DirectoryLimits Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryLimitsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#DirectoryLimits,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryLimitsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryLimitsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryVpcSettingsDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for DirectoryVpcSettingsDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryVpcSettingsDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#DirectoryVpcSettingsDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryVpcSettingsDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryVpcSettingsDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryVpcSettingsMarshaller">
            <summary>
            DirectoryVpcSettings Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryVpcSettingsMarshaller.Marshall(Amazon.DirectoryService.Model.DirectoryVpcSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryVpcSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableRadiusRequestMarshaller">
            <summary>
            DisableRadius Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableRadiusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableRadiusRequestMarshaller.Marshall(Amazon.DirectoryService.Model.DisableRadiusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableRadiusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableRadius operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableRadiusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableRadiusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableRadiusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableSsoRequestMarshaller">
            <summary>
            DisableSso Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableSsoRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableSsoRequestMarshaller.Marshall(Amazon.DirectoryService.Model.DisableSsoRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableSsoResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableSso operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableSsoResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableSsoResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableSsoResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableRadiusRequestMarshaller">
            <summary>
            EnableRadius Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableRadiusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableRadiusRequestMarshaller.Marshall(Amazon.DirectoryService.Model.EnableRadiusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableRadiusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableRadius operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableRadiusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableRadiusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableRadiusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableSsoRequestMarshaller">
            <summary>
            EnableSso Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableSsoRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableSsoRequestMarshaller.Marshall(Amazon.DirectoryService.Model.EnableSsoRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableSsoResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableSso operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableSsoResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableSsoResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableSsoResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetDirectoryLimitsRequestMarshaller">
            <summary>
            GetDirectoryLimits Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetDirectoryLimitsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetDirectoryLimitsRequestMarshaller.Marshall(Amazon.DirectoryService.Model.GetDirectoryLimitsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetDirectoryLimitsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDirectoryLimits operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetDirectoryLimitsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetDirectoryLimitsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetDirectoryLimitsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetSnapshotLimitsRequestMarshaller">
            <summary>
            GetSnapshotLimits Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetSnapshotLimitsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetSnapshotLimitsRequestMarshaller.Marshall(Amazon.DirectoryService.Model.GetSnapshotLimitsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetSnapshotLimitsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSnapshotLimits operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetSnapshotLimitsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetSnapshotLimitsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetSnapshotLimitsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RadiusSettingsMarshaller">
            <summary>
            RadiusSettings Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RadiusSettingsMarshaller.Marshall(Amazon.DirectoryService.Model.RadiusSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RadiusSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RadiusSettingsUnmarshaller">
            <summary>
            Response Unmarshaller for RadiusSettings Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RadiusSettingsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#RadiusSettings,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RadiusSettingsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RadiusSettingsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RestoreFromSnapshotRequestMarshaller">
            <summary>
            RestoreFromSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RestoreFromSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RestoreFromSnapshotRequestMarshaller.Marshall(Amazon.DirectoryService.Model.RestoreFromSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RestoreFromSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RestoreFromSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RestoreFromSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RestoreFromSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RestoreFromSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.SnapshotLimitsUnmarshaller">
            <summary>
            Response Unmarshaller for SnapshotLimits Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.SnapshotLimitsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#SnapshotLimits,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.SnapshotLimitsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.SnapshotLimitsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.SnapshotUnmarshaller">
            <summary>
            Response Unmarshaller for Snapshot Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.SnapshotUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#Snapshot,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.SnapshotUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.SnapshotUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.UpdateRadiusRequestMarshaller">
            <summary>
            UpdateRadius Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.UpdateRadiusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.UpdateRadiusRequestMarshaller.Marshall(Amazon.DirectoryService.Model.UpdateRadiusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.UpdateRadiusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateRadius operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.UpdateRadiusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.UpdateRadiusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.UpdateRadiusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.AmazonDirectoryServiceClient">
             <summary>
             Implementation for accessing DirectoryService
            
             AWS Directory Service 
             <para>
             This is the <i>AWS Directory Service API Reference</i>. This guide provides detailed
             information about AWS Directory Service operations, data types, parameters, and errors.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor">
             <summary>
             Constructs AmazonDirectoryServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonDirectoryServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(Amazon.DirectoryService.AmazonDirectoryServiceConfig)">
             <summary>
             Constructs AmazonDirectoryServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonDirectoryServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.DirectoryService.AmazonDirectoryServiceConfig)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Credentials and an
            AmazonDirectoryServiceClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonDirectoryServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(System.String,System.String,Amazon.DirectoryService.AmazonDirectoryServiceConfig)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonDirectoryServiceClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonDirectoryServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(System.String,System.String,System.String,Amazon.DirectoryService.AmazonDirectoryServiceConfig)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonDirectoryServiceClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonDirectoryServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.ConnectDirectory(Amazon.DirectoryService.Model.ConnectDirectoryRequest)">
            <summary>
            Creates an AD Connector to connect an on-premises directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConnectDirectory service method.</param>
            
            <returns>The response from the ConnectDirectory service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.DirectoryLimitExceededException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.ConnectDirectoryAsync(Amazon.DirectoryService.Model.ConnectDirectoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ConnectDirectory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConnectDirectory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.CreateAlias(Amazon.DirectoryService.Model.CreateAliasRequest)">
            <summary>
            Creates an alias for a directory and assigns the alias to the directory. The alias
            is used to construct the access URL for the directory, such as <code>http://&#x3C;alias&#x3E;.awsapps.com</code>.
            
             <important> 
            <para>
            After an alias has been created, it cannot be deleted or reused, so this operation
            should only be used when absolutely necessary.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAlias service method.</param>
            
            <returns>The response from the CreateAlias service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityAlreadyExistsException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.CreateAliasAsync(Amazon.DirectoryService.Model.CreateAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateAlias operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateAlias operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.CreateComputer(Amazon.DirectoryService.Model.CreateComputerRequest)">
            <summary>
            Creates a computer account in the specified directory, and joins the computer to the
            directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateComputer service method.</param>
            
            <returns>The response from the CreateComputer service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.AuthenticationFailedException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.DirectoryUnavailableException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityAlreadyExistsException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.UnsupportedOperationException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.CreateComputerAsync(Amazon.DirectoryService.Model.CreateComputerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateComputer operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateComputer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.CreateDirectory(Amazon.DirectoryService.Model.CreateDirectoryRequest)">
            <summary>
            Creates a Simple AD directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDirectory service method.</param>
            
            <returns>The response from the CreateDirectory service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.DirectoryLimitExceededException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.CreateDirectoryAsync(Amazon.DirectoryService.Model.CreateDirectoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateDirectory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDirectory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.CreateSnapshot(Amazon.DirectoryService.Model.CreateSnapshotRequest)">
            <summary>
            Creates a snapshot of an existing directory.
            
             
            <para>
            You cannot take snapshots of extended or connected directories.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSnapshot service method.</param>
            
            <returns>The response from the CreateSnapshot service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.SnapshotLimitExceededException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.CreateSnapshotAsync(Amazon.DirectoryService.Model.CreateSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DeleteDirectory(Amazon.DirectoryService.Model.DeleteDirectoryRequest)">
            <summary>
            Deletes an AWS Directory Service directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDirectory service method.</param>
            
            <returns>The response from the DeleteDirectory service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DeleteDirectoryAsync(Amazon.DirectoryService.Model.DeleteDirectoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteDirectory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDirectory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DeleteSnapshot(Amazon.DirectoryService.Model.DeleteSnapshotRequest)">
            <summary>
            Deletes a directory snapshot.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSnapshot service method.</param>
            
            <returns>The response from the DeleteSnapshot service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DeleteSnapshotAsync(Amazon.DirectoryService.Model.DeleteSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DescribeDirectories">
            <summary>
            Obtains information about the directories that belong to this account.
            
             
            <para>
            You can retrieve information about specific directories by passing the directory identifiers
            in the <i>DirectoryIds</i> parameter. Otherwise, all directories that belong to the
            current account are returned.
            </para>
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeDirectoriesResult.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeDirectories</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
            
            <returns>The response from the DescribeDirectories service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DescribeDirectories(Amazon.DirectoryService.Model.DescribeDirectoriesRequest)">
            <summary>
            Obtains information about the directories that belong to this account.
            
             
            <para>
            You can retrieve information about specific directories by passing the directory identifiers
            in the <i>DirectoryIds</i> parameter. Otherwise, all directories that belong to the
            current account are returned.
            </para>
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeDirectoriesResult.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeDirectories</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDirectories service method.</param>
            
            <returns>The response from the DescribeDirectories service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DescribeDirectoriesAsync(System.Threading.CancellationToken)">
            <summary>
            Obtains information about the directories that belong to this account.
            
             
            <para>
            You can retrieve information about specific directories by passing the directory identifiers
            in the <i>DirectoryIds</i> parameter. Otherwise, all directories that belong to the
            current account are returned.
            </para>
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeDirectoriesResult.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeDirectories</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
            <param name="cancellationToken"> ttd1
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDirectories service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DescribeDirectoriesAsync(Amazon.DirectoryService.Model.DescribeDirectoriesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeDirectories operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeDirectories operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DescribeSnapshots(Amazon.DirectoryService.Model.DescribeSnapshotsRequest)">
            <summary>
            Obtains information about the directory snapshots that belong to this account.
            
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeSnapshots.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeSnapshots</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshots service method.</param>
            
            <returns>The response from the DescribeSnapshots service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DescribeSnapshotsAsync(Amazon.DirectoryService.Model.DescribeSnapshotsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSnapshots operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshots operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DisableRadius(Amazon.DirectoryService.Model.DisableRadiusRequest)">
            <summary>
            Disables multi-factor authentication (MFA) with Remote Authentication Dial In User
            Service (RADIUS) for an AD Connector directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableRadius service method.</param>
            
            <returns>The response from the DisableRadius service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DisableRadiusAsync(Amazon.DirectoryService.Model.DisableRadiusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableRadius operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableRadius operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DisableSso(Amazon.DirectoryService.Model.DisableSsoRequest)">
            <summary>
            Disables single-sign on for a directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableSso service method.</param>
            
            <returns>The response from the DisableSso service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.AuthenticationFailedException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InsufficientPermissionsException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DisableSsoAsync(Amazon.DirectoryService.Model.DisableSsoRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableSso operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableSso operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EnableRadius(Amazon.DirectoryService.Model.EnableRadiusRequest)">
            <summary>
            Enables multi-factor authentication (MFA) with Remote Authentication Dial In User
            Service (RADIUS) for an AD Connector directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableRadius service method.</param>
            
            <returns>The response from the EnableRadius service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityAlreadyExistsException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EnableRadiusAsync(Amazon.DirectoryService.Model.EnableRadiusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableRadius operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableRadius operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EnableSso(Amazon.DirectoryService.Model.EnableSsoRequest)">
            <summary>
            Enables single-sign on for a directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableSso service method.</param>
            
            <returns>The response from the EnableSso service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.AuthenticationFailedException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InsufficientPermissionsException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EnableSsoAsync(Amazon.DirectoryService.Model.EnableSsoRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableSso operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableSso operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.GetDirectoryLimits">
            <summary>
            Obtains directory limit information for the current region.
            </summary>
            
            <returns>The response from the GetDirectoryLimits service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.GetDirectoryLimits(Amazon.DirectoryService.Model.GetDirectoryLimitsRequest)">
            <summary>
            Obtains directory limit information for the current region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDirectoryLimits service method.</param>
            
            <returns>The response from the GetDirectoryLimits service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.GetDirectoryLimitsAsync(System.Threading.CancellationToken)">
            <summary>
            Obtains directory limit information for the current region.
            </summary>
            <param name="cancellationToken"> ttd1
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDirectoryLimits service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.GetDirectoryLimitsAsync(Amazon.DirectoryService.Model.GetDirectoryLimitsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetDirectoryLimits operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetDirectoryLimits operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.GetSnapshotLimits(Amazon.DirectoryService.Model.GetSnapshotLimitsRequest)">
            <summary>
            Obtains the manual snapshot limits for a directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSnapshotLimits service method.</param>
            
            <returns>The response from the GetSnapshotLimits service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.GetSnapshotLimitsAsync(Amazon.DirectoryService.Model.GetSnapshotLimitsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSnapshotLimits operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSnapshotLimits operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.RestoreFromSnapshot(Amazon.DirectoryService.Model.RestoreFromSnapshotRequest)">
            <summary>
            Restores a directory using an existing directory snapshot.
            
             
            <para>
            When you restore a directory from a snapshot, any changes made to the directory after
            the snapshot date are overwritten.
            </para>
             
            <para>
            This action returns as soon as the restore operation is initiated. You can monitor
            the progress of the restore operation by calling the <a>DescribeDirectories</a> operation
            with the directory identifier. When the <b>DirectoryDescription.Stage</b> value changes
            to <code>Active</code>, the restore operation is complete.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreFromSnapshot service method.</param>
            
            <returns>The response from the RestoreFromSnapshot service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.RestoreFromSnapshotAsync(Amazon.DirectoryService.Model.RestoreFromSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RestoreFromSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RestoreFromSnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.UpdateRadius(Amazon.DirectoryService.Model.UpdateRadiusRequest)">
            <summary>
            Updates the Remote Authentication Dial In User Service (RADIUS) server information
            for an AD Connector directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateRadius service method.</param>
            
            <returns>The response from the UpdateRadius service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.UpdateRadiusAsync(Amazon.DirectoryService.Model.UpdateRadiusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateRadius operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateRadius operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Amazon.DirectoryService.IAmazonDirectoryService">
             <summary>
             Interface for accessing DirectoryService
            
             AWS Directory Service 
             <para>
             This is the <i>AWS Directory Service API Reference</i>. This guide provides detailed
             information about AWS Directory Service operations, data types, parameters, and errors.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.ConnectDirectory(Amazon.DirectoryService.Model.ConnectDirectoryRequest)">
            <summary>
            Creates an AD Connector to connect an on-premises directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConnectDirectory service method.</param>
            
            <returns>The response from the ConnectDirectory service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.DirectoryLimitExceededException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.ConnectDirectoryAsync(Amazon.DirectoryService.Model.ConnectDirectoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ConnectDirectory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConnectDirectory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.CreateAlias(Amazon.DirectoryService.Model.CreateAliasRequest)">
            <summary>
            Creates an alias for a directory and assigns the alias to the directory. The alias
            is used to construct the access URL for the directory, such as <code>http://&#x3C;alias&#x3E;.awsapps.com</code>.
            
             <important> 
            <para>
            After an alias has been created, it cannot be deleted or reused, so this operation
            should only be used when absolutely necessary.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAlias service method.</param>
            
            <returns>The response from the CreateAlias service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityAlreadyExistsException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.CreateAliasAsync(Amazon.DirectoryService.Model.CreateAliasRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateAlias operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateAlias operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.CreateComputer(Amazon.DirectoryService.Model.CreateComputerRequest)">
            <summary>
            Creates a computer account in the specified directory, and joins the computer to the
            directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateComputer service method.</param>
            
            <returns>The response from the CreateComputer service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.AuthenticationFailedException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.DirectoryUnavailableException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityAlreadyExistsException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.UnsupportedOperationException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.CreateComputerAsync(Amazon.DirectoryService.Model.CreateComputerRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateComputer operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateComputer operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.CreateDirectory(Amazon.DirectoryService.Model.CreateDirectoryRequest)">
            <summary>
            Creates a Simple AD directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDirectory service method.</param>
            
            <returns>The response from the CreateDirectory service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.DirectoryLimitExceededException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.CreateDirectoryAsync(Amazon.DirectoryService.Model.CreateDirectoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateDirectory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDirectory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.CreateSnapshot(Amazon.DirectoryService.Model.CreateSnapshotRequest)">
            <summary>
            Creates a snapshot of an existing directory.
            
             
            <para>
            You cannot take snapshots of extended or connected directories.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSnapshot service method.</param>
            
            <returns>The response from the CreateSnapshot service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.SnapshotLimitExceededException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.CreateSnapshotAsync(Amazon.DirectoryService.Model.CreateSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DeleteDirectory(Amazon.DirectoryService.Model.DeleteDirectoryRequest)">
            <summary>
            Deletes an AWS Directory Service directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDirectory service method.</param>
            
            <returns>The response from the DeleteDirectory service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DeleteDirectoryAsync(Amazon.DirectoryService.Model.DeleteDirectoryRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteDirectory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDirectory operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DeleteSnapshot(Amazon.DirectoryService.Model.DeleteSnapshotRequest)">
            <summary>
            Deletes a directory snapshot.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSnapshot service method.</param>
            
            <returns>The response from the DeleteSnapshot service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DeleteSnapshotAsync(Amazon.DirectoryService.Model.DeleteSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DescribeDirectories">
            <summary>
            Obtains information about the directories that belong to this account.
            
             
            <para>
            You can retrieve information about specific directories by passing the directory identifiers
            in the <i>DirectoryIds</i> parameter. Otherwise, all directories that belong to the
            current account are returned.
            </para>
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeDirectoriesResult.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeDirectories</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
            
            <returns>The response from the DescribeDirectories service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DescribeDirectories(Amazon.DirectoryService.Model.DescribeDirectoriesRequest)">
            <summary>
            Obtains information about the directories that belong to this account.
            
             
            <para>
            You can retrieve information about specific directories by passing the directory identifiers
            in the <i>DirectoryIds</i> parameter. Otherwise, all directories that belong to the
            current account are returned.
            </para>
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeDirectoriesResult.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeDirectories</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDirectories service method.</param>
            
            <returns>The response from the DescribeDirectories service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DescribeDirectoriesAsync(System.Threading.CancellationToken)">
            <summary>
            Obtains information about the directories that belong to this account.
            
             
            <para>
            You can retrieve information about specific directories by passing the directory identifiers
            in the <i>DirectoryIds</i> parameter. Otherwise, all directories that belong to the
            current account are returned.
            </para>
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeDirectoriesResult.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeDirectories</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
            <param name="cancellationToken"> ttd1
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDirectories service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DescribeDirectoriesAsync(Amazon.DirectoryService.Model.DescribeDirectoriesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeDirectories operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeDirectories operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DescribeSnapshots(Amazon.DirectoryService.Model.DescribeSnapshotsRequest)">
            <summary>
            Obtains information about the directory snapshots that belong to this account.
            
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeSnapshots.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeSnapshots</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshots service method.</param>
            
            <returns>The response from the DescribeSnapshots service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DescribeSnapshotsAsync(Amazon.DirectoryService.Model.DescribeSnapshotsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSnapshots operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshots operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DisableRadius(Amazon.DirectoryService.Model.DisableRadiusRequest)">
            <summary>
            Disables multi-factor authentication (MFA) with Remote Authentication Dial In User
            Service (RADIUS) for an AD Connector directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableRadius service method.</param>
            
            <returns>The response from the DisableRadius service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DisableRadiusAsync(Amazon.DirectoryService.Model.DisableRadiusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableRadius operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableRadius operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DisableSso(Amazon.DirectoryService.Model.DisableSsoRequest)">
            <summary>
            Disables single-sign on for a directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableSso service method.</param>
            
            <returns>The response from the DisableSso service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.AuthenticationFailedException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InsufficientPermissionsException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DisableSsoAsync(Amazon.DirectoryService.Model.DisableSsoRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisableSso operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableSso operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EnableRadius(Amazon.DirectoryService.Model.EnableRadiusRequest)">
            <summary>
            Enables multi-factor authentication (MFA) with Remote Authentication Dial In User
            Service (RADIUS) for an AD Connector directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableRadius service method.</param>
            
            <returns>The response from the EnableRadius service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityAlreadyExistsException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EnableRadiusAsync(Amazon.DirectoryService.Model.EnableRadiusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableRadius operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableRadius operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EnableSso(Amazon.DirectoryService.Model.EnableSsoRequest)">
            <summary>
            Enables single-sign on for a directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableSso service method.</param>
            
            <returns>The response from the EnableSso service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.AuthenticationFailedException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InsufficientPermissionsException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EnableSsoAsync(Amazon.DirectoryService.Model.EnableSsoRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the EnableSso operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableSso operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.GetDirectoryLimits">
            <summary>
            Obtains directory limit information for the current region.
            </summary>
            
            <returns>The response from the GetDirectoryLimits service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.GetDirectoryLimits(Amazon.DirectoryService.Model.GetDirectoryLimitsRequest)">
            <summary>
            Obtains directory limit information for the current region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDirectoryLimits service method.</param>
            
            <returns>The response from the GetDirectoryLimits service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.GetDirectoryLimitsAsync(System.Threading.CancellationToken)">
            <summary>
            Obtains directory limit information for the current region.
            </summary>
            <param name="cancellationToken"> ttd1
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDirectoryLimits service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.GetDirectoryLimitsAsync(Amazon.DirectoryService.Model.GetDirectoryLimitsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetDirectoryLimits operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetDirectoryLimits operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.GetSnapshotLimits(Amazon.DirectoryService.Model.GetSnapshotLimitsRequest)">
            <summary>
            Obtains the manual snapshot limits for a directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSnapshotLimits service method.</param>
            
            <returns>The response from the GetSnapshotLimits service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.GetSnapshotLimitsAsync(Amazon.DirectoryService.Model.GetSnapshotLimitsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetSnapshotLimits operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSnapshotLimits operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.RestoreFromSnapshot(Amazon.DirectoryService.Model.RestoreFromSnapshotRequest)">
            <summary>
            Restores a directory using an existing directory snapshot.
            
             
            <para>
            When you restore a directory from a snapshot, any changes made to the directory after
            the snapshot date are overwritten.
            </para>
             
            <para>
            This action returns as soon as the restore operation is initiated. You can monitor
            the progress of the restore operation by calling the <a>DescribeDirectories</a> operation
            with the directory identifier. When the <b>DirectoryDescription.Stage</b> value changes
            to <code>Active</code>, the restore operation is complete.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreFromSnapshot service method.</param>
            
            <returns>The response from the RestoreFromSnapshot service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.RestoreFromSnapshotAsync(Amazon.DirectoryService.Model.RestoreFromSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RestoreFromSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RestoreFromSnapshot operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.UpdateRadius(Amazon.DirectoryService.Model.UpdateRadiusRequest)">
            <summary>
            Updates the Remote Authentication Dial In User Service (RADIUS) server information
            for an AD Connector directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateRadius service method.</param>
            
            <returns>The response from the UpdateRadius service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.UpdateRadiusAsync(Amazon.DirectoryService.Model.UpdateRadiusRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UpdateRadius operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateRadius operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
    </members>
</doc>
