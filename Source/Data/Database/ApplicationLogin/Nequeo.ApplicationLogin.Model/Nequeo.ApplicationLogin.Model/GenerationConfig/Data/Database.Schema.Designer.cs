
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nequeo.DataAccess.ApplicationLogin.Data
{
    using System;
    using System.Linq;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Drawing;
    using System.Drawing.Design;
    using Nequeo.Data.Base.ComponentModel;
    using Nequeo.Data.Base.Exception;
    using Nequeo.Data.DataAccess.Control.Generic;
    using Nequeo.Data.DataAccess.Control.Generic.Data;
    using Nequeo.Data.Enumeration;
    using Nequeo.Data.Controller.Custom;
    
    
    /// <summary>
    /// The screenaccess data object class.
    /// </summary>
    [DataContractAttribute(Name = "ScreenAccess", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.ScreenAccess")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class ScreenAccess : DataBase
    {
        
        private long _AccessID;
        
        private long _RoleTypeID;
        
        private long _ScreenID;
        
        private long _AccessTypeID;
        
        private Data.RoleType _RoleType;
        
        private Data.Screen _Screen;
        
        private Data.AccessType _AccessType;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On AccessID column data entity changed.
        /// </summary>
		partial void OnAccessIDChanged();

        /// <summary>
        /// On AccessID column data entity changing.
        /// </summary>
		partial void OnAccessIDChanging();

        /// <summary>
        /// On RoleTypeID column data entity changed.
        /// </summary>
		partial void OnRoleTypeIDChanged();

        /// <summary>
        /// On RoleTypeID column data entity changing.
        /// </summary>
		partial void OnRoleTypeIDChanging();

        /// <summary>
        /// On ScreenID column data entity changed.
        /// </summary>
		partial void OnScreenIDChanged();

        /// <summary>
        /// On ScreenID column data entity changing.
        /// </summary>
		partial void OnScreenIDChanging();

        /// <summary>
        /// On AccessTypeID column data entity changed.
        /// </summary>
		partial void OnAccessTypeIDChanged();

        /// <summary>
        /// On AccessTypeID column data entity changing.
        /// </summary>
		partial void OnAccessTypeIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public ScreenAccess()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the accessid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accessid property for the object.")]
        [DataMemberAttribute(Name = "AccessID")]
        [XmlElementAttribute(ElementName = "AccessID", IsNullable = false)]
        [DataColumnAttribute("AccessID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long AccessID
        {
            get
            {
                return this._AccessID;
            }
            set
            {
                if ((this._AccessID != value))
                {
                    this.OnAccessIDChanging();
                    this.SendPropertyChanging("AccessID");
                    this._AccessID = value;
                    this.SendPropertyChanged("AccessID");
                    this.OnAccessIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the roletypeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the roletypeid property for the object.")]
        [DataMemberAttribute(Name = "RoleTypeID")]
        [XmlElementAttribute(ElementName = "RoleTypeID", IsNullable = false)]
        [DataColumnAttribute("RoleTypeID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long RoleTypeID
        {
            get
            {
                return this._RoleTypeID;
            }
            set
            {
                if ((this._RoleTypeID != value))
                {
                    this.OnRoleTypeIDChanging();
                    this.SendPropertyChanging("RoleTypeID");
                    this._RoleTypeID = value;
                    this.SendPropertyChanged("RoleTypeID");
                    this.OnRoleTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the screenid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the screenid property for the object.")]
        [DataMemberAttribute(Name = "ScreenID")]
        [XmlElementAttribute(ElementName = "ScreenID", IsNullable = false)]
        [DataColumnAttribute("ScreenID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long ScreenID
        {
            get
            {
                return this._ScreenID;
            }
            set
            {
                if ((this._ScreenID != value))
                {
                    this.OnScreenIDChanging();
                    this.SendPropertyChanging("ScreenID");
                    this._ScreenID = value;
                    this.SendPropertyChanged("ScreenID");
                    this.OnScreenIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accesstypeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accesstypeid property for the object.")]
        [DataMemberAttribute(Name = "AccessTypeID")]
        [XmlElementAttribute(ElementName = "AccessTypeID", IsNullable = false)]
        [DataColumnAttribute("AccessTypeID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long AccessTypeID
        {
            get
            {
                return this._AccessTypeID;
            }
            set
            {
                if ((this._AccessTypeID != value))
                {
                    this.OnAccessTypeIDChanging();
                    this.SendPropertyChanging("AccessTypeID");
                    this._AccessTypeID = value;
                    this.SendPropertyChanged("AccessTypeID");
                    this.OnAccessTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the roletypeid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the roletypeid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "RoleType", IsRequired = false)]
        [XmlElementAttribute(ElementName = "RoleType", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.RoleType", ReferenceColumnName = "RoleTypeID", ColumnName = "RoleTypeID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.RoleType RoleType
        {
            get
            {
                return this._RoleType;
            }
            set
            {
                if ((this._RoleType != value))
                {
                    this._RoleType = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the screenid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the screenid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "Screen", IsRequired = false)]
        [XmlElementAttribute(ElementName = "Screen", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Screen", ReferenceColumnName = "ScreenID", ColumnName = "ScreenID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.Screen Screen
        {
            get
            {
                return this._Screen;
            }
            set
            {
                if ((this._Screen != value))
                {
                    this._Screen = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accesstypeid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the accesstypeid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "AccessType", IsRequired = false)]
        [XmlElementAttribute(ElementName = "AccessType", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.AccessType", ReferenceColumnName = "AccessTypeID", ColumnName = "AccessTypeID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.AccessType AccessType
        {
            get
            {
                return this._AccessType;
            }
            set
            {
                if ((this._AccessType != value))
                {
                    this._AccessType = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new screenaccess data entity.
        /// </summary>
        /// <param name="accessID">Initial value of AccessID.</param>
        /// <param name="roleTypeID">Initial value of RoleTypeID.</param>
        /// <param name="screenID">Initial value of ScreenID.</param>
        /// <param name="accessTypeID">Initial value of AccessTypeID.</param>
        /// <returns>The Data.ScreenAccess entity.</returns>
        public static Data.ScreenAccess CreateScreenAccess(long accessID, long roleTypeID, long screenID, long accessTypeID)
        {
            Data.ScreenAccess screenAccess = new Data.ScreenAccess();
            screenAccess.AccessID = accessID;
            screenAccess.RoleTypeID = roleTypeID;
            screenAccess.ScreenID = screenID;
            screenAccess.AccessTypeID = accessTypeID;
            return screenAccess;
        }
    }
    
    /// <summary>
    /// The tabletype data object class.
    /// </summary>
    [DataContractAttribute(Name = "TableType", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.TableType")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class TableType : DataBase
    {
        
        private long _Bigint;
        
        private byte[] _Binary_50;
        
        private System.Nullable<System.Boolean> _Bit;
        
        private string _Char1;
        
        private System.Nullable<System.DateTime> _DateTime;
        
        private System.Nullable<System.Decimal> _Decimal2;
        
        private System.Nullable<System.Double> _Float3;
        
        private byte[] _Image;
        
        private System.Nullable<System.Int32> _Int4;
        
        private System.Nullable<System.Decimal> _Money;
        
        private string _NChar;
        
        private string _NText;
        
        private System.Nullable<System.Decimal> _Numeric;
        
        private string _NVarChar;
        
        private System.Nullable<System.Double> _Real;
        
        private System.Nullable<System.DateTime> _SmallDateTime;
        
        private System.Nullable<System.Int16> _SmallInt;
        
        private System.Nullable<System.Decimal> _SmallMoney;
        
        private object _SqlVariant;
        
        private string _Text;
        
        private byte[] _TimeStamp;
        
        private System.Nullable<System.Byte> _TinyInt;
        
        private System.Nullable<System.Guid> _UniqueIdentifier;
        
        private byte[] _VarBinary_50;
        
        private byte[] _VarBinary_Max;
        
        private string _VarChar_50;
        
        private string _VarChar_Max;
        
        private string _Xml;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On Bigint column data entity changed.
        /// </summary>
		partial void OnBigintChanged();

        /// <summary>
        /// On Bigint column data entity changing.
        /// </summary>
		partial void OnBigintChanging();

        /// <summary>
        /// On Binary_50 column data entity changed.
        /// </summary>
		partial void OnBinary_50Changed();

        /// <summary>
        /// On Binary_50 column data entity changing.
        /// </summary>
		partial void OnBinary_50Changing();

        /// <summary>
        /// On Bit column data entity changed.
        /// </summary>
		partial void OnBitChanged();

        /// <summary>
        /// On Bit column data entity changing.
        /// </summary>
		partial void OnBitChanging();

        /// <summary>
        /// On Char1 column data entity changed.
        /// </summary>
		partial void OnChar1Changed();

        /// <summary>
        /// On Char1 column data entity changing.
        /// </summary>
		partial void OnChar1Changing();

        /// <summary>
        /// On DateTime column data entity changed.
        /// </summary>
		partial void OnDateTimeChanged();

        /// <summary>
        /// On DateTime column data entity changing.
        /// </summary>
		partial void OnDateTimeChanging();

        /// <summary>
        /// On Decimal2 column data entity changed.
        /// </summary>
		partial void OnDecimal2Changed();

        /// <summary>
        /// On Decimal2 column data entity changing.
        /// </summary>
		partial void OnDecimal2Changing();

        /// <summary>
        /// On Float3 column data entity changed.
        /// </summary>
		partial void OnFloat3Changed();

        /// <summary>
        /// On Float3 column data entity changing.
        /// </summary>
		partial void OnFloat3Changing();

        /// <summary>
        /// On Image column data entity changed.
        /// </summary>
		partial void OnImageChanged();

        /// <summary>
        /// On Image column data entity changing.
        /// </summary>
		partial void OnImageChanging();

        /// <summary>
        /// On Int4 column data entity changed.
        /// </summary>
		partial void OnInt4Changed();

        /// <summary>
        /// On Int4 column data entity changing.
        /// </summary>
		partial void OnInt4Changing();

        /// <summary>
        /// On Money column data entity changed.
        /// </summary>
		partial void OnMoneyChanged();

        /// <summary>
        /// On Money column data entity changing.
        /// </summary>
		partial void OnMoneyChanging();

        /// <summary>
        /// On NChar column data entity changed.
        /// </summary>
		partial void OnNCharChanged();

        /// <summary>
        /// On NChar column data entity changing.
        /// </summary>
		partial void OnNCharChanging();

        /// <summary>
        /// On NText column data entity changed.
        /// </summary>
		partial void OnNTextChanged();

        /// <summary>
        /// On NText column data entity changing.
        /// </summary>
		partial void OnNTextChanging();

        /// <summary>
        /// On Numeric column data entity changed.
        /// </summary>
		partial void OnNumericChanged();

        /// <summary>
        /// On Numeric column data entity changing.
        /// </summary>
		partial void OnNumericChanging();

        /// <summary>
        /// On NVarChar column data entity changed.
        /// </summary>
		partial void OnNVarCharChanged();

        /// <summary>
        /// On NVarChar column data entity changing.
        /// </summary>
		partial void OnNVarCharChanging();

        /// <summary>
        /// On Real column data entity changed.
        /// </summary>
		partial void OnRealChanged();

        /// <summary>
        /// On Real column data entity changing.
        /// </summary>
		partial void OnRealChanging();

        /// <summary>
        /// On SmallDateTime column data entity changed.
        /// </summary>
		partial void OnSmallDateTimeChanged();

        /// <summary>
        /// On SmallDateTime column data entity changing.
        /// </summary>
		partial void OnSmallDateTimeChanging();

        /// <summary>
        /// On SmallInt column data entity changed.
        /// </summary>
		partial void OnSmallIntChanged();

        /// <summary>
        /// On SmallInt column data entity changing.
        /// </summary>
		partial void OnSmallIntChanging();

        /// <summary>
        /// On SmallMoney column data entity changed.
        /// </summary>
		partial void OnSmallMoneyChanged();

        /// <summary>
        /// On SmallMoney column data entity changing.
        /// </summary>
		partial void OnSmallMoneyChanging();

        /// <summary>
        /// On SqlVariant column data entity changed.
        /// </summary>
		partial void OnSqlVariantChanged();

        /// <summary>
        /// On SqlVariant column data entity changing.
        /// </summary>
		partial void OnSqlVariantChanging();

        /// <summary>
        /// On Text column data entity changed.
        /// </summary>
		partial void OnTextChanged();

        /// <summary>
        /// On Text column data entity changing.
        /// </summary>
		partial void OnTextChanging();

        /// <summary>
        /// On TimeStamp column data entity changed.
        /// </summary>
		partial void OnTimeStampChanged();

        /// <summary>
        /// On TimeStamp column data entity changing.
        /// </summary>
		partial void OnTimeStampChanging();

        /// <summary>
        /// On TinyInt column data entity changed.
        /// </summary>
		partial void OnTinyIntChanged();

        /// <summary>
        /// On TinyInt column data entity changing.
        /// </summary>
		partial void OnTinyIntChanging();

        /// <summary>
        /// On UniqueIdentifier column data entity changed.
        /// </summary>
		partial void OnUniqueIdentifierChanged();

        /// <summary>
        /// On UniqueIdentifier column data entity changing.
        /// </summary>
		partial void OnUniqueIdentifierChanging();

        /// <summary>
        /// On VarBinary_50 column data entity changed.
        /// </summary>
		partial void OnVarBinary_50Changed();

        /// <summary>
        /// On VarBinary_50 column data entity changing.
        /// </summary>
		partial void OnVarBinary_50Changing();

        /// <summary>
        /// On VarBinary_Max column data entity changed.
        /// </summary>
		partial void OnVarBinary_MaxChanged();

        /// <summary>
        /// On VarBinary_Max column data entity changing.
        /// </summary>
		partial void OnVarBinary_MaxChanging();

        /// <summary>
        /// On VarChar_50 column data entity changed.
        /// </summary>
		partial void OnVarChar_50Changed();

        /// <summary>
        /// On VarChar_50 column data entity changing.
        /// </summary>
		partial void OnVarChar_50Changing();

        /// <summary>
        /// On VarChar_Max column data entity changed.
        /// </summary>
		partial void OnVarChar_MaxChanged();

        /// <summary>
        /// On VarChar_Max column data entity changing.
        /// </summary>
		partial void OnVarChar_MaxChanging();

        /// <summary>
        /// On Xml column data entity changed.
        /// </summary>
		partial void OnXmlChanged();

        /// <summary>
        /// On Xml column data entity changing.
        /// </summary>
		partial void OnXmlChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public TableType()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the bigint property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bigint property for the object.")]
        [DataMemberAttribute(Name = "Bigint")]
        [XmlElementAttribute(ElementName = "Bigint", IsNullable = false)]
        [DataColumnAttribute("Bigint", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long Bigint
        {
            get
            {
                return this._Bigint;
            }
            set
            {
                if ((this._Bigint != value))
                {
                    this.OnBigintChanging();
                    this.SendPropertyChanging("Bigint");
                    this._Bigint = value;
                    this.SendPropertyChanged("Bigint");
                    this.OnBigintChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the binary_50 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the binary_50 property for the object.")]
        [DataMemberAttribute(Name = "Binary_50")]
        [XmlArrayAttribute(ElementName = "Binary_50", IsNullable = true)]
        [DataColumnAttribute("Binary_50", DbType = "binary", Length = 50, IsNullable = true)]
        public byte[] Binary_50
        {
            get
            {
                return this._Binary_50;
            }
            set
            {
                if ((this._Binary_50 != value))
                {
                    this.OnBinary_50Changing();
                    this.SendPropertyChanging("Binary_50");
                    this._Binary_50 = value;
                    this.SendPropertyChanged("Binary_50");
                    this.OnBinary_50Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the bit property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the bit property for the object.")]
        [DataMemberAttribute(Name = "Bit")]
        [XmlElementAttribute(ElementName = "Bit", IsNullable = true)]
        [DataColumnAttribute("Bit", DbType = "bit", Length = 1, IsNullable = true)]
        public System.Nullable<System.Boolean> Bit
        {
            get
            {
                return this._Bit;
            }
            set
            {
                if ((this._Bit != value))
                {
                    this.OnBitChanging();
                    this.SendPropertyChanging("Bit");
                    this._Bit = value;
                    this.SendPropertyChanged("Bit");
                    this.OnBitChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the char property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the char property for the object.")]
        [DataMemberAttribute(Name = "Char1")]
        [XmlElementAttribute(ElementName = "Char1", IsNullable = true)]
        [DataColumnAttribute("Char", DbType = "char", Length = 10, IsNullable = true)]
        public string Char1
        {
            get
            {
                return this._Char1;
            }
            set
            {
                if ((this._Char1 != value))
                {
                    this.OnChar1Changing();
                    this.SendPropertyChanging("Char1");
                    this._Char1 = value;
                    this.SendPropertyChanged("Char1");
                    this.OnChar1Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the datetime property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the datetime property for the object.")]
        [DataMemberAttribute(Name = "DateTime")]
        [XmlElementAttribute(ElementName = "DateTime", IsNullable = true)]
        [DataColumnAttribute("DateTime", DbType = "datetime", Length = 8, IsNullable = true)]
        public System.Nullable<System.DateTime> DateTime
        {
            get
            {
                return this._DateTime;
            }
            set
            {
                if ((this._DateTime != value))
                {
                    this.OnDateTimeChanging();
                    this.SendPropertyChanging("DateTime");
                    this._DateTime = value;
                    this.SendPropertyChanged("DateTime");
                    this.OnDateTimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the decimal property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the decimal property for the object.")]
        [DataMemberAttribute(Name = "Decimal2")]
        [XmlElementAttribute(ElementName = "Decimal2", IsNullable = true)]
        [DataColumnAttribute("Decimal", DbType = "decimal", Length = 9, IsNullable = true)]
        public System.Nullable<System.Decimal> Decimal2
        {
            get
            {
                return this._Decimal2;
            }
            set
            {
                if ((this._Decimal2 != value))
                {
                    this.OnDecimal2Changing();
                    this.SendPropertyChanging("Decimal2");
                    this._Decimal2 = value;
                    this.SendPropertyChanged("Decimal2");
                    this.OnDecimal2Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the float property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the float property for the object.")]
        [DataMemberAttribute(Name = "Float3")]
        [XmlElementAttribute(ElementName = "Float3", IsNullable = true)]
        [DataColumnAttribute("Float", DbType = "float", Length = 8, IsNullable = true)]
        public System.Nullable<System.Double> Float3
        {
            get
            {
                return this._Float3;
            }
            set
            {
                if ((this._Float3 != value))
                {
                    this.OnFloat3Changing();
                    this.SendPropertyChanging("Float3");
                    this._Float3 = value;
                    this.SendPropertyChanged("Float3");
                    this.OnFloat3Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the image property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the image property for the object.")]
        [DataMemberAttribute(Name = "Image")]
        [XmlArrayAttribute(ElementName = "Image", IsNullable = true)]
        [DataColumnAttribute("Image", DbType = "image", Length = -1, IsNullable = true)]
        public byte[] Image
        {
            get
            {
                return this._Image;
            }
            set
            {
                if ((this._Image != value))
                {
                    this.OnImageChanging();
                    this.SendPropertyChanging("Image");
                    this._Image = value;
                    this.SendPropertyChanged("Image");
                    this.OnImageChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the int property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the int property for the object.")]
        [DataMemberAttribute(Name = "Int4")]
        [XmlElementAttribute(ElementName = "Int4", IsNullable = true)]
        [DataColumnAttribute("Int", DbType = "int", Length = 4, IsNullable = true)]
        public System.Nullable<System.Int32> Int4
        {
            get
            {
                return this._Int4;
            }
            set
            {
                if ((this._Int4 != value))
                {
                    this.OnInt4Changing();
                    this.SendPropertyChanging("Int4");
                    this._Int4 = value;
                    this.SendPropertyChanged("Int4");
                    this.OnInt4Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the money property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the money property for the object.")]
        [DataMemberAttribute(Name = "Money")]
        [XmlElementAttribute(ElementName = "Money", IsNullable = true)]
        [DataColumnAttribute("Money", DbType = "money", Length = 8, IsNullable = true)]
        public System.Nullable<System.Decimal> Money
        {
            get
            {
                return this._Money;
            }
            set
            {
                if ((this._Money != value))
                {
                    this.OnMoneyChanging();
                    this.SendPropertyChanging("Money");
                    this._Money = value;
                    this.SendPropertyChanged("Money");
                    this.OnMoneyChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the nchar property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the nchar property for the object.")]
        [DataMemberAttribute(Name = "NChar")]
        [XmlElementAttribute(ElementName = "NChar", IsNullable = true)]
        [DataColumnAttribute("NChar", DbType = "nchar", Length = 10, IsNullable = true)]
        public string NChar
        {
            get
            {
                return this._NChar;
            }
            set
            {
                if ((this._NChar != value))
                {
                    this.OnNCharChanging();
                    this.SendPropertyChanging("NChar");
                    this._NChar = value;
                    this.SendPropertyChanged("NChar");
                    this.OnNCharChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the ntext property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the ntext property for the object.")]
        [DataMemberAttribute(Name = "NText")]
        [XmlElementAttribute(ElementName = "NText", IsNullable = true)]
        [DataColumnAttribute("NText", DbType = "ntext", Length = -1, IsNullable = true)]
        public string NText
        {
            get
            {
                return this._NText;
            }
            set
            {
                if ((this._NText != value))
                {
                    this.OnNTextChanging();
                    this.SendPropertyChanging("NText");
                    this._NText = value;
                    this.SendPropertyChanged("NText");
                    this.OnNTextChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the numeric property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the numeric property for the object.")]
        [DataMemberAttribute(Name = "Numeric")]
        [XmlElementAttribute(ElementName = "Numeric", IsNullable = true)]
        [DataColumnAttribute("Numeric", DbType = "numeric", Length = 9, IsNullable = true)]
        public System.Nullable<System.Decimal> Numeric
        {
            get
            {
                return this._Numeric;
            }
            set
            {
                if ((this._Numeric != value))
                {
                    this.OnNumericChanging();
                    this.SendPropertyChanging("Numeric");
                    this._Numeric = value;
                    this.SendPropertyChanged("Numeric");
                    this.OnNumericChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the nvarchar property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the nvarchar property for the object.")]
        [DataMemberAttribute(Name = "NVarChar")]
        [XmlElementAttribute(ElementName = "NVarChar", IsNullable = true)]
        [DataColumnAttribute("NVarChar", DbType = "nvarchar", Length = -1, IsNullable = true)]
        public string NVarChar
        {
            get
            {
                return this._NVarChar;
            }
            set
            {
                if ((this._NVarChar != value))
                {
                    this.OnNVarCharChanging();
                    this.SendPropertyChanging("NVarChar");
                    this._NVarChar = value;
                    this.SendPropertyChanged("NVarChar");
                    this.OnNVarCharChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the real property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the real property for the object.")]
        [DataMemberAttribute(Name = "Real")]
        [XmlElementAttribute(ElementName = "Real", IsNullable = true)]
        [DataColumnAttribute("Real", DbType = "real", Length = 4, IsNullable = true)]
        public System.Nullable<System.Double> Real
        {
            get
            {
                return this._Real;
            }
            set
            {
                if ((this._Real != value))
                {
                    this.OnRealChanging();
                    this.SendPropertyChanging("Real");
                    this._Real = value;
                    this.SendPropertyChanged("Real");
                    this.OnRealChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the small date time property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the small date time property for the object.")]
        [DataMemberAttribute(Name = "SmallDateTime")]
        [XmlElementAttribute(ElementName = "SmallDateTime", IsNullable = true)]
        [DataColumnAttribute("Small Date Time", DbType = "smalldatetime", Length = 4, IsNullable = true)]
        public System.Nullable<System.DateTime> SmallDateTime
        {
            get
            {
                return this._SmallDateTime;
            }
            set
            {
                if ((this._SmallDateTime != value))
                {
                    this.OnSmallDateTimeChanging();
                    this.SendPropertyChanging("SmallDateTime");
                    this._SmallDateTime = value;
                    this.SendPropertyChanged("SmallDateTime");
                    this.OnSmallDateTimeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the smallint property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the smallint property for the object.")]
        [DataMemberAttribute(Name = "SmallInt")]
        [XmlElementAttribute(ElementName = "SmallInt", IsNullable = true)]
        [DataColumnAttribute("SmallInt", DbType = "smallint", Length = 2, IsNullable = true)]
        public System.Nullable<System.Int16> SmallInt
        {
            get
            {
                return this._SmallInt;
            }
            set
            {
                if ((this._SmallInt != value))
                {
                    this.OnSmallIntChanging();
                    this.SendPropertyChanging("SmallInt");
                    this._SmallInt = value;
                    this.SendPropertyChanged("SmallInt");
                    this.OnSmallIntChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the smallmoney property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the smallmoney property for the object.")]
        [DataMemberAttribute(Name = "SmallMoney")]
        [XmlElementAttribute(ElementName = "SmallMoney", IsNullable = true)]
        [DataColumnAttribute("SmallMoney", DbType = "smallmoney", Length = 4, IsNullable = true)]
        public System.Nullable<System.Decimal> SmallMoney
        {
            get
            {
                return this._SmallMoney;
            }
            set
            {
                if ((this._SmallMoney != value))
                {
                    this.OnSmallMoneyChanging();
                    this.SendPropertyChanging("SmallMoney");
                    this._SmallMoney = value;
                    this.SendPropertyChanged("SmallMoney");
                    this.OnSmallMoneyChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the sqlvariant property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the sqlvariant property for the object.")]
        [DataMemberAttribute(Name = "SqlVariant")]
        [XmlElementAttribute(ElementName = "SqlVariant", IsNullable = true)]
        [DataColumnAttribute("SqlVariant", DbType = "sql_variant", Length = -1, IsNullable = true)]
        public object SqlVariant
        {
            get
            {
                return this._SqlVariant;
            }
            set
            {
                if ((this._SqlVariant != value))
                {
                    this.OnSqlVariantChanging();
                    this.SendPropertyChanging("SqlVariant");
                    this._SqlVariant = value;
                    this.SendPropertyChanged("SqlVariant");
                    this.OnSqlVariantChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the text property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the text property for the object.")]
        [DataMemberAttribute(Name = "Text")]
        [XmlElementAttribute(ElementName = "Text", IsNullable = true)]
        [DataColumnAttribute("Text", DbType = "text", Length = -1, IsNullable = true)]
        public string Text
        {
            get
            {
                return this._Text;
            }
            set
            {
                if ((this._Text != value))
                {
                    this.OnTextChanging();
                    this.SendPropertyChanging("Text");
                    this._Text = value;
                    this.SendPropertyChanged("Text");
                    this.OnTextChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the timestamp property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the timestamp property for the object.")]
        [DataMemberAttribute(Name = "TimeStamp")]
        [XmlArrayAttribute(ElementName = "TimeStamp", IsNullable = true)]
        [DataColumnAttribute("TimeStamp", IsRowVersion = true, IsAutoGenerated = true, DbType = "timestamp", Length = 8, IsNullable = true)]
        public byte[] TimeStamp
        {
            get
            {
                return this._TimeStamp;
            }
            set
            {
                if ((this._TimeStamp != value))
                {
                    this.OnTimeStampChanging();
                    this.SendPropertyChanging("TimeStamp");
                    this._TimeStamp = value;
                    this.SendPropertyChanged("TimeStamp");
                    this.OnTimeStampChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the tinyint property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the tinyint property for the object.")]
        [DataMemberAttribute(Name = "TinyInt")]
        [XmlElementAttribute(ElementName = "TinyInt", IsNullable = true)]
        [DataColumnAttribute("TinyInt", DbType = "tinyint", Length = 1, IsNullable = true)]
        public System.Nullable<System.Byte> TinyInt
        {
            get
            {
                return this._TinyInt;
            }
            set
            {
                if ((this._TinyInt != value))
                {
                    this.OnTinyIntChanging();
                    this.SendPropertyChanging("TinyInt");
                    this._TinyInt = value;
                    this.SendPropertyChanged("TinyInt");
                    this.OnTinyIntChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the uniqueidentifier property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the uniqueidentifier property for the object.")]
        [DataMemberAttribute(Name = "UniqueIdentifier")]
        [XmlElementAttribute(ElementName = "UniqueIdentifier", IsNullable = true)]
        [DataColumnAttribute("UniqueIdentifier", DbType = "uniqueidentifier", Length = 16, IsNullable = true)]
        public System.Nullable<System.Guid> UniqueIdentifier
        {
            get
            {
                return this._UniqueIdentifier;
            }
            set
            {
                if ((this._UniqueIdentifier != value))
                {
                    this.OnUniqueIdentifierChanging();
                    this.SendPropertyChanging("UniqueIdentifier");
                    this._UniqueIdentifier = value;
                    this.SendPropertyChanged("UniqueIdentifier");
                    this.OnUniqueIdentifierChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the varbinary_50 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the varbinary_50 property for the object.")]
        [DataMemberAttribute(Name = "VarBinary_50")]
        [XmlArrayAttribute(ElementName = "VarBinary_50", IsNullable = true)]
        [DataColumnAttribute("VarBinary_50", DbType = "varbinary", Length = 50, IsNullable = true)]
        public byte[] VarBinary_50
        {
            get
            {
                return this._VarBinary_50;
            }
            set
            {
                if ((this._VarBinary_50 != value))
                {
                    this.OnVarBinary_50Changing();
                    this.SendPropertyChanging("VarBinary_50");
                    this._VarBinary_50 = value;
                    this.SendPropertyChanged("VarBinary_50");
                    this.OnVarBinary_50Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the varbinary_max property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the varbinary_max property for the object.")]
        [DataMemberAttribute(Name = "VarBinary_Max")]
        [XmlArrayAttribute(ElementName = "VarBinary_Max", IsNullable = true)]
        [DataColumnAttribute("VarBinary_Max", DbType = "varbinary", Length = -1, IsNullable = true)]
        public byte[] VarBinary_Max
        {
            get
            {
                return this._VarBinary_Max;
            }
            set
            {
                if ((this._VarBinary_Max != value))
                {
                    this.OnVarBinary_MaxChanging();
                    this.SendPropertyChanging("VarBinary_Max");
                    this._VarBinary_Max = value;
                    this.SendPropertyChanged("VarBinary_Max");
                    this.OnVarBinary_MaxChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the varchar_50 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the varchar_50 property for the object.")]
        [DataMemberAttribute(Name = "VarChar_50")]
        [XmlElementAttribute(ElementName = "VarChar_50", IsNullable = true)]
        [DataColumnAttribute("VarChar_50", DbType = "varchar", Length = 50, IsNullable = true)]
        public string VarChar_50
        {
            get
            {
                return this._VarChar_50;
            }
            set
            {
                if ((this._VarChar_50 != value))
                {
                    this.OnVarChar_50Changing();
                    this.SendPropertyChanging("VarChar_50");
                    this._VarChar_50 = value;
                    this.SendPropertyChanged("VarChar_50");
                    this.OnVarChar_50Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the varchar_max property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the varchar_max property for the object.")]
        [DataMemberAttribute(Name = "VarChar_Max")]
        [XmlElementAttribute(ElementName = "VarChar_Max", IsNullable = true)]
        [DataColumnAttribute("VarChar_Max", DbType = "varchar", Length = -1, IsNullable = true)]
        public string VarChar_Max
        {
            get
            {
                return this._VarChar_Max;
            }
            set
            {
                if ((this._VarChar_Max != value))
                {
                    this.OnVarChar_MaxChanging();
                    this.SendPropertyChanging("VarChar_Max");
                    this._VarChar_Max = value;
                    this.SendPropertyChanged("VarChar_Max");
                    this.OnVarChar_MaxChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the xml property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the xml property for the object.")]
        [DataMemberAttribute(Name = "Xml")]
        [XmlElementAttribute(ElementName = "Xml", IsNullable = true)]
        [DataColumnAttribute("Xml", DbType = "xml", Length = -1, IsNullable = true)]
        public string Xml
        {
            get
            {
                return this._Xml;
            }
            set
            {
                if ((this._Xml != value))
                {
                    this.OnXmlChanging();
                    this.SendPropertyChanging("Xml");
                    this._Xml = value;
                    this.SendPropertyChanged("Xml");
                    this.OnXmlChanged();
                }
            }
        }
        
        /// <summary>
        /// Create a new tabletype data entity.
        /// </summary>
        /// <param name="bigint">Initial value of Bigint.</param>
        /// <returns>The Data.TableType entity.</returns>
        public static Data.TableType CreateTableType(long bigint)
        {
            Data.TableType tableType = new Data.TableType();
            tableType.Bigint = bigint;
            return tableType;
        }
    }
    
    /// <summary>
    /// The applicationuser data object class.
    /// </summary>
    [DataContractAttribute(Name = "ApplicationUser", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.ApplicationUser")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class ApplicationUser : DataBase
    {
        
        private long _ApplicationUserID;
        
        private long _ApplicationID;
        
        private long _UserID;
        
        private long _RoleTypeID;
        
        private bool _Suspended;
        
        private Data.Application _Application;
        
        private Data.RoleType _RoleType;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On ApplicationUserID column data entity changed.
        /// </summary>
		partial void OnApplicationUserIDChanged();

        /// <summary>
        /// On ApplicationUserID column data entity changing.
        /// </summary>
		partial void OnApplicationUserIDChanging();

        /// <summary>
        /// On ApplicationID column data entity changed.
        /// </summary>
		partial void OnApplicationIDChanged();

        /// <summary>
        /// On ApplicationID column data entity changing.
        /// </summary>
		partial void OnApplicationIDChanging();

        /// <summary>
        /// On UserID column data entity changed.
        /// </summary>
		partial void OnUserIDChanged();

        /// <summary>
        /// On UserID column data entity changing.
        /// </summary>
		partial void OnUserIDChanging();

        /// <summary>
        /// On RoleTypeID column data entity changed.
        /// </summary>
		partial void OnRoleTypeIDChanged();

        /// <summary>
        /// On RoleTypeID column data entity changing.
        /// </summary>
		partial void OnRoleTypeIDChanging();

        /// <summary>
        /// On Suspended column data entity changed.
        /// </summary>
		partial void OnSuspendedChanged();

        /// <summary>
        /// On Suspended column data entity changing.
        /// </summary>
		partial void OnSuspendedChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public ApplicationUser()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the applicationuserid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the applicationuserid property for the object.")]
        [DataMemberAttribute(Name = "ApplicationUserID")]
        [XmlElementAttribute(ElementName = "ApplicationUserID", IsNullable = false)]
        [DataColumnAttribute("ApplicationUserID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long ApplicationUserID
        {
            get
            {
                return this._ApplicationUserID;
            }
            set
            {
                if ((this._ApplicationUserID != value))
                {
                    this.OnApplicationUserIDChanging();
                    this.SendPropertyChanging("ApplicationUserID");
                    this._ApplicationUserID = value;
                    this.SendPropertyChanged("ApplicationUserID");
                    this.OnApplicationUserIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the applicationid property for the object.")]
        [DataMemberAttribute(Name = "ApplicationID")]
        [XmlElementAttribute(ElementName = "ApplicationID", IsNullable = false)]
        [DataColumnAttribute("ApplicationID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long ApplicationID
        {
            get
            {
                return this._ApplicationID;
            }
            set
            {
                if ((this._ApplicationID != value))
                {
                    this.OnApplicationIDChanging();
                    this.SendPropertyChanging("ApplicationID");
                    this._ApplicationID = value;
                    this.SendPropertyChanged("ApplicationID");
                    this.OnApplicationIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the userid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the userid property for the object.")]
        [DataMemberAttribute(Name = "UserID")]
        [XmlElementAttribute(ElementName = "UserID", IsNullable = false)]
        [DataColumnAttribute("UserID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long UserID
        {
            get
            {
                return this._UserID;
            }
            set
            {
                if ((this._UserID != value))
                {
                    this.OnUserIDChanging();
                    this.SendPropertyChanging("UserID");
                    this._UserID = value;
                    this.SendPropertyChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the roletypeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the roletypeid property for the object.")]
        [DataMemberAttribute(Name = "RoleTypeID")]
        [XmlElementAttribute(ElementName = "RoleTypeID", IsNullable = false)]
        [DataColumnAttribute("RoleTypeID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long RoleTypeID
        {
            get
            {
                return this._RoleTypeID;
            }
            set
            {
                if ((this._RoleTypeID != value))
                {
                    this.OnRoleTypeIDChanging();
                    this.SendPropertyChanging("RoleTypeID");
                    this._RoleTypeID = value;
                    this.SendPropertyChanged("RoleTypeID");
                    this.OnRoleTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suspended property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the suspended property for the object.")]
        [DataMemberAttribute(Name = "Suspended")]
        [XmlElementAttribute(ElementName = "Suspended", IsNullable = false)]
        [DataColumnAttribute("Suspended", DbType = "bit", Length = 1, IsNullable = false)]
        public bool Suspended
        {
            get
            {
                return this._Suspended;
            }
            set
            {
                if ((this._Suspended != value))
                {
                    this.OnSuspendedChanging();
                    this.SendPropertyChanging("Suspended");
                    this._Suspended = value;
                    this.SendPropertyChanged("Suspended");
                    this.OnSuspendedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the applicationid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "Application", IsRequired = false)]
        [XmlElementAttribute(ElementName = "Application", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Application", ReferenceColumnName = "ApplicationID", ColumnName = "ApplicationID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.Application Application
        {
            get
            {
                return this._Application;
            }
            set
            {
                if ((this._Application != value))
                {
                    this._Application = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the roletypeid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the roletypeid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "RoleType", IsRequired = false)]
        [XmlElementAttribute(ElementName = "RoleType", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.RoleType", ReferenceColumnName = "RoleTypeID", ColumnName = "RoleTypeID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.RoleType RoleType
        {
            get
            {
                return this._RoleType;
            }
            set
            {
                if ((this._RoleType != value))
                {
                    this._RoleType = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new applicationuser data entity.
        /// </summary>
        /// <param name="applicationUserID">Initial value of ApplicationUserID.</param>
        /// <param name="applicationID">Initial value of ApplicationID.</param>
        /// <param name="userID">Initial value of UserID.</param>
        /// <param name="roleTypeID">Initial value of RoleTypeID.</param>
        /// <param name="suspended">Initial value of Suspended.</param>
        /// <returns>The Data.ApplicationUser entity.</returns>
        public static Data.ApplicationUser CreateApplicationUser(long applicationUserID, long applicationID, long userID, long roleTypeID, bool suspended)
        {
            Data.ApplicationUser applicationUser = new Data.ApplicationUser();
            applicationUser.ApplicationUserID = applicationUserID;
            applicationUser.ApplicationID = applicationID;
            applicationUser.UserID = userID;
            applicationUser.RoleTypeID = roleTypeID;
            applicationUser.Suspended = suspended;
            return applicationUser;
        }
    }
    
    /// <summary>
    /// The state data object class.
    /// </summary>
    [DataContractAttribute(Name = "State", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.State")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class State : DataBase
    {
        
        private long _StateID;
        
        private long _CountryID;
        
        private string _StateShortName;
        
        private string _StateLongName;
        
        private long _StateCodeID;
        
        private long _GroupOrder;
        
        private bool _StateVisible;
        
        private Data.Country _Country;
        
        private Data.Department[] _DepartmentCollection;
        
        private Data.Company[] _CompanyCollection;
        
        private Data.StateTimeZone[] _StateTimeZoneCollection;
        
        private Data.UserAddress[] _UserAddressCollection;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On StateID column data entity changed.
        /// </summary>
		partial void OnStateIDChanged();

        /// <summary>
        /// On StateID column data entity changing.
        /// </summary>
		partial void OnStateIDChanging();

        /// <summary>
        /// On CountryID column data entity changed.
        /// </summary>
		partial void OnCountryIDChanged();

        /// <summary>
        /// On CountryID column data entity changing.
        /// </summary>
		partial void OnCountryIDChanging();

        /// <summary>
        /// On StateShortName column data entity changed.
        /// </summary>
		partial void OnStateShortNameChanged();

        /// <summary>
        /// On StateShortName column data entity changing.
        /// </summary>
		partial void OnStateShortNameChanging();

        /// <summary>
        /// On StateLongName column data entity changed.
        /// </summary>
		partial void OnStateLongNameChanged();

        /// <summary>
        /// On StateLongName column data entity changing.
        /// </summary>
		partial void OnStateLongNameChanging();

        /// <summary>
        /// On StateCodeID column data entity changed.
        /// </summary>
		partial void OnStateCodeIDChanged();

        /// <summary>
        /// On StateCodeID column data entity changing.
        /// </summary>
		partial void OnStateCodeIDChanging();

        /// <summary>
        /// On GroupOrder column data entity changed.
        /// </summary>
		partial void OnGroupOrderChanged();

        /// <summary>
        /// On GroupOrder column data entity changing.
        /// </summary>
		partial void OnGroupOrderChanging();

        /// <summary>
        /// On StateVisible column data entity changed.
        /// </summary>
		partial void OnStateVisibleChanged();

        /// <summary>
        /// On StateVisible column data entity changing.
        /// </summary>
		partial void OnStateVisibleChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public State()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the stateid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the stateid property for the object.")]
        [DataMemberAttribute(Name = "StateID")]
        [XmlElementAttribute(ElementName = "StateID", IsNullable = false)]
        [DataColumnAttribute("StateID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long StateID
        {
            get
            {
                return this._StateID;
            }
            set
            {
                if ((this._StateID != value))
                {
                    this.OnStateIDChanging();
                    this.SendPropertyChanging("StateID");
                    this._StateID = value;
                    this.SendPropertyChanged("StateID");
                    this.OnStateIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the countryid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the countryid property for the object.")]
        [DataMemberAttribute(Name = "CountryID")]
        [XmlElementAttribute(ElementName = "CountryID", IsNullable = false)]
        [DataColumnAttribute("CountryID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long CountryID
        {
            get
            {
                return this._CountryID;
            }
            set
            {
                if ((this._CountryID != value))
                {
                    this.OnCountryIDChanging();
                    this.SendPropertyChanging("CountryID");
                    this._CountryID = value;
                    this.SendPropertyChanged("CountryID");
                    this.OnCountryIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the stateshortname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the stateshortname property for the object.")]
        [DataMemberAttribute(Name = "StateShortName")]
        [XmlElementAttribute(ElementName = "StateShortName", IsNullable = false)]
        [DataColumnAttribute("StateShortName", DbType = "varchar", Length = 50, IsNullable = false)]
        public string StateShortName
        {
            get
            {
                return this._StateShortName;
            }
            set
            {
                if ((this._StateShortName != value))
                {
                    this.OnStateShortNameChanging();
                    this.SendPropertyChanging("StateShortName");
                    this._StateShortName = value;
                    this.SendPropertyChanged("StateShortName");
                    this.OnStateShortNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the statelongname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the statelongname property for the object.")]
        [DataMemberAttribute(Name = "StateLongName")]
        [XmlElementAttribute(ElementName = "StateLongName", IsNullable = false)]
        [DataColumnAttribute("StateLongName", DbType = "varchar", Length = 100, IsNullable = false)]
        public string StateLongName
        {
            get
            {
                return this._StateLongName;
            }
            set
            {
                if ((this._StateLongName != value))
                {
                    this.OnStateLongNameChanging();
                    this.SendPropertyChanging("StateLongName");
                    this._StateLongName = value;
                    this.SendPropertyChanged("StateLongName");
                    this.OnStateLongNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the statecodeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the statecodeid property for the object.")]
        [DataMemberAttribute(Name = "StateCodeID")]
        [XmlElementAttribute(ElementName = "StateCodeID", IsNullable = false)]
        [DataColumnAttribute("StateCodeID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long StateCodeID
        {
            get
            {
                return this._StateCodeID;
            }
            set
            {
                if ((this._StateCodeID != value))
                {
                    this.OnStateCodeIDChanging();
                    this.SendPropertyChanging("StateCodeID");
                    this._StateCodeID = value;
                    this.SendPropertyChanged("StateCodeID");
                    this.OnStateCodeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the grouporder property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the grouporder property for the object.")]
        [DataMemberAttribute(Name = "GroupOrder")]
        [XmlElementAttribute(ElementName = "GroupOrder", IsNullable = false)]
        [DataColumnAttribute("GroupOrder", DbType = "bigint", Length = 8, IsNullable = false)]
        public long GroupOrder
        {
            get
            {
                return this._GroupOrder;
            }
            set
            {
                if ((this._GroupOrder != value))
                {
                    this.OnGroupOrderChanging();
                    this.SendPropertyChanging("GroupOrder");
                    this._GroupOrder = value;
                    this.SendPropertyChanged("GroupOrder");
                    this.OnGroupOrderChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the statevisible property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the statevisible property for the object.")]
        [DataMemberAttribute(Name = "StateVisible")]
        [XmlElementAttribute(ElementName = "StateVisible", IsNullable = false)]
        [DataColumnAttribute("StateVisible", DbType = "bit", Length = 1, IsNullable = false)]
        public bool StateVisible
        {
            get
            {
                return this._StateVisible;
            }
            set
            {
                if ((this._StateVisible != value))
                {
                    this.OnStateVisibleChanging();
                    this.SendPropertyChanging("StateVisible");
                    this._StateVisible = value;
                    this.SendPropertyChanged("StateVisible");
                    this.OnStateVisibleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the countryid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the countryid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "Country", IsRequired = false)]
        [XmlElementAttribute(ElementName = "Country", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Country", ReferenceColumnName = "CountryID", ColumnName = "CountryID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.Country Country
        {
            get
            {
                return this._Country;
            }
            set
            {
                if ((this._Country != value))
                {
                    this._Country = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the department reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the department reference property for the object.")]
        [DataMemberAttribute(Name = "DepartmentCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "DepartmentCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Department", ColumnName = "StateID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.Department[] DepartmentCollection
        {
            get
            {
                return this._DepartmentCollection;
            }
            set
            {
                if ((this._DepartmentCollection != value))
                {
                    this._DepartmentCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the company reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the company reference property for the object.")]
        [DataMemberAttribute(Name = "CompanyCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "CompanyCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Company", ColumnName = "StateID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.Company[] CompanyCollection
        {
            get
            {
                return this._CompanyCollection;
            }
            set
            {
                if ((this._CompanyCollection != value))
                {
                    this._CompanyCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the statetimezone reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the statetimezone reference property for the object.")]
        [DataMemberAttribute(Name = "StateTimeZoneCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "StateTimeZoneCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.StateTimeZone", ColumnName = "StateID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.StateTimeZone[] StateTimeZoneCollection
        {
            get
            {
                return this._StateTimeZoneCollection;
            }
            set
            {
                if ((this._StateTimeZoneCollection != value))
                {
                    this._StateTimeZoneCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the useraddress reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the useraddress reference property for the object.")]
        [DataMemberAttribute(Name = "UserAddressCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "UserAddressCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.UserAddress", ColumnName = "StateID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.UserAddress[] UserAddressCollection
        {
            get
            {
                return this._UserAddressCollection;
            }
            set
            {
                if ((this._UserAddressCollection != value))
                {
                    this._UserAddressCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new state data entity.
        /// </summary>
        /// <param name="stateID">Initial value of StateID.</param>
        /// <param name="countryID">Initial value of CountryID.</param>
        /// <param name="stateShortName">Initial value of StateShortName.</param>
        /// <param name="stateLongName">Initial value of StateLongName.</param>
        /// <param name="stateCodeID">Initial value of StateCodeID.</param>
        /// <param name="groupOrder">Initial value of GroupOrder.</param>
        /// <param name="stateVisible">Initial value of StateVisible.</param>
        /// <returns>The Data.State entity.</returns>
        public static Data.State CreateState(long stateID, long countryID, string stateShortName, string stateLongName, long stateCodeID, long groupOrder, bool stateVisible)
        {
            Data.State state = new Data.State();
            state.StateID = stateID;
            state.CountryID = countryID;
            state.StateShortName = stateShortName;
            state.StateLongName = stateLongName;
            state.StateCodeID = stateCodeID;
            state.GroupOrder = groupOrder;
            state.StateVisible = stateVisible;
            return state;
        }
    }
    
    /// <summary>
    /// The statetimezone data object class.
    /// </summary>
    [DataContractAttribute(Name = "StateTimeZone", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.StateTimeZone")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class StateTimeZone : DataBase
    {
        
        private long _StateTimeZoneID;
        
        private long _StateID;
        
        private long _InternationalTimeZoneID;
        
        private Data.State _State;
        
        private Data.InternationalTimeZone _InternationalTimeZone;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On StateTimeZoneID column data entity changed.
        /// </summary>
		partial void OnStateTimeZoneIDChanged();

        /// <summary>
        /// On StateTimeZoneID column data entity changing.
        /// </summary>
		partial void OnStateTimeZoneIDChanging();

        /// <summary>
        /// On StateID column data entity changed.
        /// </summary>
		partial void OnStateIDChanged();

        /// <summary>
        /// On StateID column data entity changing.
        /// </summary>
		partial void OnStateIDChanging();

        /// <summary>
        /// On InternationalTimeZoneID column data entity changed.
        /// </summary>
		partial void OnInternationalTimeZoneIDChanged();

        /// <summary>
        /// On InternationalTimeZoneID column data entity changing.
        /// </summary>
		partial void OnInternationalTimeZoneIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public StateTimeZone()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the statetimezoneid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the statetimezoneid property for the object.")]
        [DataMemberAttribute(Name = "StateTimeZoneID")]
        [XmlElementAttribute(ElementName = "StateTimeZoneID", IsNullable = false)]
        [DataColumnAttribute("StateTimeZoneID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long StateTimeZoneID
        {
            get
            {
                return this._StateTimeZoneID;
            }
            set
            {
                if ((this._StateTimeZoneID != value))
                {
                    this.OnStateTimeZoneIDChanging();
                    this.SendPropertyChanging("StateTimeZoneID");
                    this._StateTimeZoneID = value;
                    this.SendPropertyChanged("StateTimeZoneID");
                    this.OnStateTimeZoneIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the stateid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the stateid property for the object.")]
        [DataMemberAttribute(Name = "StateID")]
        [XmlElementAttribute(ElementName = "StateID", IsNullable = false)]
        [DataColumnAttribute("StateID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long StateID
        {
            get
            {
                return this._StateID;
            }
            set
            {
                if ((this._StateID != value))
                {
                    this.OnStateIDChanging();
                    this.SendPropertyChanging("StateID");
                    this._StateID = value;
                    this.SendPropertyChanged("StateID");
                    this.OnStateIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the internationaltimezoneid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the internationaltimezoneid property for the object.")]
        [DataMemberAttribute(Name = "InternationalTimeZoneID")]
        [XmlElementAttribute(ElementName = "InternationalTimeZoneID", IsNullable = false)]
        [DataColumnAttribute("InternationalTimeZoneID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long InternationalTimeZoneID
        {
            get
            {
                return this._InternationalTimeZoneID;
            }
            set
            {
                if ((this._InternationalTimeZoneID != value))
                {
                    this.OnInternationalTimeZoneIDChanging();
                    this.SendPropertyChanging("InternationalTimeZoneID");
                    this._InternationalTimeZoneID = value;
                    this.SendPropertyChanged("InternationalTimeZoneID");
                    this.OnInternationalTimeZoneIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the stateid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the stateid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "State", IsRequired = false)]
        [XmlElementAttribute(ElementName = "State", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.State", ReferenceColumnName = "StateID", ColumnName = "StateID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.State State
        {
            get
            {
                return this._State;
            }
            set
            {
                if ((this._State != value))
                {
                    this._State = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the internationaltimezoneid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the internationaltimezoneid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "InternationalTimeZone", IsRequired = false)]
        [XmlElementAttribute(ElementName = "InternationalTimeZone", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.InternationalTimeZone", ReferenceColumnName = "InternationalTimeZoneID", ColumnName = "InternationalTimeZoneID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.InternationalTimeZone InternationalTimeZone
        {
            get
            {
                return this._InternationalTimeZone;
            }
            set
            {
                if ((this._InternationalTimeZone != value))
                {
                    this._InternationalTimeZone = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new statetimezone data entity.
        /// </summary>
        /// <param name="stateTimeZoneID">Initial value of StateTimeZoneID.</param>
        /// <param name="stateID">Initial value of StateID.</param>
        /// <param name="internationalTimeZoneID">Initial value of InternationalTimeZoneID.</param>
        /// <returns>The Data.StateTimeZone entity.</returns>
        public static Data.StateTimeZone CreateStateTimeZone(long stateTimeZoneID, long stateID, long internationalTimeZoneID)
        {
            Data.StateTimeZone stateTimeZone = new Data.StateTimeZone();
            stateTimeZone.StateTimeZoneID = stateTimeZoneID;
            stateTimeZone.StateID = stateID;
            stateTimeZone.InternationalTimeZoneID = internationalTimeZoneID;
            return stateTimeZone;
        }
    }
    
    /// <summary>
    /// The country data object class.
    /// </summary>
    [DataContractAttribute(Name = "Country", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Country")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Country : DataBase
    {
        
        private long _CountryID;
        
        private System.Nullable<System.Int64> _ContinentID;
        
        private string _CountryCode;
        
        private string _CountryName;
        
        private string _CountryDialCode;
        
        private long _GroupOrder;
        
        private bool _CountryVisible;
        
        private Data.Department[] _DepartmentCollection;
        
        private Data.Company[] _CompanyCollection;
        
        private Data.State[] _StateCollection;
        
        private Data.UserAddress[] _UserAddressCollection;
        
        private Data.Language[] _LanguageCollection;
        
        private Data.InternationalTimeZone[] _InternationalTimeZoneCollection;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On CountryID column data entity changed.
        /// </summary>
		partial void OnCountryIDChanged();

        /// <summary>
        /// On CountryID column data entity changing.
        /// </summary>
		partial void OnCountryIDChanging();

        /// <summary>
        /// On ContinentID column data entity changed.
        /// </summary>
		partial void OnContinentIDChanged();

        /// <summary>
        /// On ContinentID column data entity changing.
        /// </summary>
		partial void OnContinentIDChanging();

        /// <summary>
        /// On CountryCode column data entity changed.
        /// </summary>
		partial void OnCountryCodeChanged();

        /// <summary>
        /// On CountryCode column data entity changing.
        /// </summary>
		partial void OnCountryCodeChanging();

        /// <summary>
        /// On CountryName column data entity changed.
        /// </summary>
		partial void OnCountryNameChanged();

        /// <summary>
        /// On CountryName column data entity changing.
        /// </summary>
		partial void OnCountryNameChanging();

        /// <summary>
        /// On CountryDialCode column data entity changed.
        /// </summary>
		partial void OnCountryDialCodeChanged();

        /// <summary>
        /// On CountryDialCode column data entity changing.
        /// </summary>
		partial void OnCountryDialCodeChanging();

        /// <summary>
        /// On GroupOrder column data entity changed.
        /// </summary>
		partial void OnGroupOrderChanged();

        /// <summary>
        /// On GroupOrder column data entity changing.
        /// </summary>
		partial void OnGroupOrderChanging();

        /// <summary>
        /// On CountryVisible column data entity changed.
        /// </summary>
		partial void OnCountryVisibleChanged();

        /// <summary>
        /// On CountryVisible column data entity changing.
        /// </summary>
		partial void OnCountryVisibleChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Country()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the countryid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the countryid property for the object.")]
        [DataMemberAttribute(Name = "CountryID")]
        [XmlElementAttribute(ElementName = "CountryID", IsNullable = false)]
        [DataColumnAttribute("CountryID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long CountryID
        {
            get
            {
                return this._CountryID;
            }
            set
            {
                if ((this._CountryID != value))
                {
                    this.OnCountryIDChanging();
                    this.SendPropertyChanging("CountryID");
                    this._CountryID = value;
                    this.SendPropertyChanged("CountryID");
                    this.OnCountryIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the continentid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the continentid property for the object.")]
        [DataMemberAttribute(Name = "ContinentID")]
        [XmlElementAttribute(ElementName = "ContinentID", IsNullable = true)]
        [DataColumnAttribute("ContinentID", DbType = "bigint", Length = 8, IsNullable = true)]
        public System.Nullable<System.Int64> ContinentID
        {
            get
            {
                return this._ContinentID;
            }
            set
            {
                if ((this._ContinentID != value))
                {
                    this.OnContinentIDChanging();
                    this.SendPropertyChanging("ContinentID");
                    this._ContinentID = value;
                    this.SendPropertyChanged("ContinentID");
                    this.OnContinentIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the countrycode property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the countrycode property for the object.")]
        [DataMemberAttribute(Name = "CountryCode")]
        [XmlElementAttribute(ElementName = "CountryCode", IsNullable = false)]
        [DataColumnAttribute("CountryCode", DbType = "varchar", Length = 50, IsNullable = false)]
        public string CountryCode
        {
            get
            {
                return this._CountryCode;
            }
            set
            {
                if ((this._CountryCode != value))
                {
                    this.OnCountryCodeChanging();
                    this.SendPropertyChanging("CountryCode");
                    this._CountryCode = value;
                    this.SendPropertyChanged("CountryCode");
                    this.OnCountryCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the countryname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the countryname property for the object.")]
        [DataMemberAttribute(Name = "CountryName")]
        [XmlElementAttribute(ElementName = "CountryName", IsNullable = false)]
        [DataColumnAttribute("CountryName", DbType = "varchar", Length = 500, IsNullable = false)]
        public string CountryName
        {
            get
            {
                return this._CountryName;
            }
            set
            {
                if ((this._CountryName != value))
                {
                    this.OnCountryNameChanging();
                    this.SendPropertyChanging("CountryName");
                    this._CountryName = value;
                    this.SendPropertyChanged("CountryName");
                    this.OnCountryNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the countrydialcode property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the countrydialcode property for the object.")]
        [DataMemberAttribute(Name = "CountryDialCode")]
        [XmlElementAttribute(ElementName = "CountryDialCode", IsNullable = true)]
        [DataColumnAttribute("CountryDialCode", DbType = "varchar", Length = 50, IsNullable = true)]
        public string CountryDialCode
        {
            get
            {
                return this._CountryDialCode;
            }
            set
            {
                if ((this._CountryDialCode != value))
                {
                    this.OnCountryDialCodeChanging();
                    this.SendPropertyChanging("CountryDialCode");
                    this._CountryDialCode = value;
                    this.SendPropertyChanged("CountryDialCode");
                    this.OnCountryDialCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the grouporder property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the grouporder property for the object.")]
        [DataMemberAttribute(Name = "GroupOrder")]
        [XmlElementAttribute(ElementName = "GroupOrder", IsNullable = false)]
        [DataColumnAttribute("GroupOrder", DbType = "bigint", Length = 8, IsNullable = false)]
        public long GroupOrder
        {
            get
            {
                return this._GroupOrder;
            }
            set
            {
                if ((this._GroupOrder != value))
                {
                    this.OnGroupOrderChanging();
                    this.SendPropertyChanging("GroupOrder");
                    this._GroupOrder = value;
                    this.SendPropertyChanged("GroupOrder");
                    this.OnGroupOrderChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the countryvisible property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the countryvisible property for the object.")]
        [DataMemberAttribute(Name = "CountryVisible")]
        [XmlElementAttribute(ElementName = "CountryVisible", IsNullable = false)]
        [DataColumnAttribute("CountryVisible", DbType = "bit", Length = 1, IsNullable = false)]
        public bool CountryVisible
        {
            get
            {
                return this._CountryVisible;
            }
            set
            {
                if ((this._CountryVisible != value))
                {
                    this.OnCountryVisibleChanging();
                    this.SendPropertyChanging("CountryVisible");
                    this._CountryVisible = value;
                    this.SendPropertyChanged("CountryVisible");
                    this.OnCountryVisibleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the department reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the department reference property for the object.")]
        [DataMemberAttribute(Name = "DepartmentCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "DepartmentCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Department", ColumnName = "CountryID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.Department[] DepartmentCollection
        {
            get
            {
                return this._DepartmentCollection;
            }
            set
            {
                if ((this._DepartmentCollection != value))
                {
                    this._DepartmentCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the company reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the company reference property for the object.")]
        [DataMemberAttribute(Name = "CompanyCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "CompanyCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Company", ColumnName = "CountryID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.Company[] CompanyCollection
        {
            get
            {
                return this._CompanyCollection;
            }
            set
            {
                if ((this._CompanyCollection != value))
                {
                    this._CompanyCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the state reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the state reference property for the object.")]
        [DataMemberAttribute(Name = "StateCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "StateCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.State", ColumnName = "CountryID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.State[] StateCollection
        {
            get
            {
                return this._StateCollection;
            }
            set
            {
                if ((this._StateCollection != value))
                {
                    this._StateCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the useraddress reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the useraddress reference property for the object.")]
        [DataMemberAttribute(Name = "UserAddressCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "UserAddressCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.UserAddress", ColumnName = "CountryID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.UserAddress[] UserAddressCollection
        {
            get
            {
                return this._UserAddressCollection;
            }
            set
            {
                if ((this._UserAddressCollection != value))
                {
                    this._UserAddressCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the language reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the language reference property for the object.")]
        [DataMemberAttribute(Name = "LanguageCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "LanguageCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Language", ColumnName = "CountryName", ColumnType = "varchar", Length = 500, IsNullable = true, IsReference = false)]
        public Data.Language[] LanguageCollection
        {
            get
            {
                return this._LanguageCollection;
            }
            set
            {
                if ((this._LanguageCollection != value))
                {
                    this._LanguageCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the internationaltimezone reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the internationaltimezone reference property for the object.")]
        [DataMemberAttribute(Name = "InternationalTimeZoneCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "InternationalTimeZoneCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.InternationalTimeZone", ColumnName = "CountryName", ColumnType = "varchar", Length = 500, IsNullable = true, IsReference = false)]
        public Data.InternationalTimeZone[] InternationalTimeZoneCollection
        {
            get
            {
                return this._InternationalTimeZoneCollection;
            }
            set
            {
                if ((this._InternationalTimeZoneCollection != value))
                {
                    this._InternationalTimeZoneCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new country data entity.
        /// </summary>
        /// <param name="countryID">Initial value of CountryID.</param>
        /// <param name="countryCode">Initial value of CountryCode.</param>
        /// <param name="countryName">Initial value of CountryName.</param>
        /// <param name="groupOrder">Initial value of GroupOrder.</param>
        /// <param name="countryVisible">Initial value of CountryVisible.</param>
        /// <returns>The Data.Country entity.</returns>
        public static Data.Country CreateCountry(long countryID, string countryCode, string countryName, long groupOrder, bool countryVisible)
        {
            Data.Country country = new Data.Country();
            country.CountryID = countryID;
            country.CountryCode = countryCode;
            country.CountryName = countryName;
            country.GroupOrder = groupOrder;
            country.CountryVisible = countryVisible;
            return country;
        }
    }
    
    /// <summary>
    /// The useraddress data object class.
    /// </summary>
    [DataContractAttribute(Name = "UserAddress", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.UserAddress")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class UserAddress : DataBase
    {
        
        private long _UserAddressID;
        
        private string _FirstName;
        
        private string _LastName;
        
        private string _Address1;
        
        private string _Address2;
        
        private string _Suburb;
        
        private System.Nullable<System.Int64> _StateID;
        
        private string _PostCode;
        
        private System.Nullable<System.Int64> _CountryID;
        
        private string _PhoneNumber;
        
        private string _FaxNumber;
        
        private string _MobileNumber;
        
        private string _EmailAddress;
        
        private string _WebSite;
        
        private string _Comments;
        
        private System.Nullable<System.DateTime> _ModifiedDate;
        
        private byte[] _RowVersionData;
        
        private bool _UserSuspended;
        
        private System.Nullable<System.Int64> _DepartmentID;
        
        private Data.State _State;
        
        private Data.Country _Country;
        
        private Data.Department _Department;
        
        private Data.User[] _UserCollection;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On UserAddressID column data entity changed.
        /// </summary>
		partial void OnUserAddressIDChanged();

        /// <summary>
        /// On UserAddressID column data entity changing.
        /// </summary>
		partial void OnUserAddressIDChanging();

        /// <summary>
        /// On FirstName column data entity changed.
        /// </summary>
		partial void OnFirstNameChanged();

        /// <summary>
        /// On FirstName column data entity changing.
        /// </summary>
		partial void OnFirstNameChanging();

        /// <summary>
        /// On LastName column data entity changed.
        /// </summary>
		partial void OnLastNameChanged();

        /// <summary>
        /// On LastName column data entity changing.
        /// </summary>
		partial void OnLastNameChanging();

        /// <summary>
        /// On Address1 column data entity changed.
        /// </summary>
		partial void OnAddress1Changed();

        /// <summary>
        /// On Address1 column data entity changing.
        /// </summary>
		partial void OnAddress1Changing();

        /// <summary>
        /// On Address2 column data entity changed.
        /// </summary>
		partial void OnAddress2Changed();

        /// <summary>
        /// On Address2 column data entity changing.
        /// </summary>
		partial void OnAddress2Changing();

        /// <summary>
        /// On Suburb column data entity changed.
        /// </summary>
		partial void OnSuburbChanged();

        /// <summary>
        /// On Suburb column data entity changing.
        /// </summary>
		partial void OnSuburbChanging();

        /// <summary>
        /// On StateID column data entity changed.
        /// </summary>
		partial void OnStateIDChanged();

        /// <summary>
        /// On StateID column data entity changing.
        /// </summary>
		partial void OnStateIDChanging();

        /// <summary>
        /// On PostCode column data entity changed.
        /// </summary>
		partial void OnPostCodeChanged();

        /// <summary>
        /// On PostCode column data entity changing.
        /// </summary>
		partial void OnPostCodeChanging();

        /// <summary>
        /// On CountryID column data entity changed.
        /// </summary>
		partial void OnCountryIDChanged();

        /// <summary>
        /// On CountryID column data entity changing.
        /// </summary>
		partial void OnCountryIDChanging();

        /// <summary>
        /// On PhoneNumber column data entity changed.
        /// </summary>
		partial void OnPhoneNumberChanged();

        /// <summary>
        /// On PhoneNumber column data entity changing.
        /// </summary>
		partial void OnPhoneNumberChanging();

        /// <summary>
        /// On FaxNumber column data entity changed.
        /// </summary>
		partial void OnFaxNumberChanged();

        /// <summary>
        /// On FaxNumber column data entity changing.
        /// </summary>
		partial void OnFaxNumberChanging();

        /// <summary>
        /// On MobileNumber column data entity changed.
        /// </summary>
		partial void OnMobileNumberChanged();

        /// <summary>
        /// On MobileNumber column data entity changing.
        /// </summary>
		partial void OnMobileNumberChanging();

        /// <summary>
        /// On EmailAddress column data entity changed.
        /// </summary>
		partial void OnEmailAddressChanged();

        /// <summary>
        /// On EmailAddress column data entity changing.
        /// </summary>
		partial void OnEmailAddressChanging();

        /// <summary>
        /// On WebSite column data entity changed.
        /// </summary>
		partial void OnWebSiteChanged();

        /// <summary>
        /// On WebSite column data entity changing.
        /// </summary>
		partial void OnWebSiteChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

        /// <summary>
        /// On ModifiedDate column data entity changed.
        /// </summary>
		partial void OnModifiedDateChanged();

        /// <summary>
        /// On ModifiedDate column data entity changing.
        /// </summary>
		partial void OnModifiedDateChanging();

        /// <summary>
        /// On RowVersionData column data entity changed.
        /// </summary>
		partial void OnRowVersionDataChanged();

        /// <summary>
        /// On RowVersionData column data entity changing.
        /// </summary>
		partial void OnRowVersionDataChanging();

        /// <summary>
        /// On UserSuspended column data entity changed.
        /// </summary>
		partial void OnUserSuspendedChanged();

        /// <summary>
        /// On UserSuspended column data entity changing.
        /// </summary>
		partial void OnUserSuspendedChanging();

        /// <summary>
        /// On DepartmentID column data entity changed.
        /// </summary>
		partial void OnDepartmentIDChanged();

        /// <summary>
        /// On DepartmentID column data entity changing.
        /// </summary>
		partial void OnDepartmentIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public UserAddress()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the useraddressid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the useraddressid property for the object.")]
        [DataMemberAttribute(Name = "UserAddressID")]
        [XmlElementAttribute(ElementName = "UserAddressID", IsNullable = false)]
        [DataColumnAttribute("UserAddressID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long UserAddressID
        {
            get
            {
                return this._UserAddressID;
            }
            set
            {
                if ((this._UserAddressID != value))
                {
                    this.OnUserAddressIDChanging();
                    this.SendPropertyChanging("UserAddressID");
                    this._UserAddressID = value;
                    this.SendPropertyChanged("UserAddressID");
                    this.OnUserAddressIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the firstname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the firstname property for the object.")]
        [DataMemberAttribute(Name = "FirstName")]
        [XmlElementAttribute(ElementName = "FirstName", IsNullable = false)]
        [DataColumnAttribute("FirstName", DbType = "varchar", Length = 50, IsNullable = false)]
        public string FirstName
        {
            get
            {
                return this._FirstName;
            }
            set
            {
                if ((this._FirstName != value))
                {
                    this.OnFirstNameChanging();
                    this.SendPropertyChanging("FirstName");
                    this._FirstName = value;
                    this.SendPropertyChanged("FirstName");
                    this.OnFirstNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the lastname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the lastname property for the object.")]
        [DataMemberAttribute(Name = "LastName")]
        [XmlElementAttribute(ElementName = "LastName", IsNullable = false)]
        [DataColumnAttribute("LastName", DbType = "varchar", Length = 50, IsNullable = false)]
        public string LastName
        {
            get
            {
                return this._LastName;
            }
            set
            {
                if ((this._LastName != value))
                {
                    this.OnLastNameChanging();
                    this.SendPropertyChanging("LastName");
                    this._LastName = value;
                    this.SendPropertyChanged("LastName");
                    this.OnLastNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the address1 property for the object.")]
        [DataMemberAttribute(Name = "Address1")]
        [XmlElementAttribute(ElementName = "Address1", IsNullable = true)]
        [DataColumnAttribute("Address1", DbType = "varchar", Length = 200, IsNullable = true)]
        public string Address1
        {
            get
            {
                return this._Address1;
            }
            set
            {
                if ((this._Address1 != value))
                {
                    this.OnAddress1Changing();
                    this.SendPropertyChanging("Address1");
                    this._Address1 = value;
                    this.SendPropertyChanged("Address1");
                    this.OnAddress1Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address2 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the address2 property for the object.")]
        [DataMemberAttribute(Name = "Address2")]
        [XmlElementAttribute(ElementName = "Address2", IsNullable = true)]
        [DataColumnAttribute("Address2", DbType = "varchar", Length = 200, IsNullable = true)]
        public string Address2
        {
            get
            {
                return this._Address2;
            }
            set
            {
                if ((this._Address2 != value))
                {
                    this.OnAddress2Changing();
                    this.SendPropertyChanging("Address2");
                    this._Address2 = value;
                    this.SendPropertyChanged("Address2");
                    this.OnAddress2Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suburb property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the suburb property for the object.")]
        [DataMemberAttribute(Name = "Suburb")]
        [XmlElementAttribute(ElementName = "Suburb", IsNullable = true)]
        [DataColumnAttribute("Suburb", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Suburb
        {
            get
            {
                return this._Suburb;
            }
            set
            {
                if ((this._Suburb != value))
                {
                    this.OnSuburbChanging();
                    this.SendPropertyChanging("Suburb");
                    this._Suburb = value;
                    this.SendPropertyChanged("Suburb");
                    this.OnSuburbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the stateid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the stateid property for the object.")]
        [DataMemberAttribute(Name = "StateID")]
        [XmlElementAttribute(ElementName = "StateID", IsNullable = true)]
        [DataColumnAttribute("StateID", DbType = "bigint", Length = 8, IsNullable = true)]
        public System.Nullable<System.Int64> StateID
        {
            get
            {
                return this._StateID;
            }
            set
            {
                if ((this._StateID != value))
                {
                    this.OnStateIDChanging();
                    this.SendPropertyChanging("StateID");
                    this._StateID = value;
                    this.SendPropertyChanged("StateID");
                    this.OnStateIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postcode property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postcode property for the object.")]
        [DataMemberAttribute(Name = "PostCode")]
        [XmlElementAttribute(ElementName = "PostCode", IsNullable = true)]
        [DataColumnAttribute("PostCode", DbType = "varchar", Length = 4, IsNullable = true)]
        public string PostCode
        {
            get
            {
                return this._PostCode;
            }
            set
            {
                if ((this._PostCode != value))
                {
                    this.OnPostCodeChanging();
                    this.SendPropertyChanging("PostCode");
                    this._PostCode = value;
                    this.SendPropertyChanged("PostCode");
                    this.OnPostCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the countryid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the countryid property for the object.")]
        [DataMemberAttribute(Name = "CountryID")]
        [XmlElementAttribute(ElementName = "CountryID", IsNullable = true)]
        [DataColumnAttribute("CountryID", DbType = "bigint", Length = 8, IsNullable = true)]
        public System.Nullable<System.Int64> CountryID
        {
            get
            {
                return this._CountryID;
            }
            set
            {
                if ((this._CountryID != value))
                {
                    this.OnCountryIDChanging();
                    this.SendPropertyChanging("CountryID");
                    this._CountryID = value;
                    this.SendPropertyChanged("CountryID");
                    this.OnCountryIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the phonenumber property for the object.")]
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [DataColumnAttribute("PhoneNumber", DbType = "varchar", Length = 50, IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this.OnPhoneNumberChanging();
                    this.SendPropertyChanging("PhoneNumber");
                    this._PhoneNumber = value;
                    this.SendPropertyChanged("PhoneNumber");
                    this.OnPhoneNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the faxnumber property for the object.")]
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [DataColumnAttribute("FaxNumber", DbType = "varchar", Length = 50, IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this.OnFaxNumberChanging();
                    this.SendPropertyChanging("FaxNumber");
                    this._FaxNumber = value;
                    this.SendPropertyChanged("FaxNumber");
                    this.OnFaxNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the mobilenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the mobilenumber property for the object.")]
        [DataMemberAttribute(Name = "MobileNumber")]
        [XmlElementAttribute(ElementName = "MobileNumber", IsNullable = true)]
        [DataColumnAttribute("MobileNumber", DbType = "varchar", Length = 50, IsNullable = true)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging();
                    this.SendPropertyChanging("MobileNumber");
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the emailaddress property for the object.")]
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [DataColumnAttribute("EmailAddress", DbType = "varchar", Length = 100, IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this.OnEmailAddressChanging();
                    this.SendPropertyChanging("EmailAddress");
                    this._EmailAddress = value;
                    this.SendPropertyChanged("EmailAddress");
                    this.OnEmailAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the website property for the object.")]
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [DataColumnAttribute("WebSite", DbType = "varchar", Length = 500, IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this.OnWebSiteChanging();
                    this.SendPropertyChanging("WebSite");
                    this._WebSite = value;
                    this.SendPropertyChanged("WebSite");
                    this.OnWebSiteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 1000, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the modifieddate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the modifieddate property for the object.")]
        [DataMemberAttribute(Name = "ModifiedDate")]
        [XmlElementAttribute(ElementName = "ModifiedDate", IsNullable = true)]
        [DataColumnAttribute("ModifiedDate", DbType = "datetime", Length = 8, IsNullable = true)]
        public System.Nullable<System.DateTime> ModifiedDate
        {
            get
            {
                return this._ModifiedDate;
            }
            set
            {
                if ((this._ModifiedDate != value))
                {
                    this.OnModifiedDateChanging();
                    this.SendPropertyChanging("ModifiedDate");
                    this._ModifiedDate = value;
                    this.SendPropertyChanged("ModifiedDate");
                    this.OnModifiedDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the rowversiondata property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the rowversiondata property for the object.")]
        [DataMemberAttribute(Name = "RowVersionData")]
        [XmlArrayAttribute(ElementName = "RowVersionData", IsNullable = true)]
        [DataColumnAttribute("RowVersionData", IsRowVersion = true, IsAutoGenerated = true, DbType = "timestamp", Length = 8, IsNullable = true)]
        public byte[] RowVersionData
        {
            get
            {
                return this._RowVersionData;
            }
            set
            {
                if ((this._RowVersionData != value))
                {
                    this.OnRowVersionDataChanging();
                    this.SendPropertyChanging("RowVersionData");
                    this._RowVersionData = value;
                    this.SendPropertyChanged("RowVersionData");
                    this.OnRowVersionDataChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the usersuspended property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the usersuspended property for the object.")]
        [DataMemberAttribute(Name = "UserSuspended")]
        [XmlElementAttribute(ElementName = "UserSuspended", IsNullable = false)]
        [DataColumnAttribute("UserSuspended", DbType = "bit", Length = 1, IsNullable = false)]
        public bool UserSuspended
        {
            get
            {
                return this._UserSuspended;
            }
            set
            {
                if ((this._UserSuspended != value))
                {
                    this.OnUserSuspendedChanging();
                    this.SendPropertyChanging("UserSuspended");
                    this._UserSuspended = value;
                    this.SendPropertyChanged("UserSuspended");
                    this.OnUserSuspendedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the departmentid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the departmentid property for the object.")]
        [DataMemberAttribute(Name = "DepartmentID")]
        [XmlElementAttribute(ElementName = "DepartmentID", IsNullable = true)]
        [DataColumnAttribute("DepartmentID", DbType = "bigint", Length = 8, IsNullable = true)]
        public System.Nullable<System.Int64> DepartmentID
        {
            get
            {
                return this._DepartmentID;
            }
            set
            {
                if ((this._DepartmentID != value))
                {
                    this.OnDepartmentIDChanging();
                    this.SendPropertyChanging("DepartmentID");
                    this._DepartmentID = value;
                    this.SendPropertyChanged("DepartmentID");
                    this.OnDepartmentIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the stateid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the stateid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "State", IsRequired = false)]
        [XmlElementAttribute(ElementName = "State", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.State", ReferenceColumnName = "StateID", ColumnName = "StateID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.State State
        {
            get
            {
                return this._State;
            }
            set
            {
                if ((this._State != value))
                {
                    this._State = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the countryid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the countryid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "Country", IsRequired = false)]
        [XmlElementAttribute(ElementName = "Country", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Country", ReferenceColumnName = "CountryID", ColumnName = "CountryID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.Country Country
        {
            get
            {
                return this._Country;
            }
            set
            {
                if ((this._Country != value))
                {
                    this._Country = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the departmentid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the departmentid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "Department", IsRequired = false)]
        [XmlElementAttribute(ElementName = "Department", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Department", ReferenceColumnName = "DepartmentID", ColumnName = "DepartmentID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.Department Department
        {
            get
            {
                return this._Department;
            }
            set
            {
                if ((this._Department != value))
                {
                    this._Department = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the user reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the user reference property for the object.")]
        [DataMemberAttribute(Name = "UserCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "UserCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.User", ColumnName = "UserAddressID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.User[] UserCollection
        {
            get
            {
                return this._UserCollection;
            }
            set
            {
                if ((this._UserCollection != value))
                {
                    this._UserCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new useraddress data entity.
        /// </summary>
        /// <param name="userAddressID">Initial value of UserAddressID.</param>
        /// <param name="firstName">Initial value of FirstName.</param>
        /// <param name="lastName">Initial value of LastName.</param>
        /// <param name="userSuspended">Initial value of UserSuspended.</param>
        /// <returns>The Data.UserAddress entity.</returns>
        public static Data.UserAddress CreateUserAddress(long userAddressID, string firstName, string lastName, bool userSuspended)
        {
            Data.UserAddress userAddress = new Data.UserAddress();
            userAddress.UserAddressID = userAddressID;
            userAddress.FirstName = firstName;
            userAddress.LastName = lastName;
            userAddress.UserSuspended = userSuspended;
            return userAddress;
        }
    }
    
    /// <summary>
    /// The user data object class.
    /// </summary>
    [DataContractAttribute(Name = "User", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.User")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class User : DataBase
    {
        
        private long _UserID;
        
        private string _LoginUsername;
        
        private string _LoginPassword;
        
        private string _Comments;
        
        private bool _UserSuspended;
        
        private System.Nullable<System.DateTime> _ModifiedDate;
        
        private byte[] _RowVersionData;
        
        private long _UserAddressID;
        
        private Data.UserAddress _UserAddress;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On UserID column data entity changed.
        /// </summary>
		partial void OnUserIDChanged();

        /// <summary>
        /// On UserID column data entity changing.
        /// </summary>
		partial void OnUserIDChanging();

        /// <summary>
        /// On LoginUsername column data entity changed.
        /// </summary>
		partial void OnLoginUsernameChanged();

        /// <summary>
        /// On LoginUsername column data entity changing.
        /// </summary>
		partial void OnLoginUsernameChanging();

        /// <summary>
        /// On LoginPassword column data entity changed.
        /// </summary>
		partial void OnLoginPasswordChanged();

        /// <summary>
        /// On LoginPassword column data entity changing.
        /// </summary>
		partial void OnLoginPasswordChanging();

        /// <summary>
        /// On Comments column data entity changed.
        /// </summary>
		partial void OnCommentsChanged();

        /// <summary>
        /// On Comments column data entity changing.
        /// </summary>
		partial void OnCommentsChanging();

        /// <summary>
        /// On UserSuspended column data entity changed.
        /// </summary>
		partial void OnUserSuspendedChanged();

        /// <summary>
        /// On UserSuspended column data entity changing.
        /// </summary>
		partial void OnUserSuspendedChanging();

        /// <summary>
        /// On ModifiedDate column data entity changed.
        /// </summary>
		partial void OnModifiedDateChanged();

        /// <summary>
        /// On ModifiedDate column data entity changing.
        /// </summary>
		partial void OnModifiedDateChanging();

        /// <summary>
        /// On RowVersionData column data entity changed.
        /// </summary>
		partial void OnRowVersionDataChanged();

        /// <summary>
        /// On RowVersionData column data entity changing.
        /// </summary>
		partial void OnRowVersionDataChanging();

        /// <summary>
        /// On UserAddressID column data entity changed.
        /// </summary>
		partial void OnUserAddressIDChanged();

        /// <summary>
        /// On UserAddressID column data entity changing.
        /// </summary>
		partial void OnUserAddressIDChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public User()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the userid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the userid property for the object.")]
        [DataMemberAttribute(Name = "UserID")]
        [XmlElementAttribute(ElementName = "UserID", IsNullable = false)]
        [DataColumnAttribute("UserID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long UserID
        {
            get
            {
                return this._UserID;
            }
            set
            {
                if ((this._UserID != value))
                {
                    this.OnUserIDChanging();
                    this.SendPropertyChanging("UserID");
                    this._UserID = value;
                    this.SendPropertyChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the loginusername property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the loginusername property for the object.")]
        [DataMemberAttribute(Name = "LoginUsername")]
        [XmlElementAttribute(ElementName = "LoginUsername", IsNullable = false)]
        [DataColumnAttribute("LoginUsername", DbType = "varchar", Length = 50, IsNullable = false)]
        public string LoginUsername
        {
            get
            {
                return this._LoginUsername;
            }
            set
            {
                if ((this._LoginUsername != value))
                {
                    this.OnLoginUsernameChanging();
                    this.SendPropertyChanging("LoginUsername");
                    this._LoginUsername = value;
                    this.SendPropertyChanged("LoginUsername");
                    this.OnLoginUsernameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the loginpassword property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the loginpassword property for the object.")]
        [DataMemberAttribute(Name = "LoginPassword")]
        [XmlElementAttribute(ElementName = "LoginPassword", IsNullable = false)]
        [DataColumnAttribute("LoginPassword", DbType = "varchar", Length = 50, IsNullable = false)]
        public string LoginPassword
        {
            get
            {
                return this._LoginPassword;
            }
            set
            {
                if ((this._LoginPassword != value))
                {
                    this.OnLoginPasswordChanging();
                    this.SendPropertyChanging("LoginPassword");
                    this._LoginPassword = value;
                    this.SendPropertyChanged("LoginPassword");
                    this.OnLoginPasswordChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the comments property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the comments property for the object.")]
        [DataMemberAttribute(Name = "Comments")]
        [XmlElementAttribute(ElementName = "Comments", IsNullable = true)]
        [DataColumnAttribute("Comments", DbType = "varchar", Length = 1000, IsNullable = true)]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging();
                    this.SendPropertyChanging("Comments");
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the usersuspended property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the usersuspended property for the object.")]
        [DataMemberAttribute(Name = "UserSuspended")]
        [XmlElementAttribute(ElementName = "UserSuspended", IsNullable = false)]
        [DataColumnAttribute("UserSuspended", DbType = "bit", Length = 1, IsNullable = false)]
        public bool UserSuspended
        {
            get
            {
                return this._UserSuspended;
            }
            set
            {
                if ((this._UserSuspended != value))
                {
                    this.OnUserSuspendedChanging();
                    this.SendPropertyChanging("UserSuspended");
                    this._UserSuspended = value;
                    this.SendPropertyChanged("UserSuspended");
                    this.OnUserSuspendedChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the modifieddate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the modifieddate property for the object.")]
        [DataMemberAttribute(Name = "ModifiedDate")]
        [XmlElementAttribute(ElementName = "ModifiedDate", IsNullable = true)]
        [DataColumnAttribute("ModifiedDate", DbType = "datetime", Length = 8, IsNullable = true)]
        public System.Nullable<System.DateTime> ModifiedDate
        {
            get
            {
                return this._ModifiedDate;
            }
            set
            {
                if ((this._ModifiedDate != value))
                {
                    this.OnModifiedDateChanging();
                    this.SendPropertyChanging("ModifiedDate");
                    this._ModifiedDate = value;
                    this.SendPropertyChanged("ModifiedDate");
                    this.OnModifiedDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the rowversiondata property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the rowversiondata property for the object.")]
        [DataMemberAttribute(Name = "RowVersionData")]
        [XmlArrayAttribute(ElementName = "RowVersionData", IsNullable = true)]
        [DataColumnAttribute("RowVersionData", IsRowVersion = true, IsAutoGenerated = true, DbType = "timestamp", Length = 8, IsNullable = true)]
        public byte[] RowVersionData
        {
            get
            {
                return this._RowVersionData;
            }
            set
            {
                if ((this._RowVersionData != value))
                {
                    this.OnRowVersionDataChanging();
                    this.SendPropertyChanging("RowVersionData");
                    this._RowVersionData = value;
                    this.SendPropertyChanged("RowVersionData");
                    this.OnRowVersionDataChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the useraddressid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the useraddressid property for the object.")]
        [DataMemberAttribute(Name = "UserAddressID")]
        [XmlElementAttribute(ElementName = "UserAddressID", IsNullable = false)]
        [DataColumnAttribute("UserAddressID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long UserAddressID
        {
            get
            {
                return this._UserAddressID;
            }
            set
            {
                if ((this._UserAddressID != value))
                {
                    this.OnUserAddressIDChanging();
                    this.SendPropertyChanging("UserAddressID");
                    this._UserAddressID = value;
                    this.SendPropertyChanged("UserAddressID");
                    this.OnUserAddressIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the useraddressid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the useraddressid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "UserAddress", IsRequired = false)]
        [XmlElementAttribute(ElementName = "UserAddress", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.UserAddress", ReferenceColumnName = "UserAddressID", ColumnName = "UserAddressID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.UserAddress UserAddress
        {
            get
            {
                return this._UserAddress;
            }
            set
            {
                if ((this._UserAddress != value))
                {
                    this._UserAddress = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new user data entity.
        /// </summary>
        /// <param name="userID">Initial value of UserID.</param>
        /// <param name="loginUsername">Initial value of LoginUsername.</param>
        /// <param name="loginPassword">Initial value of LoginPassword.</param>
        /// <param name="userSuspended">Initial value of UserSuspended.</param>
        /// <param name="userAddressID">Initial value of UserAddressID.</param>
        /// <returns>The Data.User entity.</returns>
        public static Data.User CreateUser(long userID, string loginUsername, string loginPassword, bool userSuspended, long userAddressID)
        {
            Data.User user = new Data.User();
            user.UserID = userID;
            user.LoginUsername = loginUsername;
            user.LoginPassword = loginPassword;
            user.UserSuspended = userSuspended;
            user.UserAddressID = userAddressID;
            return user;
        }
    }
    
    /// <summary>
    /// The internationaltimezone data object class.
    /// </summary>
    [DataContractAttribute(Name = "InternationalTimeZone", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.InternationalTimeZone")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class InternationalTimeZone : DataBase
    {
        
        private long _InternationalTimeZoneID;
        
        private string _SystemTimeZoneName;
        
        private string _DisplayTimeZoneName;
        
        private string _UniversalTimeOffset;
        
        private long _GroupOrder;
        
        private bool _TimeZoneVisible;
        
        private string _CountryName;
        
        private Data.Country _Country;
        
        private Data.StateTimeZone[] _StateTimeZoneCollection;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On InternationalTimeZoneID column data entity changed.
        /// </summary>
		partial void OnInternationalTimeZoneIDChanged();

        /// <summary>
        /// On InternationalTimeZoneID column data entity changing.
        /// </summary>
		partial void OnInternationalTimeZoneIDChanging();

        /// <summary>
        /// On SystemTimeZoneName column data entity changed.
        /// </summary>
		partial void OnSystemTimeZoneNameChanged();

        /// <summary>
        /// On SystemTimeZoneName column data entity changing.
        /// </summary>
		partial void OnSystemTimeZoneNameChanging();

        /// <summary>
        /// On DisplayTimeZoneName column data entity changed.
        /// </summary>
		partial void OnDisplayTimeZoneNameChanged();

        /// <summary>
        /// On DisplayTimeZoneName column data entity changing.
        /// </summary>
		partial void OnDisplayTimeZoneNameChanging();

        /// <summary>
        /// On UniversalTimeOffset column data entity changed.
        /// </summary>
		partial void OnUniversalTimeOffsetChanged();

        /// <summary>
        /// On UniversalTimeOffset column data entity changing.
        /// </summary>
		partial void OnUniversalTimeOffsetChanging();

        /// <summary>
        /// On GroupOrder column data entity changed.
        /// </summary>
		partial void OnGroupOrderChanged();

        /// <summary>
        /// On GroupOrder column data entity changing.
        /// </summary>
		partial void OnGroupOrderChanging();

        /// <summary>
        /// On TimeZoneVisible column data entity changed.
        /// </summary>
		partial void OnTimeZoneVisibleChanged();

        /// <summary>
        /// On TimeZoneVisible column data entity changing.
        /// </summary>
		partial void OnTimeZoneVisibleChanging();

        /// <summary>
        /// On CountryName column data entity changed.
        /// </summary>
		partial void OnCountryNameChanged();

        /// <summary>
        /// On CountryName column data entity changing.
        /// </summary>
		partial void OnCountryNameChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public InternationalTimeZone()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the internationaltimezoneid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the internationaltimezoneid property for the object.")]
        [DataMemberAttribute(Name = "InternationalTimeZoneID")]
        [XmlElementAttribute(ElementName = "InternationalTimeZoneID", IsNullable = false)]
        [DataColumnAttribute("InternationalTimeZoneID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long InternationalTimeZoneID
        {
            get
            {
                return this._InternationalTimeZoneID;
            }
            set
            {
                if ((this._InternationalTimeZoneID != value))
                {
                    this.OnInternationalTimeZoneIDChanging();
                    this.SendPropertyChanging("InternationalTimeZoneID");
                    this._InternationalTimeZoneID = value;
                    this.SendPropertyChanged("InternationalTimeZoneID");
                    this.OnInternationalTimeZoneIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the systemtimezonename property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the systemtimezonename property for the object.")]
        [DataMemberAttribute(Name = "SystemTimeZoneName")]
        [XmlElementAttribute(ElementName = "SystemTimeZoneName", IsNullable = false)]
        [DataColumnAttribute("SystemTimeZoneName", DbType = "varchar", Length = 200, IsNullable = false)]
        public string SystemTimeZoneName
        {
            get
            {
                return this._SystemTimeZoneName;
            }
            set
            {
                if ((this._SystemTimeZoneName != value))
                {
                    this.OnSystemTimeZoneNameChanging();
                    this.SendPropertyChanging("SystemTimeZoneName");
                    this._SystemTimeZoneName = value;
                    this.SendPropertyChanged("SystemTimeZoneName");
                    this.OnSystemTimeZoneNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the displaytimezonename property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the displaytimezonename property for the object.")]
        [DataMemberAttribute(Name = "DisplayTimeZoneName")]
        [XmlElementAttribute(ElementName = "DisplayTimeZoneName", IsNullable = false)]
        [DataColumnAttribute("DisplayTimeZoneName", DbType = "varchar", Length = 200, IsNullable = false)]
        public string DisplayTimeZoneName
        {
            get
            {
                return this._DisplayTimeZoneName;
            }
            set
            {
                if ((this._DisplayTimeZoneName != value))
                {
                    this.OnDisplayTimeZoneNameChanging();
                    this.SendPropertyChanging("DisplayTimeZoneName");
                    this._DisplayTimeZoneName = value;
                    this.SendPropertyChanged("DisplayTimeZoneName");
                    this.OnDisplayTimeZoneNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the universaltimeoffset property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the universaltimeoffset property for the object.")]
        [DataMemberAttribute(Name = "UniversalTimeOffset")]
        [XmlElementAttribute(ElementName = "UniversalTimeOffset", IsNullable = true)]
        [DataColumnAttribute("UniversalTimeOffset", DbType = "varchar", Length = 50, IsNullable = true)]
        public string UniversalTimeOffset
        {
            get
            {
                return this._UniversalTimeOffset;
            }
            set
            {
                if ((this._UniversalTimeOffset != value))
                {
                    this.OnUniversalTimeOffsetChanging();
                    this.SendPropertyChanging("UniversalTimeOffset");
                    this._UniversalTimeOffset = value;
                    this.SendPropertyChanged("UniversalTimeOffset");
                    this.OnUniversalTimeOffsetChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the grouporder property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the grouporder property for the object.")]
        [DataMemberAttribute(Name = "GroupOrder")]
        [XmlElementAttribute(ElementName = "GroupOrder", IsNullable = false)]
        [DataColumnAttribute("GroupOrder", DbType = "bigint", Length = 8, IsNullable = false)]
        public long GroupOrder
        {
            get
            {
                return this._GroupOrder;
            }
            set
            {
                if ((this._GroupOrder != value))
                {
                    this.OnGroupOrderChanging();
                    this.SendPropertyChanging("GroupOrder");
                    this._GroupOrder = value;
                    this.SendPropertyChanged("GroupOrder");
                    this.OnGroupOrderChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the timezonevisible property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the timezonevisible property for the object.")]
        [DataMemberAttribute(Name = "TimeZoneVisible")]
        [XmlElementAttribute(ElementName = "TimeZoneVisible", IsNullable = false)]
        [DataColumnAttribute("TimeZoneVisible", DbType = "bit", Length = 1, IsNullable = false)]
        public bool TimeZoneVisible
        {
            get
            {
                return this._TimeZoneVisible;
            }
            set
            {
                if ((this._TimeZoneVisible != value))
                {
                    this.OnTimeZoneVisibleChanging();
                    this.SendPropertyChanging("TimeZoneVisible");
                    this._TimeZoneVisible = value;
                    this.SendPropertyChanged("TimeZoneVisible");
                    this.OnTimeZoneVisibleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the countryname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the countryname property for the object.")]
        [DataMemberAttribute(Name = "CountryName")]
        [XmlElementAttribute(ElementName = "CountryName", IsNullable = false)]
        [DataColumnAttribute("CountryName", DbType = "varchar", Length = 500, IsNullable = false)]
        public string CountryName
        {
            get
            {
                return this._CountryName;
            }
            set
            {
                if ((this._CountryName != value))
                {
                    this.OnCountryNameChanging();
                    this.SendPropertyChanging("CountryName");
                    this._CountryName = value;
                    this.SendPropertyChanged("CountryName");
                    this.OnCountryNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the countryname foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the countryname foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "Country", IsRequired = false)]
        [XmlElementAttribute(ElementName = "Country", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Country", ReferenceColumnName = "CountryName", ColumnName = "CountryName", ColumnType = "varchar", Length = 500, IsNullable = true, IsReference = true)]
        public Data.Country Country
        {
            get
            {
                return this._Country;
            }
            set
            {
                if ((this._Country != value))
                {
                    this._Country = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the statetimezone reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the statetimezone reference property for the object.")]
        [DataMemberAttribute(Name = "StateTimeZoneCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "StateTimeZoneCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.StateTimeZone", ColumnName = "InternationalTimeZoneID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.StateTimeZone[] StateTimeZoneCollection
        {
            get
            {
                return this._StateTimeZoneCollection;
            }
            set
            {
                if ((this._StateTimeZoneCollection != value))
                {
                    this._StateTimeZoneCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new internationaltimezone data entity.
        /// </summary>
        /// <param name="internationalTimeZoneID">Initial value of InternationalTimeZoneID.</param>
        /// <param name="systemTimeZoneName">Initial value of SystemTimeZoneName.</param>
        /// <param name="displayTimeZoneName">Initial value of DisplayTimeZoneName.</param>
        /// <param name="groupOrder">Initial value of GroupOrder.</param>
        /// <param name="timeZoneVisible">Initial value of TimeZoneVisible.</param>
        /// <param name="countryName">Initial value of CountryName.</param>
        /// <returns>The Data.InternationalTimeZone entity.</returns>
        public static Data.InternationalTimeZone CreateInternationalTimeZone(long internationalTimeZoneID, string systemTimeZoneName, string displayTimeZoneName, long groupOrder, bool timeZoneVisible, string countryName)
        {
            Data.InternationalTimeZone internationalTimeZone = new Data.InternationalTimeZone();
            internationalTimeZone.InternationalTimeZoneID = internationalTimeZoneID;
            internationalTimeZone.SystemTimeZoneName = systemTimeZoneName;
            internationalTimeZone.DisplayTimeZoneName = displayTimeZoneName;
            internationalTimeZone.GroupOrder = groupOrder;
            internationalTimeZone.TimeZoneVisible = timeZoneVisible;
            internationalTimeZone.CountryName = countryName;
            return internationalTimeZone;
        }
    }
    
    /// <summary>
    /// The errorlog data object class.
    /// </summary>
    [DataContractAttribute(Name = "ErrorLog", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.ErrorLog")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class ErrorLog : DataBase
    {
        
        private long _ErrorLogID;
        
        private long _ApplicationID;
        
        private string _ProcessName;
        
        private string _ErrorCode;
        
        private string _ErrorDescription;
        
        private System.Nullable<System.DateTime> _ErrorDate;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On ErrorLogID column data entity changed.
        /// </summary>
		partial void OnErrorLogIDChanged();

        /// <summary>
        /// On ErrorLogID column data entity changing.
        /// </summary>
		partial void OnErrorLogIDChanging();

        /// <summary>
        /// On ApplicationID column data entity changed.
        /// </summary>
		partial void OnApplicationIDChanged();

        /// <summary>
        /// On ApplicationID column data entity changing.
        /// </summary>
		partial void OnApplicationIDChanging();

        /// <summary>
        /// On ProcessName column data entity changed.
        /// </summary>
		partial void OnProcessNameChanged();

        /// <summary>
        /// On ProcessName column data entity changing.
        /// </summary>
		partial void OnProcessNameChanging();

        /// <summary>
        /// On ErrorCode column data entity changed.
        /// </summary>
		partial void OnErrorCodeChanged();

        /// <summary>
        /// On ErrorCode column data entity changing.
        /// </summary>
		partial void OnErrorCodeChanging();

        /// <summary>
        /// On ErrorDescription column data entity changed.
        /// </summary>
		partial void OnErrorDescriptionChanged();

        /// <summary>
        /// On ErrorDescription column data entity changing.
        /// </summary>
		partial void OnErrorDescriptionChanging();

        /// <summary>
        /// On ErrorDate column data entity changed.
        /// </summary>
		partial void OnErrorDateChanged();

        /// <summary>
        /// On ErrorDate column data entity changing.
        /// </summary>
		partial void OnErrorDateChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public ErrorLog()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the errorlogid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the errorlogid property for the object.")]
        [DataMemberAttribute(Name = "ErrorLogID")]
        [XmlElementAttribute(ElementName = "ErrorLogID", IsNullable = false)]
        [DataColumnAttribute("ErrorLogID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long ErrorLogID
        {
            get
            {
                return this._ErrorLogID;
            }
            set
            {
                if ((this._ErrorLogID != value))
                {
                    this.OnErrorLogIDChanging();
                    this.SendPropertyChanging("ErrorLogID");
                    this._ErrorLogID = value;
                    this.SendPropertyChanged("ErrorLogID");
                    this.OnErrorLogIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the applicationid property for the object.")]
        [DataMemberAttribute(Name = "ApplicationID")]
        [XmlElementAttribute(ElementName = "ApplicationID", IsNullable = false)]
        [DataColumnAttribute("ApplicationID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long ApplicationID
        {
            get
            {
                return this._ApplicationID;
            }
            set
            {
                if ((this._ApplicationID != value))
                {
                    this.OnApplicationIDChanging();
                    this.SendPropertyChanging("ApplicationID");
                    this._ApplicationID = value;
                    this.SendPropertyChanged("ApplicationID");
                    this.OnApplicationIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the processname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the processname property for the object.")]
        [DataMemberAttribute(Name = "ProcessName")]
        [XmlElementAttribute(ElementName = "ProcessName", IsNullable = true)]
        [DataColumnAttribute("ProcessName", DbType = "varchar", Length = 200, IsNullable = true)]
        public string ProcessName
        {
            get
            {
                return this._ProcessName;
            }
            set
            {
                if ((this._ProcessName != value))
                {
                    this.OnProcessNameChanging();
                    this.SendPropertyChanging("ProcessName");
                    this._ProcessName = value;
                    this.SendPropertyChanged("ProcessName");
                    this.OnProcessNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the errorcode property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the errorcode property for the object.")]
        [DataMemberAttribute(Name = "ErrorCode")]
        [XmlElementAttribute(ElementName = "ErrorCode", IsNullable = true)]
        [DataColumnAttribute("ErrorCode", DbType = "varchar", Length = 50, IsNullable = true)]
        public string ErrorCode
        {
            get
            {
                return this._ErrorCode;
            }
            set
            {
                if ((this._ErrorCode != value))
                {
                    this.OnErrorCodeChanging();
                    this.SendPropertyChanging("ErrorCode");
                    this._ErrorCode = value;
                    this.SendPropertyChanged("ErrorCode");
                    this.OnErrorCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the errordescription property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the errordescription property for the object.")]
        [DataMemberAttribute(Name = "ErrorDescription")]
        [XmlElementAttribute(ElementName = "ErrorDescription", IsNullable = true)]
        [DataColumnAttribute("ErrorDescription", DbType = "varchar", Length = -1, IsNullable = true)]
        public string ErrorDescription
        {
            get
            {
                return this._ErrorDescription;
            }
            set
            {
                if ((this._ErrorDescription != value))
                {
                    this.OnErrorDescriptionChanging();
                    this.SendPropertyChanging("ErrorDescription");
                    this._ErrorDescription = value;
                    this.SendPropertyChanged("ErrorDescription");
                    this.OnErrorDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the errordate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the errordate property for the object.")]
        [DataMemberAttribute(Name = "ErrorDate")]
        [XmlElementAttribute(ElementName = "ErrorDate", IsNullable = true)]
        [DataColumnAttribute("ErrorDate", DbType = "datetime", Length = 8, IsNullable = true)]
        public System.Nullable<System.DateTime> ErrorDate
        {
            get
            {
                return this._ErrorDate;
            }
            set
            {
                if ((this._ErrorDate != value))
                {
                    this.OnErrorDateChanging();
                    this.SendPropertyChanging("ErrorDate");
                    this._ErrorDate = value;
                    this.SendPropertyChanged("ErrorDate");
                    this.OnErrorDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Create a new errorlog data entity.
        /// </summary>
        /// <param name="errorLogID">Initial value of ErrorLogID.</param>
        /// <param name="applicationID">Initial value of ApplicationID.</param>
        /// <returns>The Data.ErrorLog entity.</returns>
        public static Data.ErrorLog CreateErrorLog(long errorLogID, long applicationID)
        {
            Data.ErrorLog errorLog = new Data.ErrorLog();
            errorLog.ErrorLogID = errorLogID;
            errorLog.ApplicationID = applicationID;
            return errorLog;
        }
    }
    
    /// <summary>
    /// The changelog data object class.
    /// </summary>
    [DataContractAttribute(Name = "ChangeLog", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.ChangeLog")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class ChangeLog : DataBase
    {
        
        private long _ChangeID;
        
        private long _UserID;
        
        private long _ScreenID;
        
        private long _ApplicationID;
        
        private string _PrimaryKeyID;
        
        private System.DateTime _ModifiedDate;
        
        private string _Change;
        
        private string _IPAddress;
        
        private Data.Screen _Screen;
        
        private Data.Application _Application;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On ChangeID column data entity changed.
        /// </summary>
		partial void OnChangeIDChanged();

        /// <summary>
        /// On ChangeID column data entity changing.
        /// </summary>
		partial void OnChangeIDChanging();

        /// <summary>
        /// On UserID column data entity changed.
        /// </summary>
		partial void OnUserIDChanged();

        /// <summary>
        /// On UserID column data entity changing.
        /// </summary>
		partial void OnUserIDChanging();

        /// <summary>
        /// On ScreenID column data entity changed.
        /// </summary>
		partial void OnScreenIDChanged();

        /// <summary>
        /// On ScreenID column data entity changing.
        /// </summary>
		partial void OnScreenIDChanging();

        /// <summary>
        /// On ApplicationID column data entity changed.
        /// </summary>
		partial void OnApplicationIDChanged();

        /// <summary>
        /// On ApplicationID column data entity changing.
        /// </summary>
		partial void OnApplicationIDChanging();

        /// <summary>
        /// On PrimaryKeyID column data entity changed.
        /// </summary>
		partial void OnPrimaryKeyIDChanged();

        /// <summary>
        /// On PrimaryKeyID column data entity changing.
        /// </summary>
		partial void OnPrimaryKeyIDChanging();

        /// <summary>
        /// On ModifiedDate column data entity changed.
        /// </summary>
		partial void OnModifiedDateChanged();

        /// <summary>
        /// On ModifiedDate column data entity changing.
        /// </summary>
		partial void OnModifiedDateChanging();

        /// <summary>
        /// On Change column data entity changed.
        /// </summary>
		partial void OnChangeChanged();

        /// <summary>
        /// On Change column data entity changing.
        /// </summary>
		partial void OnChangeChanging();

        /// <summary>
        /// On IPAddress column data entity changed.
        /// </summary>
		partial void OnIPAddressChanged();

        /// <summary>
        /// On IPAddress column data entity changing.
        /// </summary>
		partial void OnIPAddressChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public ChangeLog()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the changeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the changeid property for the object.")]
        [DataMemberAttribute(Name = "ChangeID")]
        [XmlElementAttribute(ElementName = "ChangeID", IsNullable = false)]
        [DataColumnAttribute("ChangeID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long ChangeID
        {
            get
            {
                return this._ChangeID;
            }
            set
            {
                if ((this._ChangeID != value))
                {
                    this.OnChangeIDChanging();
                    this.SendPropertyChanging("ChangeID");
                    this._ChangeID = value;
                    this.SendPropertyChanged("ChangeID");
                    this.OnChangeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the userid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the userid property for the object.")]
        [DataMemberAttribute(Name = "UserID")]
        [XmlElementAttribute(ElementName = "UserID", IsNullable = false)]
        [DataColumnAttribute("UserID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long UserID
        {
            get
            {
                return this._UserID;
            }
            set
            {
                if ((this._UserID != value))
                {
                    this.OnUserIDChanging();
                    this.SendPropertyChanging("UserID");
                    this._UserID = value;
                    this.SendPropertyChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the screenid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the screenid property for the object.")]
        [DataMemberAttribute(Name = "ScreenID")]
        [XmlElementAttribute(ElementName = "ScreenID", IsNullable = false)]
        [DataColumnAttribute("ScreenID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long ScreenID
        {
            get
            {
                return this._ScreenID;
            }
            set
            {
                if ((this._ScreenID != value))
                {
                    this.OnScreenIDChanging();
                    this.SendPropertyChanging("ScreenID");
                    this._ScreenID = value;
                    this.SendPropertyChanged("ScreenID");
                    this.OnScreenIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the applicationid property for the object.")]
        [DataMemberAttribute(Name = "ApplicationID")]
        [XmlElementAttribute(ElementName = "ApplicationID", IsNullable = false)]
        [DataColumnAttribute("ApplicationID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long ApplicationID
        {
            get
            {
                return this._ApplicationID;
            }
            set
            {
                if ((this._ApplicationID != value))
                {
                    this.OnApplicationIDChanging();
                    this.SendPropertyChanging("ApplicationID");
                    this._ApplicationID = value;
                    this.SendPropertyChanged("ApplicationID");
                    this.OnApplicationIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the primarykeyid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the primarykeyid property for the object.")]
        [DataMemberAttribute(Name = "PrimaryKeyID")]
        [XmlElementAttribute(ElementName = "PrimaryKeyID", IsNullable = false)]
        [DataColumnAttribute("PrimaryKeyID", DbType = "varchar", Length = 200, IsNullable = false)]
        public string PrimaryKeyID
        {
            get
            {
                return this._PrimaryKeyID;
            }
            set
            {
                if ((this._PrimaryKeyID != value))
                {
                    this.OnPrimaryKeyIDChanging();
                    this.SendPropertyChanging("PrimaryKeyID");
                    this._PrimaryKeyID = value;
                    this.SendPropertyChanged("PrimaryKeyID");
                    this.OnPrimaryKeyIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the modifieddate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the modifieddate property for the object.")]
        [DataMemberAttribute(Name = "ModifiedDate")]
        [XmlElementAttribute(ElementName = "ModifiedDate", IsNullable = false)]
        [DataColumnAttribute("ModifiedDate", DbType = "datetime", Length = 8, IsNullable = false)]
        public System.DateTime ModifiedDate
        {
            get
            {
                return this._ModifiedDate;
            }
            set
            {
                if ((this._ModifiedDate != value))
                {
                    this.OnModifiedDateChanging();
                    this.SendPropertyChanging("ModifiedDate");
                    this._ModifiedDate = value;
                    this.SendPropertyChanged("ModifiedDate");
                    this.OnModifiedDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the change property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the change property for the object.")]
        [DataMemberAttribute(Name = "Change")]
        [XmlElementAttribute(ElementName = "Change", IsNullable = false)]
        [DataColumnAttribute("Change", DbType = "text", Length = -1, IsNullable = false)]
        public string Change
        {
            get
            {
                return this._Change;
            }
            set
            {
                if ((this._Change != value))
                {
                    this.OnChangeChanging();
                    this.SendPropertyChanging("Change");
                    this._Change = value;
                    this.SendPropertyChanged("Change");
                    this.OnChangeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the ipaddress property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the ipaddress property for the object.")]
        [DataMemberAttribute(Name = "IPAddress")]
        [XmlElementAttribute(ElementName = "IPAddress", IsNullable = false)]
        [DataColumnAttribute("IPAddress", DbType = "varchar", Length = 500, IsNullable = false)]
        public string IPAddress
        {
            get
            {
                return this._IPAddress;
            }
            set
            {
                if ((this._IPAddress != value))
                {
                    this.OnIPAddressChanging();
                    this.SendPropertyChanging("IPAddress");
                    this._IPAddress = value;
                    this.SendPropertyChanged("IPAddress");
                    this.OnIPAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the screenid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the screenid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "Screen", IsRequired = false)]
        [XmlElementAttribute(ElementName = "Screen", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Screen", ReferenceColumnName = "ScreenID", ColumnName = "ScreenID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.Screen Screen
        {
            get
            {
                return this._Screen;
            }
            set
            {
                if ((this._Screen != value))
                {
                    this._Screen = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the applicationid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "Application", IsRequired = false)]
        [XmlElementAttribute(ElementName = "Application", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Application", ReferenceColumnName = "ApplicationID", ColumnName = "ApplicationID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.Application Application
        {
            get
            {
                return this._Application;
            }
            set
            {
                if ((this._Application != value))
                {
                    this._Application = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new changelog data entity.
        /// </summary>
        /// <param name="changeID">Initial value of ChangeID.</param>
        /// <param name="userID">Initial value of UserID.</param>
        /// <param name="screenID">Initial value of ScreenID.</param>
        /// <param name="applicationID">Initial value of ApplicationID.</param>
        /// <param name="primaryKeyID">Initial value of PrimaryKeyID.</param>
        /// <param name="modifiedDate">Initial value of ModifiedDate.</param>
        /// <param name="change">Initial value of Change.</param>
        /// <param name="iPAddress">Initial value of IPAddress.</param>
        /// <returns>The Data.ChangeLog entity.</returns>
        public static Data.ChangeLog CreateChangeLog(long changeID, long userID, long screenID, long applicationID, string primaryKeyID, System.DateTime modifiedDate, string change, string iPAddress)
        {
            Data.ChangeLog changeLog = new Data.ChangeLog();
            changeLog.ChangeID = changeID;
            changeLog.UserID = userID;
            changeLog.ScreenID = screenID;
            changeLog.ApplicationID = applicationID;
            changeLog.PrimaryKeyID = primaryKeyID;
            changeLog.ModifiedDate = modifiedDate;
            changeLog.Change = change;
            changeLog.IPAddress = iPAddress;
            return changeLog;
        }
    }
    
    /// <summary>
    /// The loginhistory data object class.
    /// </summary>
    [DataContractAttribute(Name = "LoginHistory", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.LoginHistory")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class LoginHistory : DataBase
    {
        
        private long _LoginHistoryID;
        
        private long _UserID;
        
        private long _ApplicationID;
        
        private System.DateTime _LoginDate;
        
        private System.Nullable<System.DateTime> _LogoutDate;
        
        private string _IPAddress;
        
        private Data.Application _Application;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On LoginHistoryID column data entity changed.
        /// </summary>
		partial void OnLoginHistoryIDChanged();

        /// <summary>
        /// On LoginHistoryID column data entity changing.
        /// </summary>
		partial void OnLoginHistoryIDChanging();

        /// <summary>
        /// On UserID column data entity changed.
        /// </summary>
		partial void OnUserIDChanged();

        /// <summary>
        /// On UserID column data entity changing.
        /// </summary>
		partial void OnUserIDChanging();

        /// <summary>
        /// On ApplicationID column data entity changed.
        /// </summary>
		partial void OnApplicationIDChanged();

        /// <summary>
        /// On ApplicationID column data entity changing.
        /// </summary>
		partial void OnApplicationIDChanging();

        /// <summary>
        /// On LoginDate column data entity changed.
        /// </summary>
		partial void OnLoginDateChanged();

        /// <summary>
        /// On LoginDate column data entity changing.
        /// </summary>
		partial void OnLoginDateChanging();

        /// <summary>
        /// On LogoutDate column data entity changed.
        /// </summary>
		partial void OnLogoutDateChanged();

        /// <summary>
        /// On LogoutDate column data entity changing.
        /// </summary>
		partial void OnLogoutDateChanging();

        /// <summary>
        /// On IPAddress column data entity changed.
        /// </summary>
		partial void OnIPAddressChanged();

        /// <summary>
        /// On IPAddress column data entity changing.
        /// </summary>
		partial void OnIPAddressChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public LoginHistory()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the loginhistoryid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the loginhistoryid property for the object.")]
        [DataMemberAttribute(Name = "LoginHistoryID")]
        [XmlElementAttribute(ElementName = "LoginHistoryID", IsNullable = false)]
        [DataColumnAttribute("LoginHistoryID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long LoginHistoryID
        {
            get
            {
                return this._LoginHistoryID;
            }
            set
            {
                if ((this._LoginHistoryID != value))
                {
                    this.OnLoginHistoryIDChanging();
                    this.SendPropertyChanging("LoginHistoryID");
                    this._LoginHistoryID = value;
                    this.SendPropertyChanged("LoginHistoryID");
                    this.OnLoginHistoryIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the userid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the userid property for the object.")]
        [DataMemberAttribute(Name = "UserID")]
        [XmlElementAttribute(ElementName = "UserID", IsNullable = false)]
        [DataColumnAttribute("UserID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long UserID
        {
            get
            {
                return this._UserID;
            }
            set
            {
                if ((this._UserID != value))
                {
                    this.OnUserIDChanging();
                    this.SendPropertyChanging("UserID");
                    this._UserID = value;
                    this.SendPropertyChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the applicationid property for the object.")]
        [DataMemberAttribute(Name = "ApplicationID")]
        [XmlElementAttribute(ElementName = "ApplicationID", IsNullable = false)]
        [DataColumnAttribute("ApplicationID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long ApplicationID
        {
            get
            {
                return this._ApplicationID;
            }
            set
            {
                if ((this._ApplicationID != value))
                {
                    this.OnApplicationIDChanging();
                    this.SendPropertyChanging("ApplicationID");
                    this._ApplicationID = value;
                    this.SendPropertyChanged("ApplicationID");
                    this.OnApplicationIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the logindate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the logindate property for the object.")]
        [DataMemberAttribute(Name = "LoginDate")]
        [XmlElementAttribute(ElementName = "LoginDate", IsNullable = false)]
        [DataColumnAttribute("LoginDate", DbType = "datetime", Length = 8, IsNullable = false)]
        public System.DateTime LoginDate
        {
            get
            {
                return this._LoginDate;
            }
            set
            {
                if ((this._LoginDate != value))
                {
                    this.OnLoginDateChanging();
                    this.SendPropertyChanging("LoginDate");
                    this._LoginDate = value;
                    this.SendPropertyChanged("LoginDate");
                    this.OnLoginDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the logoutdate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the logoutdate property for the object.")]
        [DataMemberAttribute(Name = "LogoutDate")]
        [XmlElementAttribute(ElementName = "LogoutDate", IsNullable = true)]
        [DataColumnAttribute("LogoutDate", DbType = "datetime", Length = 8, IsNullable = true)]
        public System.Nullable<System.DateTime> LogoutDate
        {
            get
            {
                return this._LogoutDate;
            }
            set
            {
                if ((this._LogoutDate != value))
                {
                    this.OnLogoutDateChanging();
                    this.SendPropertyChanging("LogoutDate");
                    this._LogoutDate = value;
                    this.SendPropertyChanged("LogoutDate");
                    this.OnLogoutDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the ipaddress property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the ipaddress property for the object.")]
        [DataMemberAttribute(Name = "IPAddress")]
        [XmlElementAttribute(ElementName = "IPAddress", IsNullable = false)]
        [DataColumnAttribute("IPAddress", DbType = "varchar", Length = 500, IsNullable = false)]
        public string IPAddress
        {
            get
            {
                return this._IPAddress;
            }
            set
            {
                if ((this._IPAddress != value))
                {
                    this.OnIPAddressChanging();
                    this.SendPropertyChanging("IPAddress");
                    this._IPAddress = value;
                    this.SendPropertyChanged("IPAddress");
                    this.OnIPAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the applicationid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "Application", IsRequired = false)]
        [XmlElementAttribute(ElementName = "Application", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Application", ReferenceColumnName = "ApplicationID", ColumnName = "ApplicationID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.Application Application
        {
            get
            {
                return this._Application;
            }
            set
            {
                if ((this._Application != value))
                {
                    this._Application = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new loginhistory data entity.
        /// </summary>
        /// <param name="loginHistoryID">Initial value of LoginHistoryID.</param>
        /// <param name="userID">Initial value of UserID.</param>
        /// <param name="applicationID">Initial value of ApplicationID.</param>
        /// <param name="loginDate">Initial value of LoginDate.</param>
        /// <param name="iPAddress">Initial value of IPAddress.</param>
        /// <returns>The Data.LoginHistory entity.</returns>
        public static Data.LoginHistory CreateLoginHistory(long loginHistoryID, long userID, long applicationID, System.DateTime loginDate, string iPAddress)
        {
            Data.LoginHistory loginHistory = new Data.LoginHistory();
            loginHistory.LoginHistoryID = loginHistoryID;
            loginHistory.UserID = userID;
            loginHistory.ApplicationID = applicationID;
            loginHistory.LoginDate = loginDate;
            loginHistory.IPAddress = iPAddress;
            return loginHistory;
        }
    }
    
    /// <summary>
    /// The language data object class.
    /// </summary>
    [DataContractAttribute(Name = "Language", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Language")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Language : DataBase
    {
        
        private long _LanguageID;
        
        private string _LanguageCode;
        
        private string _LanguageCountryCode;
        
        private string _CountryName;
        
        private string _LanguageName;
        
        private long _GroupOrder;
        
        private bool _LanguageVisible;
        
        private Data.Country _Country;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On LanguageID column data entity changed.
        /// </summary>
		partial void OnLanguageIDChanged();

        /// <summary>
        /// On LanguageID column data entity changing.
        /// </summary>
		partial void OnLanguageIDChanging();

        /// <summary>
        /// On LanguageCode column data entity changed.
        /// </summary>
		partial void OnLanguageCodeChanged();

        /// <summary>
        /// On LanguageCode column data entity changing.
        /// </summary>
		partial void OnLanguageCodeChanging();

        /// <summary>
        /// On LanguageCountryCode column data entity changed.
        /// </summary>
		partial void OnLanguageCountryCodeChanged();

        /// <summary>
        /// On LanguageCountryCode column data entity changing.
        /// </summary>
		partial void OnLanguageCountryCodeChanging();

        /// <summary>
        /// On CountryName column data entity changed.
        /// </summary>
		partial void OnCountryNameChanged();

        /// <summary>
        /// On CountryName column data entity changing.
        /// </summary>
		partial void OnCountryNameChanging();

        /// <summary>
        /// On LanguageName column data entity changed.
        /// </summary>
		partial void OnLanguageNameChanged();

        /// <summary>
        /// On LanguageName column data entity changing.
        /// </summary>
		partial void OnLanguageNameChanging();

        /// <summary>
        /// On GroupOrder column data entity changed.
        /// </summary>
		partial void OnGroupOrderChanged();

        /// <summary>
        /// On GroupOrder column data entity changing.
        /// </summary>
		partial void OnGroupOrderChanging();

        /// <summary>
        /// On LanguageVisible column data entity changed.
        /// </summary>
		partial void OnLanguageVisibleChanged();

        /// <summary>
        /// On LanguageVisible column data entity changing.
        /// </summary>
		partial void OnLanguageVisibleChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Language()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the languageid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the languageid property for the object.")]
        [DataMemberAttribute(Name = "LanguageID")]
        [XmlElementAttribute(ElementName = "LanguageID", IsNullable = false)]
        [DataColumnAttribute("LanguageID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long LanguageID
        {
            get
            {
                return this._LanguageID;
            }
            set
            {
                if ((this._LanguageID != value))
                {
                    this.OnLanguageIDChanging();
                    this.SendPropertyChanging("LanguageID");
                    this._LanguageID = value;
                    this.SendPropertyChanged("LanguageID");
                    this.OnLanguageIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the languagecode property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the languagecode property for the object.")]
        [DataMemberAttribute(Name = "LanguageCode")]
        [XmlElementAttribute(ElementName = "LanguageCode", IsNullable = false)]
        [DataColumnAttribute("LanguageCode", DbType = "varchar", Length = 50, IsNullable = false)]
        public string LanguageCode
        {
            get
            {
                return this._LanguageCode;
            }
            set
            {
                if ((this._LanguageCode != value))
                {
                    this.OnLanguageCodeChanging();
                    this.SendPropertyChanging("LanguageCode");
                    this._LanguageCode = value;
                    this.SendPropertyChanged("LanguageCode");
                    this.OnLanguageCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the languagecountrycode property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the languagecountrycode property for the object.")]
        [DataMemberAttribute(Name = "LanguageCountryCode")]
        [XmlElementAttribute(ElementName = "LanguageCountryCode", IsNullable = false)]
        [DataColumnAttribute("LanguageCountryCode", DbType = "varchar", Length = 50, IsNullable = false)]
        public string LanguageCountryCode
        {
            get
            {
                return this._LanguageCountryCode;
            }
            set
            {
                if ((this._LanguageCountryCode != value))
                {
                    this.OnLanguageCountryCodeChanging();
                    this.SendPropertyChanging("LanguageCountryCode");
                    this._LanguageCountryCode = value;
                    this.SendPropertyChanged("LanguageCountryCode");
                    this.OnLanguageCountryCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the countryname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the countryname property for the object.")]
        [DataMemberAttribute(Name = "CountryName")]
        [XmlElementAttribute(ElementName = "CountryName", IsNullable = false)]
        [DataColumnAttribute("CountryName", DbType = "varchar", Length = 500, IsNullable = false)]
        public string CountryName
        {
            get
            {
                return this._CountryName;
            }
            set
            {
                if ((this._CountryName != value))
                {
                    this.OnCountryNameChanging();
                    this.SendPropertyChanging("CountryName");
                    this._CountryName = value;
                    this.SendPropertyChanged("CountryName");
                    this.OnCountryNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the languagename property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the languagename property for the object.")]
        [DataMemberAttribute(Name = "LanguageName")]
        [XmlElementAttribute(ElementName = "LanguageName", IsNullable = false)]
        [DataColumnAttribute("LanguageName", DbType = "varchar", Length = 500, IsNullable = false)]
        public string LanguageName
        {
            get
            {
                return this._LanguageName;
            }
            set
            {
                if ((this._LanguageName != value))
                {
                    this.OnLanguageNameChanging();
                    this.SendPropertyChanging("LanguageName");
                    this._LanguageName = value;
                    this.SendPropertyChanged("LanguageName");
                    this.OnLanguageNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the grouporder property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the grouporder property for the object.")]
        [DataMemberAttribute(Name = "GroupOrder")]
        [XmlElementAttribute(ElementName = "GroupOrder", IsNullable = false)]
        [DataColumnAttribute("GroupOrder", DbType = "bigint", Length = 8, IsNullable = false)]
        public long GroupOrder
        {
            get
            {
                return this._GroupOrder;
            }
            set
            {
                if ((this._GroupOrder != value))
                {
                    this.OnGroupOrderChanging();
                    this.SendPropertyChanging("GroupOrder");
                    this._GroupOrder = value;
                    this.SendPropertyChanged("GroupOrder");
                    this.OnGroupOrderChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the languagevisible property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the languagevisible property for the object.")]
        [DataMemberAttribute(Name = "LanguageVisible")]
        [XmlElementAttribute(ElementName = "LanguageVisible", IsNullable = false)]
        [DataColumnAttribute("LanguageVisible", DbType = "bit", Length = 1, IsNullable = false)]
        public bool LanguageVisible
        {
            get
            {
                return this._LanguageVisible;
            }
            set
            {
                if ((this._LanguageVisible != value))
                {
                    this.OnLanguageVisibleChanging();
                    this.SendPropertyChanging("LanguageVisible");
                    this._LanguageVisible = value;
                    this.SendPropertyChanged("LanguageVisible");
                    this.OnLanguageVisibleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the countryname foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the countryname foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "Country", IsRequired = false)]
        [XmlElementAttribute(ElementName = "Country", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Country", ReferenceColumnName = "CountryName", ColumnName = "CountryName", ColumnType = "varchar", Length = 500, IsNullable = true, IsReference = true)]
        public Data.Country Country
        {
            get
            {
                return this._Country;
            }
            set
            {
                if ((this._Country != value))
                {
                    this._Country = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new language data entity.
        /// </summary>
        /// <param name="languageID">Initial value of LanguageID.</param>
        /// <param name="languageCode">Initial value of LanguageCode.</param>
        /// <param name="languageCountryCode">Initial value of LanguageCountryCode.</param>
        /// <param name="countryName">Initial value of CountryName.</param>
        /// <param name="languageName">Initial value of LanguageName.</param>
        /// <param name="groupOrder">Initial value of GroupOrder.</param>
        /// <param name="languageVisible">Initial value of LanguageVisible.</param>
        /// <returns>The Data.Language entity.</returns>
        public static Data.Language CreateLanguage(long languageID, string languageCode, string languageCountryCode, string countryName, string languageName, long groupOrder, bool languageVisible)
        {
            Data.Language language = new Data.Language();
            language.LanguageID = languageID;
            language.LanguageCode = languageCode;
            language.LanguageCountryCode = languageCountryCode;
            language.CountryName = countryName;
            language.LanguageName = languageName;
            language.GroupOrder = groupOrder;
            language.LanguageVisible = languageVisible;
            return language;
        }
    }
    
    /// <summary>
    /// The application data object class.
    /// </summary>
    [DataContractAttribute(Name = "Application", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Application")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Application : DataBase
    {
        
        private long _ApplicationID;
        
        private long _DepartmentID;
        
        private string _ApplicationName;
        
        private string _ApplicationDescription;
        
        private long _ApplicationCodeID;
        
        private long _ApplicationGroupOrder;
        
        private bool _ApplicationVisible;
        
        private Data.Department _Department;
        
        private Data.ApplicationUser[] _ApplicationUserCollection;
        
        private Data.ChangeLog[] _ChangeLogCollection;
        
        private Data.LoginHistory[] _LoginHistoryCollection;
        
        private Data.Screen[] _ScreenCollection;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On ApplicationID column data entity changed.
        /// </summary>
		partial void OnApplicationIDChanged();

        /// <summary>
        /// On ApplicationID column data entity changing.
        /// </summary>
		partial void OnApplicationIDChanging();

        /// <summary>
        /// On DepartmentID column data entity changed.
        /// </summary>
		partial void OnDepartmentIDChanged();

        /// <summary>
        /// On DepartmentID column data entity changing.
        /// </summary>
		partial void OnDepartmentIDChanging();

        /// <summary>
        /// On ApplicationName column data entity changed.
        /// </summary>
		partial void OnApplicationNameChanged();

        /// <summary>
        /// On ApplicationName column data entity changing.
        /// </summary>
		partial void OnApplicationNameChanging();

        /// <summary>
        /// On ApplicationDescription column data entity changed.
        /// </summary>
		partial void OnApplicationDescriptionChanged();

        /// <summary>
        /// On ApplicationDescription column data entity changing.
        /// </summary>
		partial void OnApplicationDescriptionChanging();

        /// <summary>
        /// On ApplicationCodeID column data entity changed.
        /// </summary>
		partial void OnApplicationCodeIDChanged();

        /// <summary>
        /// On ApplicationCodeID column data entity changing.
        /// </summary>
		partial void OnApplicationCodeIDChanging();

        /// <summary>
        /// On ApplicationGroupOrder column data entity changed.
        /// </summary>
		partial void OnApplicationGroupOrderChanged();

        /// <summary>
        /// On ApplicationGroupOrder column data entity changing.
        /// </summary>
		partial void OnApplicationGroupOrderChanging();

        /// <summary>
        /// On ApplicationVisible column data entity changed.
        /// </summary>
		partial void OnApplicationVisibleChanged();

        /// <summary>
        /// On ApplicationVisible column data entity changing.
        /// </summary>
		partial void OnApplicationVisibleChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Application()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the applicationid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the applicationid property for the object.")]
        [DataMemberAttribute(Name = "ApplicationID")]
        [XmlElementAttribute(ElementName = "ApplicationID", IsNullable = false)]
        [DataColumnAttribute("ApplicationID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long ApplicationID
        {
            get
            {
                return this._ApplicationID;
            }
            set
            {
                if ((this._ApplicationID != value))
                {
                    this.OnApplicationIDChanging();
                    this.SendPropertyChanging("ApplicationID");
                    this._ApplicationID = value;
                    this.SendPropertyChanged("ApplicationID");
                    this.OnApplicationIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the departmentid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the departmentid property for the object.")]
        [DataMemberAttribute(Name = "DepartmentID")]
        [XmlElementAttribute(ElementName = "DepartmentID", IsNullable = false)]
        [DataColumnAttribute("DepartmentID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long DepartmentID
        {
            get
            {
                return this._DepartmentID;
            }
            set
            {
                if ((this._DepartmentID != value))
                {
                    this.OnDepartmentIDChanging();
                    this.SendPropertyChanging("DepartmentID");
                    this._DepartmentID = value;
                    this.SendPropertyChanged("DepartmentID");
                    this.OnDepartmentIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the applicationname property for the object.")]
        [DataMemberAttribute(Name = "ApplicationName")]
        [XmlElementAttribute(ElementName = "ApplicationName", IsNullable = false)]
        [DataColumnAttribute("ApplicationName", DbType = "varchar", Length = 500, IsNullable = false)]
        public string ApplicationName
        {
            get
            {
                return this._ApplicationName;
            }
            set
            {
                if ((this._ApplicationName != value))
                {
                    this.OnApplicationNameChanging();
                    this.SendPropertyChanging("ApplicationName");
                    this._ApplicationName = value;
                    this.SendPropertyChanged("ApplicationName");
                    this.OnApplicationNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationdescription property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the applicationdescription property for the object.")]
        [DataMemberAttribute(Name = "ApplicationDescription")]
        [XmlElementAttribute(ElementName = "ApplicationDescription", IsNullable = false)]
        [DataColumnAttribute("ApplicationDescription", DbType = "varchar", Length = 1000, IsNullable = false)]
        public string ApplicationDescription
        {
            get
            {
                return this._ApplicationDescription;
            }
            set
            {
                if ((this._ApplicationDescription != value))
                {
                    this.OnApplicationDescriptionChanging();
                    this.SendPropertyChanging("ApplicationDescription");
                    this._ApplicationDescription = value;
                    this.SendPropertyChanged("ApplicationDescription");
                    this.OnApplicationDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationcodeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the applicationcodeid property for the object.")]
        [DataMemberAttribute(Name = "ApplicationCodeID")]
        [XmlElementAttribute(ElementName = "ApplicationCodeID", IsNullable = false)]
        [DataColumnAttribute("ApplicationCodeID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long ApplicationCodeID
        {
            get
            {
                return this._ApplicationCodeID;
            }
            set
            {
                if ((this._ApplicationCodeID != value))
                {
                    this.OnApplicationCodeIDChanging();
                    this.SendPropertyChanging("ApplicationCodeID");
                    this._ApplicationCodeID = value;
                    this.SendPropertyChanged("ApplicationCodeID");
                    this.OnApplicationCodeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationgrouporder property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the applicationgrouporder property for the object.")]
        [DataMemberAttribute(Name = "ApplicationGroupOrder")]
        [XmlElementAttribute(ElementName = "ApplicationGroupOrder", IsNullable = false)]
        [DataColumnAttribute("ApplicationGroupOrder", DbType = "bigint", Length = 8, IsNullable = false)]
        public long ApplicationGroupOrder
        {
            get
            {
                return this._ApplicationGroupOrder;
            }
            set
            {
                if ((this._ApplicationGroupOrder != value))
                {
                    this.OnApplicationGroupOrderChanging();
                    this.SendPropertyChanging("ApplicationGroupOrder");
                    this._ApplicationGroupOrder = value;
                    this.SendPropertyChanged("ApplicationGroupOrder");
                    this.OnApplicationGroupOrderChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationvisible property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the applicationvisible property for the object.")]
        [DataMemberAttribute(Name = "ApplicationVisible")]
        [XmlElementAttribute(ElementName = "ApplicationVisible", IsNullable = false)]
        [DataColumnAttribute("ApplicationVisible", DbType = "bit", Length = 1, IsNullable = false)]
        public bool ApplicationVisible
        {
            get
            {
                return this._ApplicationVisible;
            }
            set
            {
                if ((this._ApplicationVisible != value))
                {
                    this.OnApplicationVisibleChanging();
                    this.SendPropertyChanging("ApplicationVisible");
                    this._ApplicationVisible = value;
                    this.SendPropertyChanged("ApplicationVisible");
                    this.OnApplicationVisibleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the departmentid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the departmentid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "Department", IsRequired = false)]
        [XmlElementAttribute(ElementName = "Department", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Department", ReferenceColumnName = "DepartmentID", ColumnName = "DepartmentID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.Department Department
        {
            get
            {
                return this._Department;
            }
            set
            {
                if ((this._Department != value))
                {
                    this._Department = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationuser reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the applicationuser reference property for the object.")]
        [DataMemberAttribute(Name = "ApplicationUserCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "ApplicationUserCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.ApplicationUser", ColumnName = "ApplicationID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.ApplicationUser[] ApplicationUserCollection
        {
            get
            {
                return this._ApplicationUserCollection;
            }
            set
            {
                if ((this._ApplicationUserCollection != value))
                {
                    this._ApplicationUserCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the changelog reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the changelog reference property for the object.")]
        [DataMemberAttribute(Name = "ChangeLogCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "ChangeLogCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.ChangeLog", ColumnName = "ApplicationID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.ChangeLog[] ChangeLogCollection
        {
            get
            {
                return this._ChangeLogCollection;
            }
            set
            {
                if ((this._ChangeLogCollection != value))
                {
                    this._ChangeLogCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the loginhistory reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the loginhistory reference property for the object.")]
        [DataMemberAttribute(Name = "LoginHistoryCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "LoginHistoryCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.LoginHistory", ColumnName = "ApplicationID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.LoginHistory[] LoginHistoryCollection
        {
            get
            {
                return this._LoginHistoryCollection;
            }
            set
            {
                if ((this._LoginHistoryCollection != value))
                {
                    this._LoginHistoryCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the screen reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the screen reference property for the object.")]
        [DataMemberAttribute(Name = "ScreenCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "ScreenCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Screen", ColumnName = "ApplicationID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.Screen[] ScreenCollection
        {
            get
            {
                return this._ScreenCollection;
            }
            set
            {
                if ((this._ScreenCollection != value))
                {
                    this._ScreenCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new application data entity.
        /// </summary>
        /// <param name="applicationID">Initial value of ApplicationID.</param>
        /// <param name="departmentID">Initial value of DepartmentID.</param>
        /// <param name="applicationName">Initial value of ApplicationName.</param>
        /// <param name="applicationDescription">Initial value of ApplicationDescription.</param>
        /// <param name="applicationCodeID">Initial value of ApplicationCodeID.</param>
        /// <param name="applicationGroupOrder">Initial value of ApplicationGroupOrder.</param>
        /// <param name="applicationVisible">Initial value of ApplicationVisible.</param>
        /// <returns>The Data.Application entity.</returns>
        public static Data.Application CreateApplication(long applicationID, long departmentID, string applicationName, string applicationDescription, long applicationCodeID, long applicationGroupOrder, bool applicationVisible)
        {
            Data.Application application = new Data.Application();
            application.ApplicationID = applicationID;
            application.DepartmentID = departmentID;
            application.ApplicationName = applicationName;
            application.ApplicationDescription = applicationDescription;
            application.ApplicationCodeID = applicationCodeID;
            application.ApplicationGroupOrder = applicationGroupOrder;
            application.ApplicationVisible = applicationVisible;
            return application;
        }
    }
    
    /// <summary>
    /// The company data object class.
    /// </summary>
    [DataContractAttribute(Name = "Company", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Company")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Company : DataBase
    {
        
        private long _CompanyID;
        
        private string _CompanyName;
        
        private string _CompanyDescription;
        
        private string _ABNReference;
        
        private string _ContactName;
        
        private string _ContactPosition;
        
        private string _Address1;
        
        private string _Address2;
        
        private string _Suburb;
        
        private System.Nullable<System.Int64> _StateID;
        
        private string _PostCode;
        
        private string _PhoneNumber;
        
        private string _FaxNumber;
        
        private string _EmailAddress;
        
        private string _WebSite;
        
        private string _PostalAddress1;
        
        private string _PostalAddress2;
        
        private string _PostalSuburb;
        
        private System.Nullable<System.Int64> _PostalStateID;
        
        private string _PostalPostCode;
        
        private long _CountryID;
        
        private System.Nullable<System.DateTime> _ModifiedDate;
        
        private byte[] _RowVersionData;
        
        private Data.State _State1;
        
        private Data.State _State2;
        
        private Data.Country _Country;
        
        private Data.Department[] _DepartmentCollection;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On CompanyID column data entity changed.
        /// </summary>
		partial void OnCompanyIDChanged();

        /// <summary>
        /// On CompanyID column data entity changing.
        /// </summary>
		partial void OnCompanyIDChanging();

        /// <summary>
        /// On CompanyName column data entity changed.
        /// </summary>
		partial void OnCompanyNameChanged();

        /// <summary>
        /// On CompanyName column data entity changing.
        /// </summary>
		partial void OnCompanyNameChanging();

        /// <summary>
        /// On CompanyDescription column data entity changed.
        /// </summary>
		partial void OnCompanyDescriptionChanged();

        /// <summary>
        /// On CompanyDescription column data entity changing.
        /// </summary>
		partial void OnCompanyDescriptionChanging();

        /// <summary>
        /// On ABNReference column data entity changed.
        /// </summary>
		partial void OnABNReferenceChanged();

        /// <summary>
        /// On ABNReference column data entity changing.
        /// </summary>
		partial void OnABNReferenceChanging();

        /// <summary>
        /// On ContactName column data entity changed.
        /// </summary>
		partial void OnContactNameChanged();

        /// <summary>
        /// On ContactName column data entity changing.
        /// </summary>
		partial void OnContactNameChanging();

        /// <summary>
        /// On ContactPosition column data entity changed.
        /// </summary>
		partial void OnContactPositionChanged();

        /// <summary>
        /// On ContactPosition column data entity changing.
        /// </summary>
		partial void OnContactPositionChanging();

        /// <summary>
        /// On Address1 column data entity changed.
        /// </summary>
		partial void OnAddress1Changed();

        /// <summary>
        /// On Address1 column data entity changing.
        /// </summary>
		partial void OnAddress1Changing();

        /// <summary>
        /// On Address2 column data entity changed.
        /// </summary>
		partial void OnAddress2Changed();

        /// <summary>
        /// On Address2 column data entity changing.
        /// </summary>
		partial void OnAddress2Changing();

        /// <summary>
        /// On Suburb column data entity changed.
        /// </summary>
		partial void OnSuburbChanged();

        /// <summary>
        /// On Suburb column data entity changing.
        /// </summary>
		partial void OnSuburbChanging();

        /// <summary>
        /// On StateID column data entity changed.
        /// </summary>
		partial void OnStateIDChanged();

        /// <summary>
        /// On StateID column data entity changing.
        /// </summary>
		partial void OnStateIDChanging();

        /// <summary>
        /// On PostCode column data entity changed.
        /// </summary>
		partial void OnPostCodeChanged();

        /// <summary>
        /// On PostCode column data entity changing.
        /// </summary>
		partial void OnPostCodeChanging();

        /// <summary>
        /// On PhoneNumber column data entity changed.
        /// </summary>
		partial void OnPhoneNumberChanged();

        /// <summary>
        /// On PhoneNumber column data entity changing.
        /// </summary>
		partial void OnPhoneNumberChanging();

        /// <summary>
        /// On FaxNumber column data entity changed.
        /// </summary>
		partial void OnFaxNumberChanged();

        /// <summary>
        /// On FaxNumber column data entity changing.
        /// </summary>
		partial void OnFaxNumberChanging();

        /// <summary>
        /// On EmailAddress column data entity changed.
        /// </summary>
		partial void OnEmailAddressChanged();

        /// <summary>
        /// On EmailAddress column data entity changing.
        /// </summary>
		partial void OnEmailAddressChanging();

        /// <summary>
        /// On WebSite column data entity changed.
        /// </summary>
		partial void OnWebSiteChanged();

        /// <summary>
        /// On WebSite column data entity changing.
        /// </summary>
		partial void OnWebSiteChanging();

        /// <summary>
        /// On PostalAddress1 column data entity changed.
        /// </summary>
		partial void OnPostalAddress1Changed();

        /// <summary>
        /// On PostalAddress1 column data entity changing.
        /// </summary>
		partial void OnPostalAddress1Changing();

        /// <summary>
        /// On PostalAddress2 column data entity changed.
        /// </summary>
		partial void OnPostalAddress2Changed();

        /// <summary>
        /// On PostalAddress2 column data entity changing.
        /// </summary>
		partial void OnPostalAddress2Changing();

        /// <summary>
        /// On PostalSuburb column data entity changed.
        /// </summary>
		partial void OnPostalSuburbChanged();

        /// <summary>
        /// On PostalSuburb column data entity changing.
        /// </summary>
		partial void OnPostalSuburbChanging();

        /// <summary>
        /// On PostalStateID column data entity changed.
        /// </summary>
		partial void OnPostalStateIDChanged();

        /// <summary>
        /// On PostalStateID column data entity changing.
        /// </summary>
		partial void OnPostalStateIDChanging();

        /// <summary>
        /// On PostalPostCode column data entity changed.
        /// </summary>
		partial void OnPostalPostCodeChanged();

        /// <summary>
        /// On PostalPostCode column data entity changing.
        /// </summary>
		partial void OnPostalPostCodeChanging();

        /// <summary>
        /// On CountryID column data entity changed.
        /// </summary>
		partial void OnCountryIDChanged();

        /// <summary>
        /// On CountryID column data entity changing.
        /// </summary>
		partial void OnCountryIDChanging();

        /// <summary>
        /// On ModifiedDate column data entity changed.
        /// </summary>
		partial void OnModifiedDateChanged();

        /// <summary>
        /// On ModifiedDate column data entity changing.
        /// </summary>
		partial void OnModifiedDateChanging();

        /// <summary>
        /// On RowVersionData column data entity changed.
        /// </summary>
		partial void OnRowVersionDataChanged();

        /// <summary>
        /// On RowVersionData column data entity changing.
        /// </summary>
		partial void OnRowVersionDataChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Company()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the companyid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the companyid property for the object.")]
        [DataMemberAttribute(Name = "CompanyID")]
        [XmlElementAttribute(ElementName = "CompanyID", IsNullable = false)]
        [DataColumnAttribute("CompanyID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long CompanyID
        {
            get
            {
                return this._CompanyID;
            }
            set
            {
                if ((this._CompanyID != value))
                {
                    this.OnCompanyIDChanging();
                    this.SendPropertyChanging("CompanyID");
                    this._CompanyID = value;
                    this.SendPropertyChanged("CompanyID");
                    this.OnCompanyIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companyname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the companyname property for the object.")]
        [DataMemberAttribute(Name = "CompanyName")]
        [XmlElementAttribute(ElementName = "CompanyName", IsNullable = false)]
        [DataColumnAttribute("CompanyName", DbType = "varchar", Length = 500, IsNullable = false)]
        public string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                if ((this._CompanyName != value))
                {
                    this.OnCompanyNameChanging();
                    this.SendPropertyChanging("CompanyName");
                    this._CompanyName = value;
                    this.SendPropertyChanged("CompanyName");
                    this.OnCompanyNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companydescription property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the companydescription property for the object.")]
        [DataMemberAttribute(Name = "CompanyDescription")]
        [XmlElementAttribute(ElementName = "CompanyDescription", IsNullable = true)]
        [DataColumnAttribute("CompanyDescription", DbType = "varchar", Length = -1, IsNullable = true)]
        public string CompanyDescription
        {
            get
            {
                return this._CompanyDescription;
            }
            set
            {
                if ((this._CompanyDescription != value))
                {
                    this.OnCompanyDescriptionChanging();
                    this.SendPropertyChanging("CompanyDescription");
                    this._CompanyDescription = value;
                    this.SendPropertyChanged("CompanyDescription");
                    this.OnCompanyDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the abnreference property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the abnreference property for the object.")]
        [DataMemberAttribute(Name = "ABNReference")]
        [XmlElementAttribute(ElementName = "ABNReference", IsNullable = true)]
        [DataColumnAttribute("ABNReference", DbType = "varchar", Length = 100, IsNullable = true)]
        public string ABNReference
        {
            get
            {
                return this._ABNReference;
            }
            set
            {
                if ((this._ABNReference != value))
                {
                    this.OnABNReferenceChanging();
                    this.SendPropertyChanging("ABNReference");
                    this._ABNReference = value;
                    this.SendPropertyChanged("ABNReference");
                    this.OnABNReferenceChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the contactname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the contactname property for the object.")]
        [DataMemberAttribute(Name = "ContactName")]
        [XmlElementAttribute(ElementName = "ContactName", IsNullable = true)]
        [DataColumnAttribute("ContactName", DbType = "varchar", Length = 200, IsNullable = true)]
        public string ContactName
        {
            get
            {
                return this._ContactName;
            }
            set
            {
                if ((this._ContactName != value))
                {
                    this.OnContactNameChanging();
                    this.SendPropertyChanging("ContactName");
                    this._ContactName = value;
                    this.SendPropertyChanged("ContactName");
                    this.OnContactNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the contactposition property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the contactposition property for the object.")]
        [DataMemberAttribute(Name = "ContactPosition")]
        [XmlElementAttribute(ElementName = "ContactPosition", IsNullable = true)]
        [DataColumnAttribute("ContactPosition", DbType = "varchar", Length = 200, IsNullable = true)]
        public string ContactPosition
        {
            get
            {
                return this._ContactPosition;
            }
            set
            {
                if ((this._ContactPosition != value))
                {
                    this.OnContactPositionChanging();
                    this.SendPropertyChanging("ContactPosition");
                    this._ContactPosition = value;
                    this.SendPropertyChanged("ContactPosition");
                    this.OnContactPositionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the address1 property for the object.")]
        [DataMemberAttribute(Name = "Address1")]
        [XmlElementAttribute(ElementName = "Address1", IsNullable = true)]
        [DataColumnAttribute("Address1", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Address1
        {
            get
            {
                return this._Address1;
            }
            set
            {
                if ((this._Address1 != value))
                {
                    this.OnAddress1Changing();
                    this.SendPropertyChanging("Address1");
                    this._Address1 = value;
                    this.SendPropertyChanged("Address1");
                    this.OnAddress1Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address2 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the address2 property for the object.")]
        [DataMemberAttribute(Name = "Address2")]
        [XmlElementAttribute(ElementName = "Address2", IsNullable = true)]
        [DataColumnAttribute("Address2", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Address2
        {
            get
            {
                return this._Address2;
            }
            set
            {
                if ((this._Address2 != value))
                {
                    this.OnAddress2Changing();
                    this.SendPropertyChanging("Address2");
                    this._Address2 = value;
                    this.SendPropertyChanged("Address2");
                    this.OnAddress2Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suburb property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the suburb property for the object.")]
        [DataMemberAttribute(Name = "Suburb")]
        [XmlElementAttribute(ElementName = "Suburb", IsNullable = true)]
        [DataColumnAttribute("Suburb", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Suburb
        {
            get
            {
                return this._Suburb;
            }
            set
            {
                if ((this._Suburb != value))
                {
                    this.OnSuburbChanging();
                    this.SendPropertyChanging("Suburb");
                    this._Suburb = value;
                    this.SendPropertyChanged("Suburb");
                    this.OnSuburbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the stateid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the stateid property for the object.")]
        [DataMemberAttribute(Name = "StateID")]
        [XmlElementAttribute(ElementName = "StateID", IsNullable = true)]
        [DataColumnAttribute("StateID", DbType = "bigint", Length = 8, IsNullable = true)]
        public System.Nullable<System.Int64> StateID
        {
            get
            {
                return this._StateID;
            }
            set
            {
                if ((this._StateID != value))
                {
                    this.OnStateIDChanging();
                    this.SendPropertyChanging("StateID");
                    this._StateID = value;
                    this.SendPropertyChanged("StateID");
                    this.OnStateIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postcode property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postcode property for the object.")]
        [DataMemberAttribute(Name = "PostCode")]
        [XmlElementAttribute(ElementName = "PostCode", IsNullable = true)]
        [DataColumnAttribute("PostCode", DbType = "varchar", Length = 5, IsNullable = true)]
        public string PostCode
        {
            get
            {
                return this._PostCode;
            }
            set
            {
                if ((this._PostCode != value))
                {
                    this.OnPostCodeChanging();
                    this.SendPropertyChanging("PostCode");
                    this._PostCode = value;
                    this.SendPropertyChanged("PostCode");
                    this.OnPostCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the phonenumber property for the object.")]
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [DataColumnAttribute("PhoneNumber", DbType = "varchar", Length = 50, IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this.OnPhoneNumberChanging();
                    this.SendPropertyChanging("PhoneNumber");
                    this._PhoneNumber = value;
                    this.SendPropertyChanged("PhoneNumber");
                    this.OnPhoneNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the faxnumber property for the object.")]
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [DataColumnAttribute("FaxNumber", DbType = "varchar", Length = 50, IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this.OnFaxNumberChanging();
                    this.SendPropertyChanging("FaxNumber");
                    this._FaxNumber = value;
                    this.SendPropertyChanged("FaxNumber");
                    this.OnFaxNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the emailaddress property for the object.")]
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [DataColumnAttribute("EmailAddress", DbType = "varchar", Length = 500, IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this.OnEmailAddressChanging();
                    this.SendPropertyChanging("EmailAddress");
                    this._EmailAddress = value;
                    this.SendPropertyChanged("EmailAddress");
                    this.OnEmailAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the website property for the object.")]
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [DataColumnAttribute("WebSite", DbType = "varchar", Length = 500, IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this.OnWebSiteChanging();
                    this.SendPropertyChanging("WebSite");
                    this._WebSite = value;
                    this.SendPropertyChanged("WebSite");
                    this.OnWebSiteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postaladdress1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postaladdress1 property for the object.")]
        [DataMemberAttribute(Name = "PostalAddress1")]
        [XmlElementAttribute(ElementName = "PostalAddress1", IsNullable = true)]
        [DataColumnAttribute("PostalAddress1", DbType = "varchar", Length = 500, IsNullable = true)]
        public string PostalAddress1
        {
            get
            {
                return this._PostalAddress1;
            }
            set
            {
                if ((this._PostalAddress1 != value))
                {
                    this.OnPostalAddress1Changing();
                    this.SendPropertyChanging("PostalAddress1");
                    this._PostalAddress1 = value;
                    this.SendPropertyChanged("PostalAddress1");
                    this.OnPostalAddress1Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postaladdress2 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postaladdress2 property for the object.")]
        [DataMemberAttribute(Name = "PostalAddress2")]
        [XmlElementAttribute(ElementName = "PostalAddress2", IsNullable = true)]
        [DataColumnAttribute("PostalAddress2", DbType = "varchar", Length = 500, IsNullable = true)]
        public string PostalAddress2
        {
            get
            {
                return this._PostalAddress2;
            }
            set
            {
                if ((this._PostalAddress2 != value))
                {
                    this.OnPostalAddress2Changing();
                    this.SendPropertyChanging("PostalAddress2");
                    this._PostalAddress2 = value;
                    this.SendPropertyChanged("PostalAddress2");
                    this.OnPostalAddress2Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalsuburb property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postalsuburb property for the object.")]
        [DataMemberAttribute(Name = "PostalSuburb")]
        [XmlElementAttribute(ElementName = "PostalSuburb", IsNullable = true)]
        [DataColumnAttribute("PostalSuburb", DbType = "varchar", Length = 50, IsNullable = true)]
        public string PostalSuburb
        {
            get
            {
                return this._PostalSuburb;
            }
            set
            {
                if ((this._PostalSuburb != value))
                {
                    this.OnPostalSuburbChanging();
                    this.SendPropertyChanging("PostalSuburb");
                    this._PostalSuburb = value;
                    this.SendPropertyChanged("PostalSuburb");
                    this.OnPostalSuburbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalstateid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postalstateid property for the object.")]
        [DataMemberAttribute(Name = "PostalStateID")]
        [XmlElementAttribute(ElementName = "PostalStateID", IsNullable = true)]
        [DataColumnAttribute("PostalStateID", DbType = "bigint", Length = 8, IsNullable = true)]
        public System.Nullable<System.Int64> PostalStateID
        {
            get
            {
                return this._PostalStateID;
            }
            set
            {
                if ((this._PostalStateID != value))
                {
                    this.OnPostalStateIDChanging();
                    this.SendPropertyChanging("PostalStateID");
                    this._PostalStateID = value;
                    this.SendPropertyChanged("PostalStateID");
                    this.OnPostalStateIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalpostcode property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postalpostcode property for the object.")]
        [DataMemberAttribute(Name = "PostalPostCode")]
        [XmlElementAttribute(ElementName = "PostalPostCode", IsNullable = true)]
        [DataColumnAttribute("PostalPostCode", DbType = "varchar", Length = 5, IsNullable = true)]
        public string PostalPostCode
        {
            get
            {
                return this._PostalPostCode;
            }
            set
            {
                if ((this._PostalPostCode != value))
                {
                    this.OnPostalPostCodeChanging();
                    this.SendPropertyChanging("PostalPostCode");
                    this._PostalPostCode = value;
                    this.SendPropertyChanged("PostalPostCode");
                    this.OnPostalPostCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the countryid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the countryid property for the object.")]
        [DataMemberAttribute(Name = "CountryID")]
        [XmlElementAttribute(ElementName = "CountryID", IsNullable = false)]
        [DataColumnAttribute("CountryID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long CountryID
        {
            get
            {
                return this._CountryID;
            }
            set
            {
                if ((this._CountryID != value))
                {
                    this.OnCountryIDChanging();
                    this.SendPropertyChanging("CountryID");
                    this._CountryID = value;
                    this.SendPropertyChanged("CountryID");
                    this.OnCountryIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the modifieddate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the modifieddate property for the object.")]
        [DataMemberAttribute(Name = "ModifiedDate")]
        [XmlElementAttribute(ElementName = "ModifiedDate", IsNullable = true)]
        [DataColumnAttribute("ModifiedDate", DbType = "datetime", Length = 8, IsNullable = true)]
        public System.Nullable<System.DateTime> ModifiedDate
        {
            get
            {
                return this._ModifiedDate;
            }
            set
            {
                if ((this._ModifiedDate != value))
                {
                    this.OnModifiedDateChanging();
                    this.SendPropertyChanging("ModifiedDate");
                    this._ModifiedDate = value;
                    this.SendPropertyChanged("ModifiedDate");
                    this.OnModifiedDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the rowversiondata property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the rowversiondata property for the object.")]
        [DataMemberAttribute(Name = "RowVersionData")]
        [XmlArrayAttribute(ElementName = "RowVersionData", IsNullable = true)]
        [DataColumnAttribute("RowVersionData", IsRowVersion = true, IsAutoGenerated = true, DbType = "timestamp", Length = 8, IsNullable = true)]
        public byte[] RowVersionData
        {
            get
            {
                return this._RowVersionData;
            }
            set
            {
                if ((this._RowVersionData != value))
                {
                    this.OnRowVersionDataChanging();
                    this.SendPropertyChanging("RowVersionData");
                    this._RowVersionData = value;
                    this.SendPropertyChanged("RowVersionData");
                    this.OnRowVersionDataChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the stateid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the stateid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "State1", IsRequired = false)]
        [XmlElementAttribute(ElementName = "State1", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.State", ReferenceColumnName = "StateID", ColumnName = "StateID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.State State1
        {
            get
            {
                return this._State1;
            }
            set
            {
                if ((this._State1 != value))
                {
                    this._State1 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postalstateid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the postalstateid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "State2", IsRequired = false)]
        [XmlElementAttribute(ElementName = "State2", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.State", ReferenceColumnName = "StateID", ColumnName = "PostalStateID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.State State2
        {
            get
            {
                return this._State2;
            }
            set
            {
                if ((this._State2 != value))
                {
                    this._State2 = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the countryid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the countryid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "Country", IsRequired = false)]
        [XmlElementAttribute(ElementName = "Country", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Country", ReferenceColumnName = "CountryID", ColumnName = "CountryID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.Country Country
        {
            get
            {
                return this._Country;
            }
            set
            {
                if ((this._Country != value))
                {
                    this._Country = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the department reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the department reference property for the object.")]
        [DataMemberAttribute(Name = "DepartmentCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "DepartmentCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Department", ColumnName = "CompanyID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.Department[] DepartmentCollection
        {
            get
            {
                return this._DepartmentCollection;
            }
            set
            {
                if ((this._DepartmentCollection != value))
                {
                    this._DepartmentCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new company data entity.
        /// </summary>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="companyName">Initial value of CompanyName.</param>
        /// <param name="countryID">Initial value of CountryID.</param>
        /// <returns>The Data.Company entity.</returns>
        public static Data.Company CreateCompany(long companyID, string companyName, long countryID)
        {
            Data.Company company = new Data.Company();
            company.CompanyID = companyID;
            company.CompanyName = companyName;
            company.CountryID = countryID;
            return company;
        }
    }
    
    /// <summary>
    /// The department data object class.
    /// </summary>
    [DataContractAttribute(Name = "Department", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Department")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Department : DataBase
    {
        
        private long _DepartmentID;
        
        private long _CompanyID;
        
        private string _DepartmentName;
        
        private string _DepartmentDescription;
        
        private string _ContactName;
        
        private string _ContactPosition;
        
        private string _Address1;
        
        private string _Address2;
        
        private string _Suburb;
        
        private System.Nullable<System.Int64> _StateID;
        
        private string _PostCode;
        
        private System.Nullable<System.Int64> _CountryID;
        
        private string _PhoneNumber;
        
        private string _FaxNumber;
        
        private string _EmailAddress;
        
        private string _WebSite;
        
        private System.Nullable<System.DateTime> _ModifiedDate;
        
        private byte[] _RowVersionData;
        
        private Data.Company _Company;
        
        private Data.State _State;
        
        private Data.Country _Country;
        
        private Data.Application[] _ApplicationCollection;
        
        private Data.UserAddress[] _UserAddressCollection;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On DepartmentID column data entity changed.
        /// </summary>
		partial void OnDepartmentIDChanged();

        /// <summary>
        /// On DepartmentID column data entity changing.
        /// </summary>
		partial void OnDepartmentIDChanging();

        /// <summary>
        /// On CompanyID column data entity changed.
        /// </summary>
		partial void OnCompanyIDChanged();

        /// <summary>
        /// On CompanyID column data entity changing.
        /// </summary>
		partial void OnCompanyIDChanging();

        /// <summary>
        /// On DepartmentName column data entity changed.
        /// </summary>
		partial void OnDepartmentNameChanged();

        /// <summary>
        /// On DepartmentName column data entity changing.
        /// </summary>
		partial void OnDepartmentNameChanging();

        /// <summary>
        /// On DepartmentDescription column data entity changed.
        /// </summary>
		partial void OnDepartmentDescriptionChanged();

        /// <summary>
        /// On DepartmentDescription column data entity changing.
        /// </summary>
		partial void OnDepartmentDescriptionChanging();

        /// <summary>
        /// On ContactName column data entity changed.
        /// </summary>
		partial void OnContactNameChanged();

        /// <summary>
        /// On ContactName column data entity changing.
        /// </summary>
		partial void OnContactNameChanging();

        /// <summary>
        /// On ContactPosition column data entity changed.
        /// </summary>
		partial void OnContactPositionChanged();

        /// <summary>
        /// On ContactPosition column data entity changing.
        /// </summary>
		partial void OnContactPositionChanging();

        /// <summary>
        /// On Address1 column data entity changed.
        /// </summary>
		partial void OnAddress1Changed();

        /// <summary>
        /// On Address1 column data entity changing.
        /// </summary>
		partial void OnAddress1Changing();

        /// <summary>
        /// On Address2 column data entity changed.
        /// </summary>
		partial void OnAddress2Changed();

        /// <summary>
        /// On Address2 column data entity changing.
        /// </summary>
		partial void OnAddress2Changing();

        /// <summary>
        /// On Suburb column data entity changed.
        /// </summary>
		partial void OnSuburbChanged();

        /// <summary>
        /// On Suburb column data entity changing.
        /// </summary>
		partial void OnSuburbChanging();

        /// <summary>
        /// On StateID column data entity changed.
        /// </summary>
		partial void OnStateIDChanged();

        /// <summary>
        /// On StateID column data entity changing.
        /// </summary>
		partial void OnStateIDChanging();

        /// <summary>
        /// On PostCode column data entity changed.
        /// </summary>
		partial void OnPostCodeChanged();

        /// <summary>
        /// On PostCode column data entity changing.
        /// </summary>
		partial void OnPostCodeChanging();

        /// <summary>
        /// On CountryID column data entity changed.
        /// </summary>
		partial void OnCountryIDChanged();

        /// <summary>
        /// On CountryID column data entity changing.
        /// </summary>
		partial void OnCountryIDChanging();

        /// <summary>
        /// On PhoneNumber column data entity changed.
        /// </summary>
		partial void OnPhoneNumberChanged();

        /// <summary>
        /// On PhoneNumber column data entity changing.
        /// </summary>
		partial void OnPhoneNumberChanging();

        /// <summary>
        /// On FaxNumber column data entity changed.
        /// </summary>
		partial void OnFaxNumberChanged();

        /// <summary>
        /// On FaxNumber column data entity changing.
        /// </summary>
		partial void OnFaxNumberChanging();

        /// <summary>
        /// On EmailAddress column data entity changed.
        /// </summary>
		partial void OnEmailAddressChanged();

        /// <summary>
        /// On EmailAddress column data entity changing.
        /// </summary>
		partial void OnEmailAddressChanging();

        /// <summary>
        /// On WebSite column data entity changed.
        /// </summary>
		partial void OnWebSiteChanged();

        /// <summary>
        /// On WebSite column data entity changing.
        /// </summary>
		partial void OnWebSiteChanging();

        /// <summary>
        /// On ModifiedDate column data entity changed.
        /// </summary>
		partial void OnModifiedDateChanged();

        /// <summary>
        /// On ModifiedDate column data entity changing.
        /// </summary>
		partial void OnModifiedDateChanging();

        /// <summary>
        /// On RowVersionData column data entity changed.
        /// </summary>
		partial void OnRowVersionDataChanged();

        /// <summary>
        /// On RowVersionData column data entity changing.
        /// </summary>
		partial void OnRowVersionDataChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Department()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the departmentid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the departmentid property for the object.")]
        [DataMemberAttribute(Name = "DepartmentID")]
        [XmlElementAttribute(ElementName = "DepartmentID", IsNullable = false)]
        [DataColumnAttribute("DepartmentID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long DepartmentID
        {
            get
            {
                return this._DepartmentID;
            }
            set
            {
                if ((this._DepartmentID != value))
                {
                    this.OnDepartmentIDChanging();
                    this.SendPropertyChanging("DepartmentID");
                    this._DepartmentID = value;
                    this.SendPropertyChanged("DepartmentID");
                    this.OnDepartmentIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companyid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the companyid property for the object.")]
        [DataMemberAttribute(Name = "CompanyID")]
        [XmlElementAttribute(ElementName = "CompanyID", IsNullable = false)]
        [DataColumnAttribute("CompanyID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long CompanyID
        {
            get
            {
                return this._CompanyID;
            }
            set
            {
                if ((this._CompanyID != value))
                {
                    this.OnCompanyIDChanging();
                    this.SendPropertyChanging("CompanyID");
                    this._CompanyID = value;
                    this.SendPropertyChanged("CompanyID");
                    this.OnCompanyIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the departmentname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the departmentname property for the object.")]
        [DataMemberAttribute(Name = "DepartmentName")]
        [XmlElementAttribute(ElementName = "DepartmentName", IsNullable = false)]
        [DataColumnAttribute("DepartmentName", DbType = "varchar", Length = 500, IsNullable = false)]
        public string DepartmentName
        {
            get
            {
                return this._DepartmentName;
            }
            set
            {
                if ((this._DepartmentName != value))
                {
                    this.OnDepartmentNameChanging();
                    this.SendPropertyChanging("DepartmentName");
                    this._DepartmentName = value;
                    this.SendPropertyChanged("DepartmentName");
                    this.OnDepartmentNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the departmentdescription property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the departmentdescription property for the object.")]
        [DataMemberAttribute(Name = "DepartmentDescription")]
        [XmlElementAttribute(ElementName = "DepartmentDescription", IsNullable = true)]
        [DataColumnAttribute("DepartmentDescription", DbType = "varchar", Length = -1, IsNullable = true)]
        public string DepartmentDescription
        {
            get
            {
                return this._DepartmentDescription;
            }
            set
            {
                if ((this._DepartmentDescription != value))
                {
                    this.OnDepartmentDescriptionChanging();
                    this.SendPropertyChanging("DepartmentDescription");
                    this._DepartmentDescription = value;
                    this.SendPropertyChanged("DepartmentDescription");
                    this.OnDepartmentDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the contactname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the contactname property for the object.")]
        [DataMemberAttribute(Name = "ContactName")]
        [XmlElementAttribute(ElementName = "ContactName", IsNullable = true)]
        [DataColumnAttribute("ContactName", DbType = "varchar", Length = 200, IsNullable = true)]
        public string ContactName
        {
            get
            {
                return this._ContactName;
            }
            set
            {
                if ((this._ContactName != value))
                {
                    this.OnContactNameChanging();
                    this.SendPropertyChanging("ContactName");
                    this._ContactName = value;
                    this.SendPropertyChanged("ContactName");
                    this.OnContactNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the contactposition property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the contactposition property for the object.")]
        [DataMemberAttribute(Name = "ContactPosition")]
        [XmlElementAttribute(ElementName = "ContactPosition", IsNullable = true)]
        [DataColumnAttribute("ContactPosition", DbType = "varchar", Length = 200, IsNullable = true)]
        public string ContactPosition
        {
            get
            {
                return this._ContactPosition;
            }
            set
            {
                if ((this._ContactPosition != value))
                {
                    this.OnContactPositionChanging();
                    this.SendPropertyChanging("ContactPosition");
                    this._ContactPosition = value;
                    this.SendPropertyChanged("ContactPosition");
                    this.OnContactPositionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address1 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the address1 property for the object.")]
        [DataMemberAttribute(Name = "Address1")]
        [XmlElementAttribute(ElementName = "Address1", IsNullable = true)]
        [DataColumnAttribute("Address1", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Address1
        {
            get
            {
                return this._Address1;
            }
            set
            {
                if ((this._Address1 != value))
                {
                    this.OnAddress1Changing();
                    this.SendPropertyChanging("Address1");
                    this._Address1 = value;
                    this.SendPropertyChanged("Address1");
                    this.OnAddress1Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the address2 property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the address2 property for the object.")]
        [DataMemberAttribute(Name = "Address2")]
        [XmlElementAttribute(ElementName = "Address2", IsNullable = true)]
        [DataColumnAttribute("Address2", DbType = "varchar", Length = 500, IsNullable = true)]
        public string Address2
        {
            get
            {
                return this._Address2;
            }
            set
            {
                if ((this._Address2 != value))
                {
                    this.OnAddress2Changing();
                    this.SendPropertyChanging("Address2");
                    this._Address2 = value;
                    this.SendPropertyChanged("Address2");
                    this.OnAddress2Changed();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the suburb property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the suburb property for the object.")]
        [DataMemberAttribute(Name = "Suburb")]
        [XmlElementAttribute(ElementName = "Suburb", IsNullable = true)]
        [DataColumnAttribute("Suburb", DbType = "varchar", Length = 50, IsNullable = true)]
        public string Suburb
        {
            get
            {
                return this._Suburb;
            }
            set
            {
                if ((this._Suburb != value))
                {
                    this.OnSuburbChanging();
                    this.SendPropertyChanging("Suburb");
                    this._Suburb = value;
                    this.SendPropertyChanged("Suburb");
                    this.OnSuburbChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the stateid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the stateid property for the object.")]
        [DataMemberAttribute(Name = "StateID")]
        [XmlElementAttribute(ElementName = "StateID", IsNullable = true)]
        [DataColumnAttribute("StateID", DbType = "bigint", Length = 8, IsNullable = true)]
        public System.Nullable<System.Int64> StateID
        {
            get
            {
                return this._StateID;
            }
            set
            {
                if ((this._StateID != value))
                {
                    this.OnStateIDChanging();
                    this.SendPropertyChanging("StateID");
                    this._StateID = value;
                    this.SendPropertyChanged("StateID");
                    this.OnStateIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the postcode property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the postcode property for the object.")]
        [DataMemberAttribute(Name = "PostCode")]
        [XmlElementAttribute(ElementName = "PostCode", IsNullable = true)]
        [DataColumnAttribute("PostCode", DbType = "varchar", Length = 5, IsNullable = true)]
        public string PostCode
        {
            get
            {
                return this._PostCode;
            }
            set
            {
                if ((this._PostCode != value))
                {
                    this.OnPostCodeChanging();
                    this.SendPropertyChanging("PostCode");
                    this._PostCode = value;
                    this.SendPropertyChanged("PostCode");
                    this.OnPostCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the countryid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the countryid property for the object.")]
        [DataMemberAttribute(Name = "CountryID")]
        [XmlElementAttribute(ElementName = "CountryID", IsNullable = true)]
        [DataColumnAttribute("CountryID", DbType = "bigint", Length = 8, IsNullable = true)]
        public System.Nullable<System.Int64> CountryID
        {
            get
            {
                return this._CountryID;
            }
            set
            {
                if ((this._CountryID != value))
                {
                    this.OnCountryIDChanging();
                    this.SendPropertyChanging("CountryID");
                    this._CountryID = value;
                    this.SendPropertyChanged("CountryID");
                    this.OnCountryIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the phonenumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the phonenumber property for the object.")]
        [DataMemberAttribute(Name = "PhoneNumber")]
        [XmlElementAttribute(ElementName = "PhoneNumber", IsNullable = true)]
        [DataColumnAttribute("PhoneNumber", DbType = "varchar", Length = 50, IsNullable = true)]
        public string PhoneNumber
        {
            get
            {
                return this._PhoneNumber;
            }
            set
            {
                if ((this._PhoneNumber != value))
                {
                    this.OnPhoneNumberChanging();
                    this.SendPropertyChanging("PhoneNumber");
                    this._PhoneNumber = value;
                    this.SendPropertyChanged("PhoneNumber");
                    this.OnPhoneNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the faxnumber property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the faxnumber property for the object.")]
        [DataMemberAttribute(Name = "FaxNumber")]
        [XmlElementAttribute(ElementName = "FaxNumber", IsNullable = true)]
        [DataColumnAttribute("FaxNumber", DbType = "varchar", Length = 50, IsNullable = true)]
        public string FaxNumber
        {
            get
            {
                return this._FaxNumber;
            }
            set
            {
                if ((this._FaxNumber != value))
                {
                    this.OnFaxNumberChanging();
                    this.SendPropertyChanging("FaxNumber");
                    this._FaxNumber = value;
                    this.SendPropertyChanged("FaxNumber");
                    this.OnFaxNumberChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the emailaddress property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the emailaddress property for the object.")]
        [DataMemberAttribute(Name = "EmailAddress")]
        [XmlElementAttribute(ElementName = "EmailAddress", IsNullable = true)]
        [DataColumnAttribute("EmailAddress", DbType = "varchar", Length = 500, IsNullable = true)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this.OnEmailAddressChanging();
                    this.SendPropertyChanging("EmailAddress");
                    this._EmailAddress = value;
                    this.SendPropertyChanged("EmailAddress");
                    this.OnEmailAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the website property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the website property for the object.")]
        [DataMemberAttribute(Name = "WebSite")]
        [XmlElementAttribute(ElementName = "WebSite", IsNullable = true)]
        [DataColumnAttribute("WebSite", DbType = "varchar", Length = 500, IsNullable = true)]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this.OnWebSiteChanging();
                    this.SendPropertyChanging("WebSite");
                    this._WebSite = value;
                    this.SendPropertyChanged("WebSite");
                    this.OnWebSiteChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the modifieddate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the modifieddate property for the object.")]
        [DataMemberAttribute(Name = "ModifiedDate")]
        [XmlElementAttribute(ElementName = "ModifiedDate", IsNullable = true)]
        [DataColumnAttribute("ModifiedDate", DbType = "datetime", Length = 8, IsNullable = true)]
        public System.Nullable<System.DateTime> ModifiedDate
        {
            get
            {
                return this._ModifiedDate;
            }
            set
            {
                if ((this._ModifiedDate != value))
                {
                    this.OnModifiedDateChanging();
                    this.SendPropertyChanging("ModifiedDate");
                    this._ModifiedDate = value;
                    this.SendPropertyChanged("ModifiedDate");
                    this.OnModifiedDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the rowversiondata property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the rowversiondata property for the object.")]
        [DataMemberAttribute(Name = "RowVersionData")]
        [XmlArrayAttribute(ElementName = "RowVersionData", IsNullable = true)]
        [DataColumnAttribute("RowVersionData", IsRowVersion = true, IsAutoGenerated = true, DbType = "timestamp", Length = 8, IsNullable = true)]
        public byte[] RowVersionData
        {
            get
            {
                return this._RowVersionData;
            }
            set
            {
                if ((this._RowVersionData != value))
                {
                    this.OnRowVersionDataChanging();
                    this.SendPropertyChanging("RowVersionData");
                    this._RowVersionData = value;
                    this.SendPropertyChanged("RowVersionData");
                    this.OnRowVersionDataChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the companyid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the companyid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "Company", IsRequired = false)]
        [XmlElementAttribute(ElementName = "Company", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Company", ReferenceColumnName = "CompanyID", ColumnName = "CompanyID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.Company Company
        {
            get
            {
                return this._Company;
            }
            set
            {
                if ((this._Company != value))
                {
                    this._Company = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the stateid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the stateid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "State", IsRequired = false)]
        [XmlElementAttribute(ElementName = "State", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.State", ReferenceColumnName = "StateID", ColumnName = "StateID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.State State
        {
            get
            {
                return this._State;
            }
            set
            {
                if ((this._State != value))
                {
                    this._State = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the countryid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the countryid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "Country", IsRequired = false)]
        [XmlElementAttribute(ElementName = "Country", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Country", ReferenceColumnName = "CountryID", ColumnName = "CountryID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.Country Country
        {
            get
            {
                return this._Country;
            }
            set
            {
                if ((this._Country != value))
                {
                    this._Country = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the application reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the application reference property for the object.")]
        [DataMemberAttribute(Name = "ApplicationCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "ApplicationCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Application", ColumnName = "DepartmentID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.Application[] ApplicationCollection
        {
            get
            {
                return this._ApplicationCollection;
            }
            set
            {
                if ((this._ApplicationCollection != value))
                {
                    this._ApplicationCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the useraddress reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the useraddress reference property for the object.")]
        [DataMemberAttribute(Name = "UserAddressCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "UserAddressCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.UserAddress", ColumnName = "DepartmentID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.UserAddress[] UserAddressCollection
        {
            get
            {
                return this._UserAddressCollection;
            }
            set
            {
                if ((this._UserAddressCollection != value))
                {
                    this._UserAddressCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new department data entity.
        /// </summary>
        /// <param name="departmentID">Initial value of DepartmentID.</param>
        /// <param name="companyID">Initial value of CompanyID.</param>
        /// <param name="departmentName">Initial value of DepartmentName.</param>
        /// <returns>The Data.Department entity.</returns>
        public static Data.Department CreateDepartment(long departmentID, long companyID, string departmentName)
        {
            Data.Department department = new Data.Department();
            department.DepartmentID = departmentID;
            department.CompanyID = companyID;
            department.DepartmentName = departmentName;
            return department;
        }
    }
    
    /// <summary>
    /// The continent data object class.
    /// </summary>
    [DataContractAttribute(Name = "Continent", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Continent")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Continent : DataBase
    {
        
        private long _ContinentID;
        
        private string _ContinentName;
        
        private string _ContinentDescription;
        
        private long _ContinentCodeID;
        
        private long _ContinentGroupOrder;
        
        private bool _ContinentVisible;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On ContinentID column data entity changed.
        /// </summary>
		partial void OnContinentIDChanged();

        /// <summary>
        /// On ContinentID column data entity changing.
        /// </summary>
		partial void OnContinentIDChanging();

        /// <summary>
        /// On ContinentName column data entity changed.
        /// </summary>
		partial void OnContinentNameChanged();

        /// <summary>
        /// On ContinentName column data entity changing.
        /// </summary>
		partial void OnContinentNameChanging();

        /// <summary>
        /// On ContinentDescription column data entity changed.
        /// </summary>
		partial void OnContinentDescriptionChanged();

        /// <summary>
        /// On ContinentDescription column data entity changing.
        /// </summary>
		partial void OnContinentDescriptionChanging();

        /// <summary>
        /// On ContinentCodeID column data entity changed.
        /// </summary>
		partial void OnContinentCodeIDChanged();

        /// <summary>
        /// On ContinentCodeID column data entity changing.
        /// </summary>
		partial void OnContinentCodeIDChanging();

        /// <summary>
        /// On ContinentGroupOrder column data entity changed.
        /// </summary>
		partial void OnContinentGroupOrderChanged();

        /// <summary>
        /// On ContinentGroupOrder column data entity changing.
        /// </summary>
		partial void OnContinentGroupOrderChanging();

        /// <summary>
        /// On ContinentVisible column data entity changed.
        /// </summary>
		partial void OnContinentVisibleChanged();

        /// <summary>
        /// On ContinentVisible column data entity changing.
        /// </summary>
		partial void OnContinentVisibleChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Continent()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the continentid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the continentid property for the object.")]
        [DataMemberAttribute(Name = "ContinentID")]
        [XmlElementAttribute(ElementName = "ContinentID", IsNullable = false)]
        [DataColumnAttribute("ContinentID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long ContinentID
        {
            get
            {
                return this._ContinentID;
            }
            set
            {
                if ((this._ContinentID != value))
                {
                    this.OnContinentIDChanging();
                    this.SendPropertyChanging("ContinentID");
                    this._ContinentID = value;
                    this.SendPropertyChanged("ContinentID");
                    this.OnContinentIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the continentname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the continentname property for the object.")]
        [DataMemberAttribute(Name = "ContinentName")]
        [XmlElementAttribute(ElementName = "ContinentName", IsNullable = false)]
        [DataColumnAttribute("ContinentName", DbType = "varchar", Length = 500, IsNullable = false)]
        public string ContinentName
        {
            get
            {
                return this._ContinentName;
            }
            set
            {
                if ((this._ContinentName != value))
                {
                    this.OnContinentNameChanging();
                    this.SendPropertyChanging("ContinentName");
                    this._ContinentName = value;
                    this.SendPropertyChanged("ContinentName");
                    this.OnContinentNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the continentdescription property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the continentdescription property for the object.")]
        [DataMemberAttribute(Name = "ContinentDescription")]
        [XmlElementAttribute(ElementName = "ContinentDescription", IsNullable = true)]
        [DataColumnAttribute("ContinentDescription", DbType = "varchar", Length = -1, IsNullable = true)]
        public string ContinentDescription
        {
            get
            {
                return this._ContinentDescription;
            }
            set
            {
                if ((this._ContinentDescription != value))
                {
                    this.OnContinentDescriptionChanging();
                    this.SendPropertyChanging("ContinentDescription");
                    this._ContinentDescription = value;
                    this.SendPropertyChanged("ContinentDescription");
                    this.OnContinentDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the continentcodeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the continentcodeid property for the object.")]
        [DataMemberAttribute(Name = "ContinentCodeID")]
        [XmlElementAttribute(ElementName = "ContinentCodeID", IsNullable = false)]
        [DataColumnAttribute("ContinentCodeID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long ContinentCodeID
        {
            get
            {
                return this._ContinentCodeID;
            }
            set
            {
                if ((this._ContinentCodeID != value))
                {
                    this.OnContinentCodeIDChanging();
                    this.SendPropertyChanging("ContinentCodeID");
                    this._ContinentCodeID = value;
                    this.SendPropertyChanged("ContinentCodeID");
                    this.OnContinentCodeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the continentgrouporder property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the continentgrouporder property for the object.")]
        [DataMemberAttribute(Name = "ContinentGroupOrder")]
        [XmlElementAttribute(ElementName = "ContinentGroupOrder", IsNullable = false)]
        [DataColumnAttribute("ContinentGroupOrder", DbType = "bigint", Length = 8, IsNullable = false)]
        public long ContinentGroupOrder
        {
            get
            {
                return this._ContinentGroupOrder;
            }
            set
            {
                if ((this._ContinentGroupOrder != value))
                {
                    this.OnContinentGroupOrderChanging();
                    this.SendPropertyChanging("ContinentGroupOrder");
                    this._ContinentGroupOrder = value;
                    this.SendPropertyChanged("ContinentGroupOrder");
                    this.OnContinentGroupOrderChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the continentvisible property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the continentvisible property for the object.")]
        [DataMemberAttribute(Name = "ContinentVisible")]
        [XmlElementAttribute(ElementName = "ContinentVisible", IsNullable = false)]
        [DataColumnAttribute("ContinentVisible", DbType = "bit", Length = 1, IsNullable = false)]
        public bool ContinentVisible
        {
            get
            {
                return this._ContinentVisible;
            }
            set
            {
                if ((this._ContinentVisible != value))
                {
                    this.OnContinentVisibleChanging();
                    this.SendPropertyChanging("ContinentVisible");
                    this._ContinentVisible = value;
                    this.SendPropertyChanged("ContinentVisible");
                    this.OnContinentVisibleChanged();
                }
            }
        }
        
        /// <summary>
        /// Create a new continent data entity.
        /// </summary>
        /// <param name="continentID">Initial value of ContinentID.</param>
        /// <param name="continentName">Initial value of ContinentName.</param>
        /// <param name="continentCodeID">Initial value of ContinentCodeID.</param>
        /// <param name="continentGroupOrder">Initial value of ContinentGroupOrder.</param>
        /// <param name="continentVisible">Initial value of ContinentVisible.</param>
        /// <returns>The Data.Continent entity.</returns>
        public static Data.Continent CreateContinent(long continentID, string continentName, long continentCodeID, long continentGroupOrder, bool continentVisible)
        {
            Data.Continent continent = new Data.Continent();
            continent.ContinentID = continentID;
            continent.ContinentName = continentName;
            continent.ContinentCodeID = continentCodeID;
            continent.ContinentGroupOrder = continentGroupOrder;
            continent.ContinentVisible = continentVisible;
            return continent;
        }
    }
    
    /// <summary>
    /// The accesstype data object class.
    /// </summary>
    [DataContractAttribute(Name = "AccessType", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.AccessType")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class AccessType : DataBase
    {
        
        private long _AccessTypeID;
        
        private string _AccessName;
        
        private string _AccessDescription;
        
        private long _AccessCodeID;
        
        private long _AccessGroupOrder;
        
        private bool _AccessVisible;
        
        private Data.ScreenAccess[] _ScreenAccessCollection;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On AccessTypeID column data entity changed.
        /// </summary>
		partial void OnAccessTypeIDChanged();

        /// <summary>
        /// On AccessTypeID column data entity changing.
        /// </summary>
		partial void OnAccessTypeIDChanging();

        /// <summary>
        /// On AccessName column data entity changed.
        /// </summary>
		partial void OnAccessNameChanged();

        /// <summary>
        /// On AccessName column data entity changing.
        /// </summary>
		partial void OnAccessNameChanging();

        /// <summary>
        /// On AccessDescription column data entity changed.
        /// </summary>
		partial void OnAccessDescriptionChanged();

        /// <summary>
        /// On AccessDescription column data entity changing.
        /// </summary>
		partial void OnAccessDescriptionChanging();

        /// <summary>
        /// On AccessCodeID column data entity changed.
        /// </summary>
		partial void OnAccessCodeIDChanged();

        /// <summary>
        /// On AccessCodeID column data entity changing.
        /// </summary>
		partial void OnAccessCodeIDChanging();

        /// <summary>
        /// On AccessGroupOrder column data entity changed.
        /// </summary>
		partial void OnAccessGroupOrderChanged();

        /// <summary>
        /// On AccessGroupOrder column data entity changing.
        /// </summary>
		partial void OnAccessGroupOrderChanging();

        /// <summary>
        /// On AccessVisible column data entity changed.
        /// </summary>
		partial void OnAccessVisibleChanged();

        /// <summary>
        /// On AccessVisible column data entity changing.
        /// </summary>
		partial void OnAccessVisibleChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public AccessType()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the accesstypeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accesstypeid property for the object.")]
        [DataMemberAttribute(Name = "AccessTypeID")]
        [XmlElementAttribute(ElementName = "AccessTypeID", IsNullable = false)]
        [DataColumnAttribute("AccessTypeID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long AccessTypeID
        {
            get
            {
                return this._AccessTypeID;
            }
            set
            {
                if ((this._AccessTypeID != value))
                {
                    this.OnAccessTypeIDChanging();
                    this.SendPropertyChanging("AccessTypeID");
                    this._AccessTypeID = value;
                    this.SendPropertyChanged("AccessTypeID");
                    this.OnAccessTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accessname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accessname property for the object.")]
        [DataMemberAttribute(Name = "AccessName")]
        [XmlElementAttribute(ElementName = "AccessName", IsNullable = false)]
        [DataColumnAttribute("AccessName", DbType = "varchar", Length = 50, IsNullable = false)]
        public string AccessName
        {
            get
            {
                return this._AccessName;
            }
            set
            {
                if ((this._AccessName != value))
                {
                    this.OnAccessNameChanging();
                    this.SendPropertyChanging("AccessName");
                    this._AccessName = value;
                    this.SendPropertyChanged("AccessName");
                    this.OnAccessNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accessdescription property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accessdescription property for the object.")]
        [DataMemberAttribute(Name = "AccessDescription")]
        [XmlElementAttribute(ElementName = "AccessDescription", IsNullable = false)]
        [DataColumnAttribute("AccessDescription", DbType = "varchar", Length = 500, IsNullable = false)]
        public string AccessDescription
        {
            get
            {
                return this._AccessDescription;
            }
            set
            {
                if ((this._AccessDescription != value))
                {
                    this.OnAccessDescriptionChanging();
                    this.SendPropertyChanging("AccessDescription");
                    this._AccessDescription = value;
                    this.SendPropertyChanged("AccessDescription");
                    this.OnAccessDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accesscodeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accesscodeid property for the object.")]
        [DataMemberAttribute(Name = "AccessCodeID")]
        [XmlElementAttribute(ElementName = "AccessCodeID", IsNullable = false)]
        [DataColumnAttribute("AccessCodeID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long AccessCodeID
        {
            get
            {
                return this._AccessCodeID;
            }
            set
            {
                if ((this._AccessCodeID != value))
                {
                    this.OnAccessCodeIDChanging();
                    this.SendPropertyChanging("AccessCodeID");
                    this._AccessCodeID = value;
                    this.SendPropertyChanged("AccessCodeID");
                    this.OnAccessCodeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accessgrouporder property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accessgrouporder property for the object.")]
        [DataMemberAttribute(Name = "AccessGroupOrder")]
        [XmlElementAttribute(ElementName = "AccessGroupOrder", IsNullable = false)]
        [DataColumnAttribute("AccessGroupOrder", DbType = "bigint", Length = 8, IsNullable = false)]
        public long AccessGroupOrder
        {
            get
            {
                return this._AccessGroupOrder;
            }
            set
            {
                if ((this._AccessGroupOrder != value))
                {
                    this.OnAccessGroupOrderChanging();
                    this.SendPropertyChanging("AccessGroupOrder");
                    this._AccessGroupOrder = value;
                    this.SendPropertyChanged("AccessGroupOrder");
                    this.OnAccessGroupOrderChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the accessvisible property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the accessvisible property for the object.")]
        [DataMemberAttribute(Name = "AccessVisible")]
        [XmlElementAttribute(ElementName = "AccessVisible", IsNullable = false)]
        [DataColumnAttribute("AccessVisible", DbType = "bit", Length = 1, IsNullable = false)]
        public bool AccessVisible
        {
            get
            {
                return this._AccessVisible;
            }
            set
            {
                if ((this._AccessVisible != value))
                {
                    this.OnAccessVisibleChanging();
                    this.SendPropertyChanging("AccessVisible");
                    this._AccessVisible = value;
                    this.SendPropertyChanged("AccessVisible");
                    this.OnAccessVisibleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the screenaccess reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the screenaccess reference property for the object.")]
        [DataMemberAttribute(Name = "ScreenAccessCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "ScreenAccessCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.ScreenAccess", ColumnName = "AccessTypeID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.ScreenAccess[] ScreenAccessCollection
        {
            get
            {
                return this._ScreenAccessCollection;
            }
            set
            {
                if ((this._ScreenAccessCollection != value))
                {
                    this._ScreenAccessCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new accesstype data entity.
        /// </summary>
        /// <param name="accessTypeID">Initial value of AccessTypeID.</param>
        /// <param name="accessName">Initial value of AccessName.</param>
        /// <param name="accessDescription">Initial value of AccessDescription.</param>
        /// <param name="accessCodeID">Initial value of AccessCodeID.</param>
        /// <param name="accessGroupOrder">Initial value of AccessGroupOrder.</param>
        /// <param name="accessVisible">Initial value of AccessVisible.</param>
        /// <returns>The Data.AccessType entity.</returns>
        public static Data.AccessType CreateAccessType(long accessTypeID, string accessName, string accessDescription, long accessCodeID, long accessGroupOrder, bool accessVisible)
        {
            Data.AccessType accessType = new Data.AccessType();
            accessType.AccessTypeID = accessTypeID;
            accessType.AccessName = accessName;
            accessType.AccessDescription = accessDescription;
            accessType.AccessCodeID = accessCodeID;
            accessType.AccessGroupOrder = accessGroupOrder;
            accessType.AccessVisible = accessVisible;
            return accessType;
        }
    }
    
    /// <summary>
    /// The roletype data object class.
    /// </summary>
    [DataContractAttribute(Name = "RoleType", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.RoleType")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class RoleType : DataBase
    {
        
        private long _RoleTypeID;
        
        private string _RoleTypeName;
        
        private string _RoleTypeDescription;
        
        private long _RoleTypeCodeID;
        
        private long _RoleTypeGroupOrder;
        
        private bool _RoleTypeVisible;
        
        private System.Nullable<System.DateTime> _ModifiedDate;
        
        private byte[] _RowVersionData;
        
        private Data.ApplicationUser[] _ApplicationUserCollection;
        
        private Data.ScreenAccess[] _ScreenAccessCollection;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On RoleTypeID column data entity changed.
        /// </summary>
		partial void OnRoleTypeIDChanged();

        /// <summary>
        /// On RoleTypeID column data entity changing.
        /// </summary>
		partial void OnRoleTypeIDChanging();

        /// <summary>
        /// On RoleTypeName column data entity changed.
        /// </summary>
		partial void OnRoleTypeNameChanged();

        /// <summary>
        /// On RoleTypeName column data entity changing.
        /// </summary>
		partial void OnRoleTypeNameChanging();

        /// <summary>
        /// On RoleTypeDescription column data entity changed.
        /// </summary>
		partial void OnRoleTypeDescriptionChanged();

        /// <summary>
        /// On RoleTypeDescription column data entity changing.
        /// </summary>
		partial void OnRoleTypeDescriptionChanging();

        /// <summary>
        /// On RoleTypeCodeID column data entity changed.
        /// </summary>
		partial void OnRoleTypeCodeIDChanged();

        /// <summary>
        /// On RoleTypeCodeID column data entity changing.
        /// </summary>
		partial void OnRoleTypeCodeIDChanging();

        /// <summary>
        /// On RoleTypeGroupOrder column data entity changed.
        /// </summary>
		partial void OnRoleTypeGroupOrderChanged();

        /// <summary>
        /// On RoleTypeGroupOrder column data entity changing.
        /// </summary>
		partial void OnRoleTypeGroupOrderChanging();

        /// <summary>
        /// On RoleTypeVisible column data entity changed.
        /// </summary>
		partial void OnRoleTypeVisibleChanged();

        /// <summary>
        /// On RoleTypeVisible column data entity changing.
        /// </summary>
		partial void OnRoleTypeVisibleChanging();

        /// <summary>
        /// On ModifiedDate column data entity changed.
        /// </summary>
		partial void OnModifiedDateChanged();

        /// <summary>
        /// On ModifiedDate column data entity changing.
        /// </summary>
		partial void OnModifiedDateChanging();

        /// <summary>
        /// On RowVersionData column data entity changed.
        /// </summary>
		partial void OnRowVersionDataChanged();

        /// <summary>
        /// On RowVersionData column data entity changing.
        /// </summary>
		partial void OnRowVersionDataChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public RoleType()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the roletypeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the roletypeid property for the object.")]
        [DataMemberAttribute(Name = "RoleTypeID")]
        [XmlElementAttribute(ElementName = "RoleTypeID", IsNullable = false)]
        [DataColumnAttribute("RoleTypeID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long RoleTypeID
        {
            get
            {
                return this._RoleTypeID;
            }
            set
            {
                if ((this._RoleTypeID != value))
                {
                    this.OnRoleTypeIDChanging();
                    this.SendPropertyChanging("RoleTypeID");
                    this._RoleTypeID = value;
                    this.SendPropertyChanged("RoleTypeID");
                    this.OnRoleTypeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the roletypename property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the roletypename property for the object.")]
        [DataMemberAttribute(Name = "RoleTypeName")]
        [XmlElementAttribute(ElementName = "RoleTypeName", IsNullable = false)]
        [DataColumnAttribute("RoleTypeName", DbType = "varchar", Length = 100, IsNullable = false)]
        public string RoleTypeName
        {
            get
            {
                return this._RoleTypeName;
            }
            set
            {
                if ((this._RoleTypeName != value))
                {
                    this.OnRoleTypeNameChanging();
                    this.SendPropertyChanging("RoleTypeName");
                    this._RoleTypeName = value;
                    this.SendPropertyChanged("RoleTypeName");
                    this.OnRoleTypeNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the roletypedescription property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the roletypedescription property for the object.")]
        [DataMemberAttribute(Name = "RoleTypeDescription")]
        [XmlElementAttribute(ElementName = "RoleTypeDescription", IsNullable = false)]
        [DataColumnAttribute("RoleTypeDescription", DbType = "varchar", Length = 500, IsNullable = false)]
        public string RoleTypeDescription
        {
            get
            {
                return this._RoleTypeDescription;
            }
            set
            {
                if ((this._RoleTypeDescription != value))
                {
                    this.OnRoleTypeDescriptionChanging();
                    this.SendPropertyChanging("RoleTypeDescription");
                    this._RoleTypeDescription = value;
                    this.SendPropertyChanged("RoleTypeDescription");
                    this.OnRoleTypeDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the roletypecodeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the roletypecodeid property for the object.")]
        [DataMemberAttribute(Name = "RoleTypeCodeID")]
        [XmlElementAttribute(ElementName = "RoleTypeCodeID", IsNullable = false)]
        [DataColumnAttribute("RoleTypeCodeID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long RoleTypeCodeID
        {
            get
            {
                return this._RoleTypeCodeID;
            }
            set
            {
                if ((this._RoleTypeCodeID != value))
                {
                    this.OnRoleTypeCodeIDChanging();
                    this.SendPropertyChanging("RoleTypeCodeID");
                    this._RoleTypeCodeID = value;
                    this.SendPropertyChanged("RoleTypeCodeID");
                    this.OnRoleTypeCodeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the roletypegrouporder property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the roletypegrouporder property for the object.")]
        [DataMemberAttribute(Name = "RoleTypeGroupOrder")]
        [XmlElementAttribute(ElementName = "RoleTypeGroupOrder", IsNullable = false)]
        [DataColumnAttribute("RoleTypeGroupOrder", DbType = "bigint", Length = 8, IsNullable = false)]
        public long RoleTypeGroupOrder
        {
            get
            {
                return this._RoleTypeGroupOrder;
            }
            set
            {
                if ((this._RoleTypeGroupOrder != value))
                {
                    this.OnRoleTypeGroupOrderChanging();
                    this.SendPropertyChanging("RoleTypeGroupOrder");
                    this._RoleTypeGroupOrder = value;
                    this.SendPropertyChanged("RoleTypeGroupOrder");
                    this.OnRoleTypeGroupOrderChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the roletypevisible property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the roletypevisible property for the object.")]
        [DataMemberAttribute(Name = "RoleTypeVisible")]
        [XmlElementAttribute(ElementName = "RoleTypeVisible", IsNullable = false)]
        [DataColumnAttribute("RoleTypeVisible", DbType = "bit", Length = 1, IsNullable = false)]
        public bool RoleTypeVisible
        {
            get
            {
                return this._RoleTypeVisible;
            }
            set
            {
                if ((this._RoleTypeVisible != value))
                {
                    this.OnRoleTypeVisibleChanging();
                    this.SendPropertyChanging("RoleTypeVisible");
                    this._RoleTypeVisible = value;
                    this.SendPropertyChanged("RoleTypeVisible");
                    this.OnRoleTypeVisibleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the modifieddate property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the modifieddate property for the object.")]
        [DataMemberAttribute(Name = "ModifiedDate")]
        [XmlElementAttribute(ElementName = "ModifiedDate", IsNullable = true)]
        [DataColumnAttribute("ModifiedDate", DbType = "datetime", Length = 8, IsNullable = true)]
        public System.Nullable<System.DateTime> ModifiedDate
        {
            get
            {
                return this._ModifiedDate;
            }
            set
            {
                if ((this._ModifiedDate != value))
                {
                    this.OnModifiedDateChanging();
                    this.SendPropertyChanging("ModifiedDate");
                    this._ModifiedDate = value;
                    this.SendPropertyChanged("ModifiedDate");
                    this.OnModifiedDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the rowversiondata property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the rowversiondata property for the object.")]
        [DataMemberAttribute(Name = "RowVersionData")]
        [XmlArrayAttribute(ElementName = "RowVersionData", IsNullable = true)]
        [DataColumnAttribute("RowVersionData", IsRowVersion = true, IsAutoGenerated = true, DbType = "timestamp", Length = 8, IsNullable = true)]
        public byte[] RowVersionData
        {
            get
            {
                return this._RowVersionData;
            }
            set
            {
                if ((this._RowVersionData != value))
                {
                    this.OnRowVersionDataChanging();
                    this.SendPropertyChanging("RowVersionData");
                    this._RowVersionData = value;
                    this.SendPropertyChanged("RowVersionData");
                    this.OnRowVersionDataChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationuser reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the applicationuser reference property for the object.")]
        [DataMemberAttribute(Name = "ApplicationUserCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "ApplicationUserCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.ApplicationUser", ColumnName = "RoleTypeID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.ApplicationUser[] ApplicationUserCollection
        {
            get
            {
                return this._ApplicationUserCollection;
            }
            set
            {
                if ((this._ApplicationUserCollection != value))
                {
                    this._ApplicationUserCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the screenaccess reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the screenaccess reference property for the object.")]
        [DataMemberAttribute(Name = "ScreenAccessCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "ScreenAccessCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.ScreenAccess", ColumnName = "RoleTypeID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.ScreenAccess[] ScreenAccessCollection
        {
            get
            {
                return this._ScreenAccessCollection;
            }
            set
            {
                if ((this._ScreenAccessCollection != value))
                {
                    this._ScreenAccessCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new roletype data entity.
        /// </summary>
        /// <param name="roleTypeID">Initial value of RoleTypeID.</param>
        /// <param name="roleTypeName">Initial value of RoleTypeName.</param>
        /// <param name="roleTypeDescription">Initial value of RoleTypeDescription.</param>
        /// <param name="roleTypeCodeID">Initial value of RoleTypeCodeID.</param>
        /// <param name="roleTypeGroupOrder">Initial value of RoleTypeGroupOrder.</param>
        /// <param name="roleTypeVisible">Initial value of RoleTypeVisible.</param>
        /// <returns>The Data.RoleType entity.</returns>
        public static Data.RoleType CreateRoleType(long roleTypeID, string roleTypeName, string roleTypeDescription, long roleTypeCodeID, long roleTypeGroupOrder, bool roleTypeVisible)
        {
            Data.RoleType roleType = new Data.RoleType();
            roleType.RoleTypeID = roleTypeID;
            roleType.RoleTypeName = roleTypeName;
            roleType.RoleTypeDescription = roleTypeDescription;
            roleType.RoleTypeCodeID = roleTypeCodeID;
            roleType.RoleTypeGroupOrder = roleTypeGroupOrder;
            roleType.RoleTypeVisible = roleTypeVisible;
            return roleType;
        }
    }
    
    /// <summary>
    /// The screen data object class.
    /// </summary>
    [DataContractAttribute(Name = "Screen", IsReference = true)]
    [SerializableAttribute()]
    [DataTableAttribute("dbo.Screen")]
    [DatabaseAttribute("ApplicationLogin")]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class Screen : DataBase
    {
        
        private long _ScreenID;
        
        private long _ApplicationID;
        
        private string _ScreenName;
        
        private string _ScreenDescription;
        
        private long _ScreenCodeID;
        
        private long _ScreenGroupOrder;
        
        private bool _ScreenVisible;
        
        private Data.Application _Application;
        
        private Data.ChangeLog[] _ChangeLogCollection;
        
        private Data.ScreenAccess[] _ScreenAccessCollection;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

        /// <summary>
        /// On ScreenID column data entity changed.
        /// </summary>
		partial void OnScreenIDChanged();

        /// <summary>
        /// On ScreenID column data entity changing.
        /// </summary>
		partial void OnScreenIDChanging();

        /// <summary>
        /// On ApplicationID column data entity changed.
        /// </summary>
		partial void OnApplicationIDChanged();

        /// <summary>
        /// On ApplicationID column data entity changing.
        /// </summary>
		partial void OnApplicationIDChanging();

        /// <summary>
        /// On ScreenName column data entity changed.
        /// </summary>
		partial void OnScreenNameChanged();

        /// <summary>
        /// On ScreenName column data entity changing.
        /// </summary>
		partial void OnScreenNameChanging();

        /// <summary>
        /// On ScreenDescription column data entity changed.
        /// </summary>
		partial void OnScreenDescriptionChanged();

        /// <summary>
        /// On ScreenDescription column data entity changing.
        /// </summary>
		partial void OnScreenDescriptionChanging();

        /// <summary>
        /// On ScreenCodeID column data entity changed.
        /// </summary>
		partial void OnScreenCodeIDChanged();

        /// <summary>
        /// On ScreenCodeID column data entity changing.
        /// </summary>
		partial void OnScreenCodeIDChanging();

        /// <summary>
        /// On ScreenGroupOrder column data entity changed.
        /// </summary>
		partial void OnScreenGroupOrderChanged();

        /// <summary>
        /// On ScreenGroupOrder column data entity changing.
        /// </summary>
		partial void OnScreenGroupOrderChanging();

        /// <summary>
        /// On ScreenVisible column data entity changed.
        /// </summary>
		partial void OnScreenVisibleChanged();

        /// <summary>
        /// On ScreenVisible column data entity changing.
        /// </summary>
		partial void OnScreenVisibleChanging();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Screen()
        {
            OnCreated();
        }
        
        /// <summary>
        /// Gets sets, the screenid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the screenid property for the object.")]
        [DataMemberAttribute(Name = "ScreenID")]
        [XmlElementAttribute(ElementName = "ScreenID", IsNullable = false)]
        [DataColumnAttribute("ScreenID", IsPrimaryKey = true, IsAutoGenerated = true, DbType = "bigint", Length = 8, IsNullable = false)]
        public long ScreenID
        {
            get
            {
                return this._ScreenID;
            }
            set
            {
                if ((this._ScreenID != value))
                {
                    this.OnScreenIDChanging();
                    this.SendPropertyChanging("ScreenID");
                    this._ScreenID = value;
                    this.SendPropertyChanged("ScreenID");
                    this.OnScreenIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the applicationid property for the object.")]
        [DataMemberAttribute(Name = "ApplicationID")]
        [XmlElementAttribute(ElementName = "ApplicationID", IsNullable = false)]
        [DataColumnAttribute("ApplicationID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long ApplicationID
        {
            get
            {
                return this._ApplicationID;
            }
            set
            {
                if ((this._ApplicationID != value))
                {
                    this.OnApplicationIDChanging();
                    this.SendPropertyChanging("ApplicationID");
                    this._ApplicationID = value;
                    this.SendPropertyChanged("ApplicationID");
                    this.OnApplicationIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the screenname property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the screenname property for the object.")]
        [DataMemberAttribute(Name = "ScreenName")]
        [XmlElementAttribute(ElementName = "ScreenName", IsNullable = false)]
        [DataColumnAttribute("ScreenName", DbType = "varchar", Length = 50, IsNullable = false)]
        public string ScreenName
        {
            get
            {
                return this._ScreenName;
            }
            set
            {
                if ((this._ScreenName != value))
                {
                    this.OnScreenNameChanging();
                    this.SendPropertyChanging("ScreenName");
                    this._ScreenName = value;
                    this.SendPropertyChanged("ScreenName");
                    this.OnScreenNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the screendescription property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the screendescription property for the object.")]
        [DataMemberAttribute(Name = "ScreenDescription")]
        [XmlElementAttribute(ElementName = "ScreenDescription", IsNullable = false)]
        [DataColumnAttribute("ScreenDescription", DbType = "varchar", Length = 500, IsNullable = false)]
        public string ScreenDescription
        {
            get
            {
                return this._ScreenDescription;
            }
            set
            {
                if ((this._ScreenDescription != value))
                {
                    this.OnScreenDescriptionChanging();
                    this.SendPropertyChanging("ScreenDescription");
                    this._ScreenDescription = value;
                    this.SendPropertyChanged("ScreenDescription");
                    this.OnScreenDescriptionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the screencodeid property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the screencodeid property for the object.")]
        [DataMemberAttribute(Name = "ScreenCodeID")]
        [XmlElementAttribute(ElementName = "ScreenCodeID", IsNullable = false)]
        [DataColumnAttribute("ScreenCodeID", DbType = "bigint", Length = 8, IsNullable = false)]
        public long ScreenCodeID
        {
            get
            {
                return this._ScreenCodeID;
            }
            set
            {
                if ((this._ScreenCodeID != value))
                {
                    this.OnScreenCodeIDChanging();
                    this.SendPropertyChanging("ScreenCodeID");
                    this._ScreenCodeID = value;
                    this.SendPropertyChanged("ScreenCodeID");
                    this.OnScreenCodeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the screengrouporder property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the screengrouporder property for the object.")]
        [DataMemberAttribute(Name = "ScreenGroupOrder")]
        [XmlElementAttribute(ElementName = "ScreenGroupOrder", IsNullable = false)]
        [DataColumnAttribute("ScreenGroupOrder", DbType = "bigint", Length = 8, IsNullable = false)]
        public long ScreenGroupOrder
        {
            get
            {
                return this._ScreenGroupOrder;
            }
            set
            {
                if ((this._ScreenGroupOrder != value))
                {
                    this.OnScreenGroupOrderChanging();
                    this.SendPropertyChanging("ScreenGroupOrder");
                    this._ScreenGroupOrder = value;
                    this.SendPropertyChanged("ScreenGroupOrder");
                    this.OnScreenGroupOrderChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the screenvisible property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the screenvisible property for the object.")]
        [DataMemberAttribute(Name = "ScreenVisible")]
        [XmlElementAttribute(ElementName = "ScreenVisible", IsNullable = false)]
        [DataColumnAttribute("ScreenVisible", DbType = "bit", Length = 1, IsNullable = false)]
        public bool ScreenVisible
        {
            get
            {
                return this._ScreenVisible;
            }
            set
            {
                if ((this._ScreenVisible != value))
                {
                    this.OnScreenVisibleChanging();
                    this.SendPropertyChanging("ScreenVisible");
                    this._ScreenVisible = value;
                    this.SendPropertyChanged("ScreenVisible");
                    this.OnScreenVisibleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the applicationid foreign key property for the object.
        /// </summary>
        [CategoryAttribute("Reference")]
        [DescriptionAttribute("Gets sets, the applicationid foreign key property for the object.")]
        [EditorAttribute(typeof(DataObjectEditor), typeof(UITypeEditor))]
        [DataMemberAttribute(Name = "Application", IsRequired = false)]
        [XmlElementAttribute(ElementName = "Application", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.Application", ReferenceColumnName = "ApplicationID", ColumnName = "ApplicationID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = true)]
        public Data.Application Application
        {
            get
            {
                return this._Application;
            }
            set
            {
                if ((this._Application != value))
                {
                    this._Application = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the changelog reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the changelog reference property for the object.")]
        [DataMemberAttribute(Name = "ChangeLogCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "ChangeLogCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.ChangeLog", ColumnName = "ScreenID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.ChangeLog[] ChangeLogCollection
        {
            get
            {
                return this._ChangeLogCollection;
            }
            set
            {
                if ((this._ChangeLogCollection != value))
                {
                    this._ChangeLogCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the screenaccess reference property for the object.
        /// </summary>
        [CategoryAttribute("Collection")]
        [DescriptionAttribute("Gets sets, the screenaccess reference property for the object.")]
        [DataMemberAttribute(Name = "ScreenAccessCollection", IsRequired = false)]
        [XmlArrayAttribute(ElementName = "ScreenAccessCollection", IsNullable = true)]
        [DataColumnForeignKeyAttribute("dbo.ScreenAccess", ColumnName = "ScreenID", ColumnType = "bigint", Length = 8, IsNullable = true, IsReference = false)]
        public Data.ScreenAccess[] ScreenAccessCollection
        {
            get
            {
                return this._ScreenAccessCollection;
            }
            set
            {
                if ((this._ScreenAccessCollection != value))
                {
                    this._ScreenAccessCollection = value;
                }
            }
        }
        
        /// <summary>
        /// Create a new screen data entity.
        /// </summary>
        /// <param name="screenID">Initial value of ScreenID.</param>
        /// <param name="applicationID">Initial value of ApplicationID.</param>
        /// <param name="screenName">Initial value of ScreenName.</param>
        /// <param name="screenDescription">Initial value of ScreenDescription.</param>
        /// <param name="screenCodeID">Initial value of ScreenCodeID.</param>
        /// <param name="screenGroupOrder">Initial value of ScreenGroupOrder.</param>
        /// <param name="screenVisible">Initial value of ScreenVisible.</param>
        /// <returns>The Data.Screen entity.</returns>
        public static Data.Screen CreateScreen(long screenID, long applicationID, string screenName, string screenDescription, long screenCodeID, long screenGroupOrder, bool screenVisible)
        {
            Data.Screen screen = new Data.Screen();
            screen.ScreenID = screenID;
            screen.ApplicationID = applicationID;
            screen.ScreenName = screenName;
            screen.ScreenDescription = screenDescription;
            screen.ScreenCodeID = screenCodeID;
            screen.ScreenGroupOrder = screenGroupOrder;
            screen.ScreenVisible = screenVisible;
            return screen;
        }
    }
}

