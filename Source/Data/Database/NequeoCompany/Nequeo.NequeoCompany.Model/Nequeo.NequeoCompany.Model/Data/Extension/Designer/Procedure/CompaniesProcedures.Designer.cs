// Warning 169 (Disables the 'Never used' warning)
#pragma warning disable 169
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nequeo.DataAccess.NequeoCompany.Data.Extension
{
    using System;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Data.Linq;
    using System.Data.Linq.SqlClient;
    using System.Data.Linq.Mapping;
    using Nequeo.Data.DataType;
    using Nequeo.Data;
    using Nequeo.Data.Linq;
    using Nequeo.Data.Control;
    using Nequeo.Data.Custom;
    using Nequeo.Data.LinqToSql;
    using Nequeo.Data.DataSet;
    using Nequeo.Data.Edm;
    using Nequeo.ComponentModel;
    
    
    /// <summary>
    /// The companies object class.
    /// </summary>
    public partial class Companies
    {
        
        #region Public Function Methods
        /// <summary>
        /// Execute the getcompanyemployeepaygbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetCompanyEmployeePAYGBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetCompanyEmployeePAYGBetweenDateResult> GetCompanyEmployeePAYGBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetCompanyEmployeePAYGBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getcompanyemployeesuperbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetCompanyEmployeeSuperBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetCompanyEmployeeSuperBetweenDateResult> GetCompanyEmployeeSuperBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetCompanyEmployeeSuperBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getcompanyemployeewagesbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetCompanyEmployeeWagesBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetCompanyEmployeeWagesBetweenDateResult> GetCompanyEmployeeWagesBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetCompanyEmployeeWagesBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getcompanyinvoicedetailsbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetCompanyInvoiceDetailsBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetCompanyInvoiceDetailsBetweenDateResult> GetCompanyInvoiceDetailsBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetCompanyInvoiceDetailsBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getcompanyinvoiceproductsbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetCompanyInvoiceProductsBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetCompanyInvoiceProductsBetweenDateResult> GetCompanyInvoiceProductsBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetCompanyInvoiceProductsBetweenDateResult>)(result.ReturnValue));
        }
        
        /// <summary>
        /// Execute the getcompanyvendordetailsbetweendate routine.
        /// </summary>
        /// <param name="fromDate">Initial value of FromDate.</param>
        /// <param name="toDate">Initial value of ToDate.</param>
        /// <returns>The execution result.</returns>
        [FunctionRoutineAttribute("dbo.GetCompanyVendorDetailsBetweenDate", FunctionRoutineType.StoredProcedure)]
        public virtual List<Data.Extended.GetCompanyVendorDetailsBetweenDateResult> GetCompanyVendorDetailsBetweenDate([FunctionParameterAttribute("@FromDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> fromDate, [FunctionParameterAttribute("@ToDate", "datetime", 8, ParameterDirection.Input, true)] System.Nullable<System.DateTime> toDate)
        {
            IExecuteFunctionResult result = Common.ExecuteFunction(Common, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
            return ((List<Data.Extended.GetCompanyVendorDetailsBetweenDateResult>)(result.ReturnValue));
        }
        #endregion
    }
}
namespace Nequeo.DataAccess.NequeoCompany.Data.Extended
{
    using System;
    using System.Text;
    using System.Data;
    using System.Threading;
    using System.Diagnostics;
    using System.Data.SqlClient;
    using System.Data.OleDb;
    using System.Data.Odbc;
    using System.Collections;
    using System.Reflection;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using System.Runtime.Serialization;
    using System.ComponentModel;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Data.Linq;
    using System.Data.Linq.SqlClient;
    using System.Data.Linq.Mapping;
    using Nequeo.Data.DataType;
    using Nequeo.Data;
    using Nequeo.Data.Linq;
    using Nequeo.Data.Control;
    using Nequeo.Data.Custom;
    using Nequeo.Data.LinqToSql;
    using Nequeo.Data.DataSet;
    using Nequeo.Data.Edm;
    using Nequeo.ComponentModel;
    
    
    #region GetCompanyEmployeePAYGBetweenDateResult Data Entity Type
    /// <summary>
    /// The getcompanyemployeepaygbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetCompanyEmployeePAYGBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetCompanyEmployeePAYGBetweenDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _TotalAmount;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetCompanyEmployeePAYGBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totalamount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totalamount property for the object.")]
        [DataMemberAttribute(Name = "TotalAmount")]
        [XmlElementAttribute(ElementName = "TotalAmount", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalAmount
        {
            get
            {
                return this._TotalAmount;
            }
            set
            {
                if ((this._TotalAmount != value))
                {
                    this._TotalAmount = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getcompanyemployeepaygbetweendateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetCompanyEmployeePAYGBetweenDateResult entity.</returns>
        public static Data.Extended.GetCompanyEmployeePAYGBetweenDateResult CreateGetCompanyEmployeePAYGBetweenDateResult()
        {
            Data.Extended.GetCompanyEmployeePAYGBetweenDateResult getCompanyEmployeePAYGBetweenDateResult = new Data.Extended.GetCompanyEmployeePAYGBetweenDateResult();
            return getCompanyEmployeePAYGBetweenDateResult;
        }
    }
    #endregion
    
    #region GetCompanyEmployeeSuperBetweenDateResult Data Entity Type
    /// <summary>
    /// The getcompanyemployeesuperbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetCompanyEmployeeSuperBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetCompanyEmployeeSuperBetweenDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _TotalAmount;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetCompanyEmployeeSuperBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totalamount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totalamount property for the object.")]
        [DataMemberAttribute(Name = "TotalAmount")]
        [XmlElementAttribute(ElementName = "TotalAmount", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalAmount
        {
            get
            {
                return this._TotalAmount;
            }
            set
            {
                if ((this._TotalAmount != value))
                {
                    this._TotalAmount = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getcompanyemployeesuperbetweendateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetCompanyEmployeeSuperBetweenDateResult entity.</returns>
        public static Data.Extended.GetCompanyEmployeeSuperBetweenDateResult CreateGetCompanyEmployeeSuperBetweenDateResult()
        {
            Data.Extended.GetCompanyEmployeeSuperBetweenDateResult getCompanyEmployeeSuperBetweenDateResult = new Data.Extended.GetCompanyEmployeeSuperBetweenDateResult();
            return getCompanyEmployeeSuperBetweenDateResult;
        }
    }
    #endregion
    
    #region GetCompanyEmployeeWagesBetweenDateResult Data Entity Type
    /// <summary>
    /// The getcompanyemployeewagesbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetCompanyEmployeeWagesBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetCompanyEmployeeWagesBetweenDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _TotalNet;
        
        private System.Nullable<System.Decimal> _TotalPAYG;
        
        private System.Nullable<System.Decimal> _TotalPAYGSum;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetCompanyEmployeeWagesBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totalnet property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totalnet property for the object.")]
        [DataMemberAttribute(Name = "TotalNet")]
        [XmlElementAttribute(ElementName = "TotalNet", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalNet
        {
            get
            {
                return this._TotalNet;
            }
            set
            {
                if ((this._TotalNet != value))
                {
                    this._TotalNet = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totalpayg property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totalpayg property for the object.")]
        [DataMemberAttribute(Name = "TotalPAYG")]
        [XmlElementAttribute(ElementName = "TotalPAYG", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalPAYG
        {
            get
            {
                return this._TotalPAYG;
            }
            set
            {
                if ((this._TotalPAYG != value))
                {
                    this._TotalPAYG = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totalpaygsum property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totalpaygsum property for the object.")]
        [DataMemberAttribute(Name = "TotalPAYGSum")]
        [XmlElementAttribute(ElementName = "TotalPAYGSum", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalPAYGSum
        {
            get
            {
                return this._TotalPAYGSum;
            }
            set
            {
                if ((this._TotalPAYGSum != value))
                {
                    this._TotalPAYGSum = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getcompanyemployeewagesbetweendateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetCompanyEmployeeWagesBetweenDateResult entity.</returns>
        public static Data.Extended.GetCompanyEmployeeWagesBetweenDateResult CreateGetCompanyEmployeeWagesBetweenDateResult()
        {
            Data.Extended.GetCompanyEmployeeWagesBetweenDateResult getCompanyEmployeeWagesBetweenDateResult = new Data.Extended.GetCompanyEmployeeWagesBetweenDateResult();
            return getCompanyEmployeeWagesBetweenDateResult;
        }
    }
    #endregion
    
    #region GetCompanyInvoiceDetailsBetweenDateResult Data Entity Type
    /// <summary>
    /// The getcompanyinvoicedetailsbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetCompanyInvoiceDetailsBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetCompanyInvoiceDetailsBetweenDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _Totals;
        
        private System.Nullable<System.Single> _PreGST;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetCompanyInvoiceDetailsBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totals property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totals property for the object.")]
        [DataMemberAttribute(Name = "Totals")]
        [XmlElementAttribute(ElementName = "Totals", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Totals
        {
            get
            {
                return this._Totals;
            }
            set
            {
                if ((this._Totals != value))
                {
                    this._Totals = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the pregst property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the pregst property for the object.")]
        [DataMemberAttribute(Name = "PreGST")]
        [XmlElementAttribute(ElementName = "PreGST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Single> PreGST
        {
            get
            {
                return this._PreGST;
            }
            set
            {
                if ((this._PreGST != value))
                {
                    this._PreGST = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getcompanyinvoicedetailsbetweendateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetCompanyInvoiceDetailsBetweenDateResult entity.</returns>
        public static Data.Extended.GetCompanyInvoiceDetailsBetweenDateResult CreateGetCompanyInvoiceDetailsBetweenDateResult()
        {
            Data.Extended.GetCompanyInvoiceDetailsBetweenDateResult getCompanyInvoiceDetailsBetweenDateResult = new Data.Extended.GetCompanyInvoiceDetailsBetweenDateResult();
            return getCompanyInvoiceDetailsBetweenDateResult;
        }
    }
    #endregion
    
    #region GetCompanyInvoiceProductsBetweenDateResult Data Entity Type
    /// <summary>
    /// The getcompanyinvoiceproductsbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetCompanyInvoiceProductsBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetCompanyInvoiceProductsBetweenDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _Totals;
        
        private System.Nullable<System.Single> _PreGST;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetCompanyInvoiceProductsBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totals property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totals property for the object.")]
        [DataMemberAttribute(Name = "Totals")]
        [XmlElementAttribute(ElementName = "Totals", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> Totals
        {
            get
            {
                return this._Totals;
            }
            set
            {
                if ((this._Totals != value))
                {
                    this._Totals = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the pregst property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the pregst property for the object.")]
        [DataMemberAttribute(Name = "PreGST")]
        [XmlElementAttribute(ElementName = "PreGST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Single> PreGST
        {
            get
            {
                return this._PreGST;
            }
            set
            {
                if ((this._PreGST != value))
                {
                    this._PreGST = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getcompanyinvoiceproductsbetweendateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetCompanyInvoiceProductsBetweenDateResult entity.</returns>
        public static Data.Extended.GetCompanyInvoiceProductsBetweenDateResult CreateGetCompanyInvoiceProductsBetweenDateResult()
        {
            Data.Extended.GetCompanyInvoiceProductsBetweenDateResult getCompanyInvoiceProductsBetweenDateResult = new Data.Extended.GetCompanyInvoiceProductsBetweenDateResult();
            return getCompanyInvoiceProductsBetweenDateResult;
        }
    }
    #endregion
    
    #region GetCompanyVendorDetailsBetweenDateResult Data Entity Type
    /// <summary>
    /// The getcompanyvendordetailsbetweendateresult data object class.
    /// </summary>
    [DataContractAttribute(Name = "GetCompanyVendorDetailsBetweenDateResult", IsReference = true)]
    [SerializableAttribute()]
    [KnownTypeAttribute(typeof(DataBase))]
    public partial class GetCompanyVendorDetailsBetweenDateResult : DataBase
    {
        
        private System.Nullable<System.Decimal> _TotalAmount;
        
        private System.Nullable<System.Decimal> _TotalGST;
        
        #region Extensibility Method Definitions
        /// <summary>
        /// On create data entity.
        /// </summary>
		partial void OnCreated();

        /// <summary>
        /// On load data entity.
        /// </summary>
		partial void OnLoaded();

		#endregion
        
        /// <summary>
        /// Default constructor.
        /// </summary>
        public GetCompanyVendorDetailsBetweenDateResult()
        {
            OnCreated();
        }
        
        #region Public Column Properties
        /// <summary>
        /// Gets sets, the totalamount property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totalamount property for the object.")]
        [DataMemberAttribute(Name = "TotalAmount")]
        [XmlElementAttribute(ElementName = "TotalAmount", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalAmount
        {
            get
            {
                return this._TotalAmount;
            }
            set
            {
                if ((this._TotalAmount != value))
                {
                    this._TotalAmount = value;
                }
            }
        }
        
        /// <summary>
        /// Gets sets, the totalgst property for the object.
        /// </summary>
        [CategoryAttribute("Column")]
        [DescriptionAttribute("Gets sets, the totalgst property for the object.")]
        [DataMemberAttribute(Name = "TotalGST")]
        [XmlElementAttribute(ElementName = "TotalGST", IsNullable = true)]
        [SoapElementAttribute(IsNullable = true)]
        public System.Nullable<System.Decimal> TotalGST
        {
            get
            {
                return this._TotalGST;
            }
            set
            {
                if ((this._TotalGST != value))
                {
                    this._TotalGST = value;
                }
            }
        }
        #endregion
        
        /// <summary>
        /// Create a new getcompanyvendordetailsbetweendateresult data entity.
        /// </summary>
        /// <returns>The Data.Extended.GetCompanyVendorDetailsBetweenDateResult entity.</returns>
        public static Data.Extended.GetCompanyVendorDetailsBetweenDateResult CreateGetCompanyVendorDetailsBetweenDateResult()
        {
            Data.Extended.GetCompanyVendorDetailsBetweenDateResult getCompanyVendorDetailsBetweenDateResult = new Data.Extended.GetCompanyVendorDetailsBetweenDateResult();
            return getCompanyVendorDetailsBetweenDateResult;
        }
    }
    #endregion
}

#pragma warning restore 169
